/*! For license information please see 140.a6128e7c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_readyplayerme_visage=self.webpackChunk_readyplayerme_visage||[]).push([[140],{"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _toConsumableArray}});var arrayLikeToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");var unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return(0,arrayLikeToArray.Z)(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||(0,unsupportedIterableToArray.Z)(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},"./node_modules/@react-three/postprocessing/dist/EffectComposer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{x:function(){return EffectComposer},s:function(){return EffectComposerContext}});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),react=__webpack_require__("./node_modules/react/index.js"),index_99983b2d_esm=__webpack_require__("./node_modules/@react-three/fiber/dist/index-99983b2d.esm.js"),build=__webpack_require__("./node_modules/postprocessing/build/index.js");let webGL2Available;function isWebGL2Available(){var _a;if(void 0!==webGL2Available)return webGL2Available;try{let gl;const canvas=document.createElement("canvas");return webGL2Available=!(!window.WebGL2RenderingContext||!(gl=canvas.getContext("webgl2"))),gl&&(null==(_a=gl.getExtension("WEBGL_lose_context"))||_a.loseContext()),webGL2Available}catch(e){return webGL2Available=!1}}const EffectComposerContext=(0,react.createContext)(null),isConvolution=effect=>(effect.getAttributes()&build.VB.CONVOLUTION)===build.VB.CONVOLUTION,EffectComposer=react.memo((0,react.forwardRef)((({children:children,camera:_camera,scene:_scene,resolutionScale:resolutionScale,enabled:enabled=!0,renderPriority:renderPriority=1,autoClear:autoClear=!0,depthBuffer:depthBuffer,enableNormalPass:enableNormalPass,stencilBuffer:stencilBuffer,multisampling:multisampling=8,frameBufferType:frameBufferType=three_module.HalfFloatType},ref)=>{const{gl:gl,scene:defaultScene,camera:defaultCamera,size:size}=(0,index_99983b2d_esm.A)(),scene=_scene||defaultScene,camera=_camera||defaultCamera,[composer,normalPass,downSamplingPass]=(0,react.useMemo)((()=>{const webGL2Available=isWebGL2Available(),effectComposer=new build.xC(gl,{depthBuffer:depthBuffer,stencilBuffer:stencilBuffer,multisampling:multisampling>0&&webGL2Available?multisampling:0,frameBufferType:frameBufferType});effectComposer.addPass(new build.CD(scene,camera));let downSamplingPass2=null,normalPass2=null;return enableNormalPass&&(normalPass2=new build.gh(scene,camera),normalPass2.enabled=!1,effectComposer.addPass(normalPass2),void 0!==resolutionScale&&webGL2Available&&(downSamplingPass2=new build.xs({normalBuffer:normalPass2.texture,resolutionScale:resolutionScale}),downSamplingPass2.enabled=!1,effectComposer.addPass(downSamplingPass2))),[effectComposer,normalPass2,downSamplingPass2]}),[camera,gl,depthBuffer,stencilBuffer,multisampling,frameBufferType,scene,enableNormalPass,resolutionScale]);(0,react.useEffect)((()=>null==composer?void 0:composer.setSize(size.width,size.height)),[composer,size]),(0,index_99983b2d_esm.C)(((_,delta)=>{if(enabled){const currentAutoClear=gl.autoClear;gl.autoClear=autoClear,stencilBuffer&&!autoClear&&gl.clearStencil(),composer.render(delta),gl.autoClear=currentAutoClear}}),enabled?renderPriority:0);const group=(0,react.useRef)(null),instance=(0,index_99983b2d_esm.y)(group);(0,react.useLayoutEffect)((()=>{const passes=[];if(group.current&&instance.current&&composer){const children2=instance.current.objects;for(let i=0;i<children2.length;i++){const child=children2[i];if(child instanceof build.Qm){const effects=[child];if(!isConvolution(child)){let next=null;for(;(next=children2[i+1])instanceof build.Qm&&!isConvolution(next);)effects.push(next),i++}const pass=new build.H5(camera,...effects);passes.push(pass)}else child instanceof build.w2&&passes.push(child)}for(const pass of passes)null==composer||composer.addPass(pass);normalPass&&(normalPass.enabled=!0),downSamplingPass&&(downSamplingPass.enabled=!0)}return()=>{for(const pass of passes)null==composer||composer.removePass(pass);normalPass&&(normalPass.enabled=!1),downSamplingPass&&(downSamplingPass.enabled=!1)}}),[composer,children,camera,normalPass,downSamplingPass,instance]),(0,react.useEffect)((()=>{const currentTonemapping=gl.toneMapping;return gl.toneMapping=three_module.NoToneMapping,()=>{gl.toneMapping=currentTonemapping}}),[]);const state=(0,react.useMemo)((()=>({composer:composer,normalPass:normalPass,downSamplingPass:downSamplingPass,resolutionScale:resolutionScale,camera:camera,scene:scene})),[composer,normalPass,downSamplingPass,resolutionScale,camera,scene]);return(0,react.useImperativeHandle)(ref,(()=>composer),[composer]),(0,jsx_runtime.jsx)(EffectComposerContext.Provider,{value:state,children:(0,jsx_runtime.jsx)("group",{ref:group,children:children})})})))},"./node_modules/@react-three/postprocessing/dist/effects/Bloom.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{d:function(){return Bloom}});var postprocessing__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/postprocessing/build/index.js");const Bloom=(0,__webpack_require__("./node_modules/@react-three/postprocessing/dist/util.js").p1)(postprocessing__WEBPACK_IMPORTED_MODULE_1__.rk,{blendFunction:postprocessing__WEBPACK_IMPORTED_MODULE_1__.YQ.ADD})},"./node_modules/@react-three/postprocessing/dist/effects/BrightnessContrast.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{F:function(){return BrightnessContrast}});var postprocessing__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/postprocessing/build/index.js");const BrightnessContrast=(0,__webpack_require__("./node_modules/@react-three/postprocessing/dist/util.js").p1)(postprocessing__WEBPACK_IMPORTED_MODULE_1__.at)},"./node_modules/@react-three/postprocessing/dist/effects/HueSaturation.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{v:function(){return HueSaturation}});var postprocessing__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/postprocessing/build/index.js");const HueSaturation=(0,__webpack_require__("./node_modules/@react-three/postprocessing/dist/util.js").p1)(postprocessing__WEBPACK_IMPORTED_MODULE_1__.JL)},"./node_modules/@react-three/postprocessing/dist/effects/SSAO.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{K:function(){return SSAO}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),postprocessing__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/postprocessing/build/index.js"),_EffectComposer_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@react-three/postprocessing/dist/EffectComposer.js");const SSAO=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function SSAO2(props,ref){const{camera:camera,normalPass:normalPass,downSamplingPass:downSamplingPass,resolutionScale:resolutionScale}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_EffectComposer_js__WEBPACK_IMPORTED_MODULE_2__.s),effect=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null===normalPass&&null===downSamplingPass?(console.error("Please enable the NormalPass in the EffectComposer in order to use SSAO."),{}):new postprocessing__WEBPACK_IMPORTED_MODULE_3__.bn(camera,normalPass&&!downSamplingPass?normalPass.texture:null,{blendFunction:postprocessing__WEBPACK_IMPORTED_MODULE_3__.YQ.MULTIPLY,samples:30,rings:4,distanceThreshold:1,distanceFalloff:0,rangeThreshold:.5,rangeFalloff:.1,luminanceInfluence:.9,radius:20,bias:.5,intensity:1,color:void 0,normalDepthBuffer:downSamplingPass?downSamplingPass.texture:null,resolutionScale:null!=resolutionScale?resolutionScale:1,depthAwareUpsampling:!0,...props})),[camera,normalPass,props]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("primitive",{ref:ref,object:effect,dispose:null})}))},"./node_modules/@react-three/postprocessing/dist/effects/Vignette.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{s:function(){return Vignette}});var postprocessing__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/postprocessing/build/index.js");const Vignette=(0,__webpack_require__("./node_modules/@react-three/postprocessing/dist/util.js").p1)(postprocessing__WEBPACK_IMPORTED_MODULE_1__.Dd)},"./node_modules/@react-three/postprocessing/dist/util.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{p1:function(){return wrapEffect}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@react-three/fiber/dist/index-99983b2d.esm.js");let i=0;const components=new WeakMap,wrapEffect=(effect,defaults)=>react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((function Effect({blendFunction:blendFunction=(null==defaults?void 0:defaults.blendFunction),opacity:opacity=(null==defaults?void 0:defaults.opacity),...props},ref){let Component=components.get(effect);if(!Component){const key=`@react-three/postprocessing/${effect.name}-${i++}`;(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.e)({[key]:effect}),components.set(effect,Component=key)}const camera=(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state=>state.camera)),args=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>{var _a,_b;return[...null!=(_a=null==defaults?void 0:defaults.args)?_a:[],...null!=(_b=props.args)?_b:[{...defaults,...props}]]}),[JSON.stringify(props)]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component,{camera:camera,"blendMode-blendFunction":blendFunction,"blendMode-opacity-value":opacity,...props,ref:ref,args:args})}))},"./node_modules/postprocessing/build/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{CD:function(){return RenderPass},Dd:function(){return VignetteEffect},H5:function(){return EffectPass},JL:function(){return HueSaturationEffect},Qm:function(){return Effect},VB:function(){return EffectAttribute},YQ:function(){return BlendFunction},at:function(){return BrightnessContrastEffect},bn:function(){return SSAOEffect},gh:function(){return NormalPass},rk:function(){return BloomEffect},w2:function(){return Pass},xC:function(){return EffectComposer},xs:function(){return DepthDownsamplingPass}});var three__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/three/build/three.module.js"),dummyCamera=new three__WEBPACK_IMPORTED_MODULE_0__.Camera,geometry=null;var Pass=class _Pass{constructor(name="Pass",scene=new three__WEBPACK_IMPORTED_MODULE_0__.Scene,camera=dummyCamera){this.name=name,this.renderer=null,this.scene=scene,this.camera=camera,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(value){if(this.rtt===value){const material=this.fullscreenMaterial;null!==material&&(material.needsUpdate=!0),this.rtt=!value}}set mainScene(value){}set mainCamera(value){}setRenderer(renderer){this.renderer=renderer}isEnabled(){return this.enabled}setEnabled(value){this.enabled=value}get fullscreenMaterial(){return null!==this.screen?this.screen.material:null}set fullscreenMaterial(value){let screen=this.screen;null!==screen?screen.material=value:(screen=new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(function getFullscreenTriangle(){if(null===geometry){const vertices=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),uvs=new Float32Array([0,0,2,0,0,2]);void 0!==(geometry=new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry).setAttribute?(geometry.setAttribute("position",new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(vertices,3)),geometry.setAttribute("uv",new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(uvs,2))):(geometry.addAttribute("position",new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(vertices,3)),geometry.addAttribute("uv",new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(uvs,2)))}return geometry}(),value),screen.frustumCulled=!1,null===this.scene&&(this.scene=new three__WEBPACK_IMPORTED_MODULE_0__.Scene),this.scene.add(screen),this.screen=screen)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(value){this.fullscreenMaterial=value}getDepthTexture(){return null}setDepthTexture(depthTexture,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){throw new Error("Render method not implemented!")}setSize(width,height){}initialize(renderer,alpha,frameBufferType){}dispose(){for(const key of Object.keys(this)){const property=this[key];(property instanceof three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget||property instanceof three__WEBPACK_IMPORTED_MODULE_0__.Material||property instanceof three__WEBPACK_IMPORTED_MODULE_0__.Texture||property instanceof _Pass)&&this[key].dispose()}}},ClearMaskPass=class extends Pass{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const stencil=renderer.state.buffers.stencil;stencil.setLocked(!1),stencil.setTest(!1)}},revision=Number(three__WEBPACK_IMPORTED_MODULE_0__.REVISION.replace(/\D+/g,""));function updateFragmentShader(fragmentShader){return revision<154?fragmentShader.replace("colorspace_fragment","encodings_fragment"):fragmentShader}var common_default="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",CopyMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),opacity:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <dithering_pars_fragment>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\n#include <colorspace_fragment>\n#include <dithering_fragment>\n}",vertexShader:common_default}),this.fragmentShader=updateFragmentShader(this.fragmentShader)}set inputBuffer(value){this.uniforms.inputBuffer.value=value}setInputBuffer(value){this.uniforms.inputBuffer.value=value}getOpacity(value){return this.uniforms.opacity.value}setOpacity(value){this.uniforms.opacity.value=value}},CopyPass=class extends Pass{constructor(renderTarget,autoResize=!0){super("CopyPass"),this.fullscreenMaterial=new CopyMaterial,this.needsSwap=!1,this.renderTarget=renderTarget,void 0===renderTarget&&(this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{minFilter:three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,magFilter:three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=autoResize}get resize(){return this.autoResize}set resize(value){this.autoResize=value}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(value){this.autoResize=value}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){this.fullscreenMaterial.inputBuffer=inputBuffer.texture,renderer.setRenderTarget(this.renderToScreen?null:this.renderTarget),renderer.render(this.scene,this.camera)}setSize(width,height){this.autoResize&&this.renderTarget.setSize(width,height)}initialize(renderer,alpha,frameBufferType){void 0!==frameBufferType&&(this.renderTarget.texture.type=frameBufferType,frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":null!==renderer&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(this.renderTarget.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace))}},color=new three__WEBPACK_IMPORTED_MODULE_0__.Color,ClearPass=class extends Pass{constructor(color2=!0,depth=!0,stencil=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=color2,this.depth=depth,this.stencil=stencil,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(color2,depth,stencil){this.color=color2,this.depth=depth,this.stencil=stencil}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(value){this.overrideClearColor=value}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(value){this.overrideClearAlpha=value}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const overrideClearColor=this.overrideClearColor,overrideClearAlpha=this.overrideClearAlpha,clearAlpha=renderer.getClearAlpha(),hasOverrideClearColor=null!==overrideClearColor,hasOverrideClearAlpha=overrideClearAlpha>=0;hasOverrideClearColor?(renderer.getClearColor(color),renderer.setClearColor(overrideClearColor,hasOverrideClearAlpha?overrideClearAlpha:clearAlpha)):hasOverrideClearAlpha&&renderer.setClearAlpha(overrideClearAlpha),renderer.setRenderTarget(this.renderToScreen?null:inputBuffer),renderer.clear(this.color,this.depth,this.stencil),hasOverrideClearColor?renderer.setClearColor(color,clearAlpha):hasOverrideClearAlpha&&renderer.setClearAlpha(clearAlpha)}},MaskPass=class extends Pass{constructor(scene,camera){super("MaskPass",scene,camera),this.needsSwap=!1,this.clearPass=new ClearPass(!1,!1,!0),this.inverse=!1}set mainScene(value){this.scene=value}set mainCamera(value){this.camera=value}get inverted(){return this.inverse}set inverted(value){this.inverse=value}get clear(){return this.clearPass.enabled}set clear(value){this.clearPass.enabled=value}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(value){this.inverted=value}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const context=renderer.getContext(),buffers=renderer.state.buffers,scene=this.scene,camera=this.camera,clearPass=this.clearPass,writeValue=this.inverted?0:1,clearValue=1-writeValue;buffers.color.setMask(!1),buffers.depth.setMask(!1),buffers.color.setLocked(!0),buffers.depth.setLocked(!0),buffers.stencil.setTest(!0),buffers.stencil.setOp(context.REPLACE,context.REPLACE,context.REPLACE),buffers.stencil.setFunc(context.ALWAYS,writeValue,4294967295),buffers.stencil.setClear(clearValue),buffers.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?clearPass.render(renderer,null):(clearPass.render(renderer,inputBuffer),clearPass.render(renderer,outputBuffer))),this.renderToScreen?(renderer.setRenderTarget(null),renderer.render(scene,camera)):(renderer.setRenderTarget(inputBuffer),renderer.render(scene,camera),renderer.setRenderTarget(outputBuffer),renderer.render(scene,camera)),buffers.color.setLocked(!1),buffers.depth.setLocked(!1),buffers.stencil.setLocked(!1),buffers.stencil.setFunc(context.EQUAL,1,4294967295),buffers.stencil.setOp(context.KEEP,context.KEEP,context.KEEP),buffers.stencil.setLocked(!0)}},EffectComposer=class{constructor(renderer=null,{depthBuffer:depthBuffer=!0,stencilBuffer:stencilBuffer=!1,multisampling:multisampling=0,frameBufferType:frameBufferType}={}){this.renderer=null,this.inputBuffer=this.createBuffer(depthBuffer,stencilBuffer,frameBufferType,multisampling),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new CopyPass,this.depthTexture=null,this.passes=[],this.timer=new class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(value){"undefined"!=typeof document&&void 0!==document.hidden&&(value?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=value)}get delta(){return.001*this._delta}get fixedDelta(){return.001*this._fixedDelta}set fixedDelta(value){this._fixedDelta=1e3*value}get elapsed(){return.001*this._elapsed}update(timestamp){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(void 0!==timestamp?timestamp:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(e){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},this.autoRenderToScreen=!0,this.setRenderer(renderer)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(value){const buffer=this.inputBuffer,multisampling=this.multisampling;multisampling>0&&value>0?(this.inputBuffer.samples=value,this.outputBuffer.samples=value,this.inputBuffer.dispose(),this.outputBuffer.dispose()):multisampling!==value&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(buffer.depthBuffer,buffer.stencilBuffer,buffer.texture.type,value),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(renderer){if(this.renderer=renderer,null!==renderer){const size=renderer.getSize(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),alpha=renderer.getContext().getContextAttributes().alpha,frameBufferType=this.inputBuffer.texture.type;frameBufferType===three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(this.inputBuffer.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace,this.outputBuffer.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace,this.inputBuffer.dispose(),this.outputBuffer.dispose()),renderer.autoClear=!1,this.setSize(size.width,size.height);for(const pass of this.passes)pass.initialize(renderer,alpha,frameBufferType)}}replaceRenderer(renderer,updateDOM=!0){const oldRenderer=this.renderer,parent=oldRenderer.domElement.parentNode;return this.setRenderer(renderer),updateDOM&&null!==parent&&(parent.removeChild(oldRenderer.domElement),parent.appendChild(renderer.domElement)),oldRenderer}createDepthTexture(){const depthTexture=this.depthTexture=new three__WEBPACK_IMPORTED_MODULE_0__.DepthTexture;return this.inputBuffer.depthTexture=depthTexture,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(depthTexture.format=three__WEBPACK_IMPORTED_MODULE_0__.DepthStencilFormat,depthTexture.type=three__WEBPACK_IMPORTED_MODULE_0__.UnsignedInt248Type):depthTexture.type=three__WEBPACK_IMPORTED_MODULE_0__.UnsignedIntType,depthTexture}deleteDepthTexture(){if(null!==this.depthTexture){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const pass of this.passes)pass.setDepthTexture(null)}}createBuffer(depthBuffer,stencilBuffer,type,multisampling){const renderer=this.renderer,size=null===renderer?new three__WEBPACK_IMPORTED_MODULE_0__.Vector2:renderer.getDrawingBufferSize(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),options={minFilter:three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,magFilter:three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,stencilBuffer:stencilBuffer,depthBuffer:depthBuffer,type:type},renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(size.width,size.height,options);return multisampling>0&&(renderTarget.ignoreDepthForMultisampleCopy=!1,renderTarget.samples=multisampling),type===three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType&&null!==renderer&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(renderTarget.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace),renderTarget.texture.name="EffectComposer.Buffer",renderTarget.texture.generateMipmaps=!1,renderTarget}setMainScene(scene){for(const pass of this.passes)pass.mainScene=scene}setMainCamera(camera){for(const pass of this.passes)pass.mainCamera=camera}addPass(pass,index){const passes=this.passes,renderer=this.renderer,drawingBufferSize=renderer.getDrawingBufferSize(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),alpha=renderer.getContext().getContextAttributes().alpha,frameBufferType=this.inputBuffer.texture.type;if(pass.setRenderer(renderer),pass.setSize(drawingBufferSize.width,drawingBufferSize.height),pass.initialize(renderer,alpha,frameBufferType),this.autoRenderToScreen&&(passes.length>0&&(passes[passes.length-1].renderToScreen=!1),pass.renderToScreen&&(this.autoRenderToScreen=!1)),void 0!==index?passes.splice(index,0,pass):passes.push(pass),this.autoRenderToScreen&&(passes[passes.length-1].renderToScreen=!0),pass.needsDepthTexture||null!==this.depthTexture)if(null===this.depthTexture){const depthTexture=this.createDepthTexture();for(pass of passes)pass.setDepthTexture(depthTexture)}else pass.setDepthTexture(this.depthTexture)}removePass(pass){const passes=this.passes,index=passes.indexOf(pass);if(-1!==index&&passes.splice(index,1).length>0){if(null!==this.depthTexture){const reducer=(a,b)=>a||b.needsDepthTexture;passes.reduce(reducer,!1)||(pass.getDepthTexture()===this.depthTexture&&pass.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&index===passes.length&&(pass.renderToScreen=!1,passes.length>0&&(passes[passes.length-1].renderToScreen=!0))}}removeAllPasses(){const passes=this.passes;this.deleteDepthTexture(),passes.length>0&&(this.autoRenderToScreen&&(passes[passes.length-1].renderToScreen=!1),this.passes=[])}render(deltaTime){const renderer=this.renderer,copyPass=this.copyPass;let context,stencil,buffer,inputBuffer=this.inputBuffer,outputBuffer=this.outputBuffer,stencilTest=!1;void 0===deltaTime&&(this.timer.update(),deltaTime=this.timer.getDelta());for(const pass of this.passes)pass.enabled&&(pass.render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest),pass.needsSwap&&(stencilTest&&(copyPass.renderToScreen=pass.renderToScreen,context=renderer.getContext(),stencil=renderer.state.buffers.stencil,stencil.setFunc(context.NOTEQUAL,1,4294967295),copyPass.render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest),stencil.setFunc(context.EQUAL,1,4294967295)),buffer=inputBuffer,inputBuffer=outputBuffer,outputBuffer=buffer),pass instanceof MaskPass?stencilTest=!0:pass instanceof ClearMaskPass&&(stencilTest=!1))}setSize(width,height,updateStyle){const renderer=this.renderer,currentSize=renderer.getSize(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2);void 0!==width&&void 0!==height||(width=currentSize.width,height=currentSize.height),currentSize.width===width&&currentSize.height===height||renderer.setSize(width,height,updateStyle);const drawingBufferSize=renderer.getDrawingBufferSize(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2);this.inputBuffer.setSize(drawingBufferSize.width,drawingBufferSize.height),this.outputBuffer.setSize(drawingBufferSize.width,drawingBufferSize.height);for(const pass of this.passes)pass.setSize(drawingBufferSize.width,drawingBufferSize.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const pass of this.passes)pass.dispose();this.passes=[],null!==this.inputBuffer&&this.inputBuffer.dispose(),null!==this.outputBuffer&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},EffectAttribute={NONE:0,DEPTH:1,CONVOLUTION:2},EffectShaderSection={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"};var workaroundEnabled=!1,OverrideMaterialManager=class{constructor(material=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(material),this.meshCount=0,this.replaceMaterial=node=>{if(node.isMesh){let materials;if(node.material.flatShading)switch(node.material.side){case three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide:materials=this.materialsFlatShadedDoubleSide;break;case three__WEBPACK_IMPORTED_MODULE_0__.BackSide:materials=this.materialsFlatShadedBackSide;break;default:materials=this.materialsFlatShaded}else switch(node.material.side){case three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide:materials=this.materialsDoubleSide;break;case three__WEBPACK_IMPORTED_MODULE_0__.BackSide:materials=this.materialsBackSide;break;default:materials=this.materials}this.originalMaterials.set(node,node.material),node.isSkinnedMesh?node.material=materials[2]:node.isInstancedMesh?node.material=materials[1]:node.material=materials[0],++this.meshCount}}}cloneMaterial(material){if(!(material instanceof three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial))return material.clone();const uniforms=material.uniforms,textureUniforms=new Map;for(const key in uniforms){const value=uniforms[key].value;value.isRenderTargetTexture&&(uniforms[key].value=null,textureUniforms.set(key,value))}const clone=material.clone();for(const entry of textureUniforms)uniforms[entry[0]].value=entry[1],clone.uniforms[entry[0]].value=entry[1];return clone}setMaterial(material){if(this.disposeMaterials(),this.material=material,null!==material){const materials=this.materials=[this.cloneMaterial(material),this.cloneMaterial(material),this.cloneMaterial(material)];for(const m2 of materials)m2.uniforms=Object.assign({},material.uniforms),m2.side=three__WEBPACK_IMPORTED_MODULE_0__.FrontSide;materials[2].skinning=!0,this.materialsBackSide=materials.map((m2=>{const c2=this.cloneMaterial(m2);return c2.uniforms=Object.assign({},material.uniforms),c2.side=three__WEBPACK_IMPORTED_MODULE_0__.BackSide,c2})),this.materialsDoubleSide=materials.map((m2=>{const c2=this.cloneMaterial(m2);return c2.uniforms=Object.assign({},material.uniforms),c2.side=three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide,c2})),this.materialsFlatShaded=materials.map((m2=>{const c2=this.cloneMaterial(m2);return c2.uniforms=Object.assign({},material.uniforms),c2.flatShading=!0,c2})),this.materialsFlatShadedBackSide=materials.map((m2=>{const c2=this.cloneMaterial(m2);return c2.uniforms=Object.assign({},material.uniforms),c2.flatShading=!0,c2.side=three__WEBPACK_IMPORTED_MODULE_0__.BackSide,c2})),this.materialsFlatShadedDoubleSide=materials.map((m2=>{const c2=this.cloneMaterial(m2);return c2.uniforms=Object.assign({},material.uniforms),c2.flatShading=!0,c2.side=three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide,c2}))}}render(renderer,scene,camera){const shadowMapEnabled=renderer.shadowMap.enabled;if(renderer.shadowMap.enabled=!1,workaroundEnabled){const originalMaterials=this.originalMaterials;this.meshCount=0,scene.traverse(this.replaceMaterial),renderer.render(scene,camera);for(const entry of originalMaterials)entry[0].material=entry[1];this.meshCount!==originalMaterials.size&&originalMaterials.clear()}else{const overrideMaterial=scene.overrideMaterial;scene.overrideMaterial=this.material,renderer.render(scene,camera),scene.overrideMaterial=overrideMaterial}renderer.shadowMap.enabled=shadowMapEnabled}disposeMaterials(){if(null!==this.material){const materials=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const m2 of materials)m2.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return workaroundEnabled}static set workaroundEnabled(value){workaroundEnabled=value}},Resolution=class extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher{constructor(resizable,width=-1,height=-1,scale=1){super(),this.resizable=resizable,this.baseSize=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(1,1),this.preferredSize=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(width,height),this.target=this.preferredSize,this.s=scale,this.effectiveSize=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,this.addEventListener("change",(()=>this.updateEffectiveSize())),this.updateEffectiveSize()}updateEffectiveSize(){const base=this.baseSize,preferred=this.preferredSize,effective=this.effectiveSize,scale=this.scale;-1!==preferred.width?effective.width=preferred.width:-1!==preferred.height?effective.width=Math.round(preferred.height*(base.width/Math.max(base.height,1))):effective.width=Math.round(base.width*scale),-1!==preferred.height?effective.height=preferred.height:-1!==preferred.width?effective.height=Math.round(preferred.width/Math.max(base.width/Math.max(base.height,1),1)):effective.height=Math.round(base.height*scale)}get width(){return this.effectiveSize.width}set width(value){this.preferredWidth=value}get height(){return this.effectiveSize.height}set height(value){this.preferredHeight=value}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(value){this.s!==value&&(this.s=value,this.preferredSize.setScalar(-1),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(value){this.scale=value}get baseWidth(){return this.baseSize.width}set baseWidth(value){this.baseSize.width!==value&&(this.baseSize.width=value,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(value){this.baseWidth=value}get baseHeight(){return this.baseSize.height}set baseHeight(value){this.baseSize.height!==value&&(this.baseSize.height=value,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(value){this.baseHeight=value}setBaseSize(width,height){this.baseSize.width===width&&this.baseSize.height===height||(this.baseSize.set(width,height),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(value){this.preferredSize.width!==value&&(this.preferredSize.width=value,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(value){this.preferredWidth=value}get preferredHeight(){return this.preferredSize.height}set preferredHeight(value){this.preferredSize.height!==value&&(this.preferredSize.height=value,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(value){this.preferredHeight=value}setPreferredSize(width,height){this.preferredSize.width===width&&this.preferredSize.height===height||(this.preferredSize.set(width,height),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(resolution){this.s=resolution.scale,this.baseSize.set(resolution.baseWidth,resolution.baseHeight),this.preferredSize.set(resolution.preferredWidth,resolution.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return-1}},BlendFunction={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},blendFunctions=new Map([[BlendFunction.ADD,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}"],[BlendFunction.ALPHA,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}"],[BlendFunction.AVERAGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}"],[BlendFunction.COLOR,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[BlendFunction.COLOR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}"],[BlendFunction.COLOR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}"],[BlendFunction.DARKEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}"],[BlendFunction.DIFFERENCE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}"],[BlendFunction.DIVIDE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}"],[BlendFunction.DST,null],[BlendFunction.EXCLUSION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}"],[BlendFunction.HARD_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}"],[BlendFunction.HARD_MIX,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}"],[BlendFunction.HUE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}"],[BlendFunction.INVERT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}"],[BlendFunction.INVERT_RGB,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}"],[BlendFunction.LIGHTEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}"],[BlendFunction.LINEAR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}"],[BlendFunction.LINEAR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}"],[BlendFunction.LINEAR_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}"],[BlendFunction.LUMINOSITY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[BlendFunction.MULTIPLY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}"],[BlendFunction.NEGATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}"],[BlendFunction.NORMAL,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}"],[BlendFunction.OVERLAY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}"],[BlendFunction.PIN_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}"],[BlendFunction.REFLECT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}"],[BlendFunction.SATURATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[BlendFunction.SCREEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}"],[BlendFunction.SOFT_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}"],[BlendFunction.SRC,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}"],[BlendFunction.SUBTRACT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}"],[BlendFunction.VIVID_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}"]]),BlendMode=class extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher{constructor(blendFunction,opacity=1){super(),this._blendFunction=blendFunction,this.opacity=new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(opacity)}getOpacity(){return this.opacity.value}setOpacity(value){this.opacity.value=value}get blendFunction(){return this._blendFunction}set blendFunction(value){this._blendFunction=value,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(value){this.blendFunction=value}getShaderCode(){return blendFunctions.get(this.blendFunction)}},KernelSize_MEDIUM=2,KernelSize_LARGE=3,kernelPresets=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],KawaseBlurMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(texelSize=new three__WEBPACK_IMPORTED_MODULE_0__.Vector4){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector4),scale:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),kernel:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(0)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;\n#include <colorspace_fragment>\n}",vertexShader:"uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.fragmentShader=updateFragmentShader(this.fragmentShader),this.setTexelSize(texelSize.x,texelSize.y),this.kernelSize=KernelSize_MEDIUM}set inputBuffer(value){this.uniforms.inputBuffer.value=value}setInputBuffer(value){this.inputBuffer=value}get kernelSequence(){return kernelPresets[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(value){this.uniforms.scale.value=value}getScale(){return this.uniforms.scale.value}setScale(value){this.uniforms.scale.value=value}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(value){this.uniforms.kernel.value=value}setKernel(value){this.kernel=value}setTexelSize(x,y){this.uniforms.texelSize.value.set(x,y,.5*x,.5*y)}setSize(width,height){const x=1/width,y=1/height;this.uniforms.texelSize.value.set(x,y,.5*x,.5*y)}},KawaseBlurPass=class extends Pass{constructor({kernelSize:kernelSize=KernelSize_MEDIUM,resolutionScale:resolutionScale=.5,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("KawaseBlurPass"),this.renderTargetA=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight))),this._blurMaterial=new KawaseBlurMaterial,this._blurMaterial.kernelSize=kernelSize,this.copyMaterial=new CopyMaterial}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(value){this._blurMaterial=value}get dithering(){return this.copyMaterial.dithering}set dithering(value){this.copyMaterial.dithering=value}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(value){this.blurMaterial.kernelSize=value}get width(){return this.resolution.width}set width(value){this.resolution.preferredWidth=value}get height(){return this.resolution.height}set height(value){this.resolution.preferredHeight=value}get scale(){return this.blurMaterial.scale}set scale(value){this.blurMaterial.scale=value}getScale(){return this.blurMaterial.scale}setScale(value){this.blurMaterial.scale=value}getKernelSize(){return this.kernelSize}setKernelSize(value){this.kernelSize=value}getResolutionScale(){return this.resolution.scale}setResolutionScale(scale){this.resolution.scale=scale}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const scene=this.scene,camera=this.camera,renderTargetA=this.renderTargetA,renderTargetB=this.renderTargetB,material=this.blurMaterial,kernelSequence=material.kernelSequence;let previousBuffer=inputBuffer;this.fullscreenMaterial=material;for(let i=0,l=kernelSequence.length;i<l;++i){const buffer=0==(1&i)?renderTargetA:renderTargetB;material.kernel=kernelSequence[i],material.inputBuffer=previousBuffer.texture,renderer.setRenderTarget(buffer),renderer.render(scene,camera),previousBuffer=buffer}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=previousBuffer.texture,renderer.setRenderTarget(this.renderToScreen?null:outputBuffer),renderer.render(scene,camera)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height);const w=resolution.width,h=resolution.height;this.renderTargetA.setSize(w,h),this.renderTargetB.setSize(w,h),this.blurMaterial.setSize(width,height)}initialize(renderer,alpha,frameBufferType){void 0!==frameBufferType&&(this.renderTargetA.texture.type=frameBufferType,this.renderTargetB.texture.type=frameBufferType,frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):null!==renderer&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(this.renderTargetA.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace,this.renderTargetB.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace))}static get AUTO_SIZE(){return Resolution.AUTO_SIZE}},LuminanceMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(colorOutput=!1,luminanceRange=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:three__WEBPACK_IMPORTED_MODULE_0__.REVISION.replace(/\D+/g,"")},uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),threshold:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(0),smoothing:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),range:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef RANGE\nuniform vec2 range;\n#elif defined(THRESHOLD)\nuniform float threshold;uniform float smoothing;\n#endif\nvarying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);\n#ifdef RANGE\nfloat low=step(range.x,l);float high=step(l,range.y);l*=low*high;\n#elif defined(THRESHOLD)\nl=smoothstep(threshold,threshold+smoothing,l)*l;\n#endif\n#ifdef COLOR\ngl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);\n#else\ngl_FragColor=vec4(l);\n#endif\n}",vertexShader:common_default}),this.colorOutput=colorOutput,this.luminanceRange=luminanceRange}set inputBuffer(value){this.uniforms.inputBuffer.value=value}setInputBuffer(value){this.uniforms.inputBuffer.value=value}get threshold(){return this.uniforms.threshold.value}set threshold(value){this.smoothing>0||value>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=value}getThreshold(){return this.threshold}setThreshold(value){this.threshold=value}get smoothing(){return this.uniforms.smoothing.value}set smoothing(value){this.threshold>0||value>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=value}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(value){this.smoothing=value}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(value){}get colorOutput(){return void 0!==this.defines.COLOR}set colorOutput(value){value?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(value){return this.colorOutput}setColorOutputEnabled(value){this.colorOutput=value}get useRange(){return null!==this.luminanceRange}set useRange(value){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(value){null!==value?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=value,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(value){this.luminanceRange=value}},LuminancePass=class extends Pass{constructor({renderTarget:renderTarget,luminanceRange:luminanceRange,colorOutput:colorOutput,resolutionScale:resolutionScale=1,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("LuminancePass"),this.fullscreenMaterial=new LuminanceMaterial(colorOutput,luminanceRange),this.needsSwap=!1,this.renderTarget=renderTarget,void 0===this.renderTarget&&(this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight)))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){this.fullscreenMaterial.inputBuffer=inputBuffer.texture,renderer.setRenderTarget(this.renderToScreen?null:this.renderTarget),renderer.render(this.scene,this.camera)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height),this.renderTarget.setSize(resolution.width,resolution.height)}initialize(renderer,alpha,frameBufferType){void 0!==frameBufferType&&frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType&&(this.renderTarget.texture.type=frameBufferType,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},DownsamplingMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#define WEIGHT_INNER 0.125\n#define WEIGHT_OUTER 0.0555555\nvarying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;\n#include <colorspace_fragment>\n}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.fragmentShader=updateFragmentShader(this.fragmentShader)}set inputBuffer(value){this.uniforms.inputBuffer.value=value}setSize(width,height){this.uniforms.texelSize.value.set(1/width,1/height)}},UpsamplingMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),supportBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),radius:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(.85)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;\n#else\nuniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;\n#endif\nuniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);\n#include <colorspace_fragment>\n}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.fragmentShader=updateFragmentShader(this.fragmentShader)}set inputBuffer(value){this.uniforms.inputBuffer.value=value}set supportBuffer(value){this.uniforms.supportBuffer.value=value}get radius(){return this.uniforms.radius.value}set radius(value){this.uniforms.radius.value=value}setSize(width,height){this.uniforms.texelSize.value.set(1/width,1/height)}},MipmapBlurPass=class extends Pass{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new DownsamplingMaterial,this.upsamplingMaterial=new UpsamplingMaterial,this.resolution=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(value){if(this.levels!==value){const renderTarget=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let i=0;i<value;++i){const mipmap=renderTarget.clone();mipmap.texture.name="Downsampling.Mipmap"+i,this.downsamplingMipmaps.push(mipmap)}this.upsamplingMipmaps.push(renderTarget);for(let i=1,l=value-1;i<l;++i){const mipmap=renderTarget.clone();mipmap.texture.name="Upsampling.Mipmap"+i,this.upsamplingMipmaps.push(mipmap)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(value){this.upsamplingMaterial.radius=value}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const{scene:scene,camera:camera}=this,{downsamplingMaterial:downsamplingMaterial,upsamplingMaterial:upsamplingMaterial}=this,{downsamplingMipmaps:downsamplingMipmaps,upsamplingMipmaps:upsamplingMipmaps}=this;let previousBuffer=inputBuffer;this.fullscreenMaterial=downsamplingMaterial;for(let i=0,l=downsamplingMipmaps.length;i<l;++i){const mipmap=downsamplingMipmaps[i];downsamplingMaterial.setSize(previousBuffer.width,previousBuffer.height),downsamplingMaterial.inputBuffer=previousBuffer.texture,renderer.setRenderTarget(mipmap),renderer.render(scene,camera),previousBuffer=mipmap}this.fullscreenMaterial=upsamplingMaterial;for(let i=upsamplingMipmaps.length-1;i>=0;--i){const mipmap=upsamplingMipmaps[i];upsamplingMaterial.setSize(previousBuffer.width,previousBuffer.height),upsamplingMaterial.inputBuffer=previousBuffer.texture,upsamplingMaterial.supportBuffer=downsamplingMipmaps[i].texture,renderer.setRenderTarget(mipmap),renderer.render(scene,camera),previousBuffer=mipmap}}setSize(width,height){const resolution=this.resolution;resolution.set(width,height);let w=resolution.width,h=resolution.height;for(let i=0,l=this.downsamplingMipmaps.length;i<l;++i)w=Math.round(.5*w),h=Math.round(.5*h),this.downsamplingMipmaps[i].setSize(w,h),i<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[i].setSize(w,h)}initialize(renderer,alpha,frameBufferType){if(void 0!==frameBufferType){const mipmaps=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const mipmap of mipmaps)mipmap.texture.type=frameBufferType;if(frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(null!==renderer&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace)for(const mipmap of mipmaps)mipmap.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace}}dispose(){super.dispose();for(const mipmap of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))mipmap.dispose()}},Effect=class extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher{constructor(name,fragmentShader,{attributes:attributes=EffectAttribute.NONE,blendFunction:blendFunction=BlendFunction.NORMAL,defines:defines=new Map,uniforms:uniforms=new Map,extensions:extensions=null,vertexShader:vertexShader=null}={}){super(),this.name=name,this.renderer=null,this.attributes=attributes,this.fragmentShader=fragmentShader,this.vertexShader=vertexShader,this.defines=defines,this.uniforms=uniforms,this.extensions=extensions,this.blendMode=new BlendMode(blendFunction),this.blendMode.addEventListener("change",(event=>this.setChanged())),this._inputColorSpace=three__WEBPACK_IMPORTED_MODULE_0__.LinearSRGBColorSpace,this._outputColorSpace=three__WEBPACK_IMPORTED_MODULE_0__.NoColorSpace}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(value){this._inputColorSpace=value,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(value){this._outputColorSpace=value,this.setChanged()}set mainScene(value){}set mainCamera(value){}getName(){return this.name}setRenderer(renderer){this.renderer=renderer}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(attributes){this.attributes=attributes,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(fragmentShader){this.fragmentShader=fragmentShader,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(vertexShader){this.vertexShader=vertexShader,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(depthTexture,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){}update(renderer,inputBuffer,deltaTime){}setSize(width,height){}initialize(renderer,alpha,frameBufferType){}dispose(){for(const key of Object.keys(this)){const property=this[key];(property instanceof three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget||property instanceof three__WEBPACK_IMPORTED_MODULE_0__.Material||property instanceof three__WEBPACK_IMPORTED_MODULE_0__.Texture||property instanceof Pass)&&this[key].dispose()}}},BloomEffect=class extends Effect{constructor({blendFunction:blendFunction=BlendFunction.SCREEN,luminanceThreshold:luminanceThreshold=.9,luminanceSmoothing:luminanceSmoothing=.025,mipmapBlur:mipmapBlur=!1,intensity:intensity=1,radius:radius=.85,levels:levels=8,kernelSize:kernelSize=KernelSize_LARGE,resolutionScale:resolutionScale=.5,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("BloomEffect","#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D map;\n#else\nuniform lowp sampler2D map;\n#endif\nuniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 texel=texture2D(map,uv);outputColor=vec4(texel.rgb*intensity,texel.a);}",{blendFunction:blendFunction,uniforms:new Map([["map",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)],["intensity",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(intensity)]])}),this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new KawaseBlurPass({kernelSize:kernelSize}),this.luminancePass=new LuminancePass({colorOutput:!0}),this.luminanceMaterial.threshold=luminanceThreshold,this.luminanceMaterial.smoothing=luminanceSmoothing,this.mipmapBlurPass=new MipmapBlurPass,this.mipmapBlurPass.enabled=mipmapBlur,this.mipmapBlurPass.radius=radius,this.mipmapBlurPass.levels=levels,this.uniforms.get("map").value=mipmapBlur?this.mipmapBlurPass.texture:this.renderTarget.texture;const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight)))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(value){this.resolution.preferredWidth=value}get height(){return this.resolution.height}set height(value){this.resolution.preferredHeight=value}get dithering(){return this.blurPass.dithering}set dithering(value){this.blurPass.dithering=value}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(value){this.blurPass.kernelSize=value}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(value){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(value){this.uniforms.get("intensity").value=value}getIntensity(){return this.intensity}setIntensity(value){this.intensity=value}getResolutionScale(){return this.resolution.scale}setResolutionScale(scale){this.resolution.scale=scale}update(renderer,inputBuffer,deltaTime){const renderTarget=this.renderTarget,luminancePass=this.luminancePass;luminancePass.enabled?(luminancePass.render(renderer,inputBuffer),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(renderer,luminancePass.renderTarget):this.blurPass.render(renderer,luminancePass.renderTarget,renderTarget)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(renderer,inputBuffer):this.blurPass.render(renderer,inputBuffer,renderTarget)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height),this.renderTarget.setSize(resolution.width,resolution.height),this.blurPass.resolution.copy(resolution),this.luminancePass.setSize(width,height),this.mipmapBlurPass.setSize(width,height)}initialize(renderer,alpha,frameBufferType){this.blurPass.initialize(renderer,alpha,frameBufferType),this.luminancePass.initialize(renderer,alpha,frameBufferType),this.mipmapBlurPass.initialize(renderer,alpha,frameBufferType),void 0!==frameBufferType&&(this.renderTarget.texture.type=frameBufferType,null!==renderer&&renderer.outputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(this.renderTarget.texture.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace))}},BrightnessContrastEffect=class extends Effect{constructor({blendFunction:blendFunction=BlendFunction.SRC,brightness:brightness=0,contrast:contrast=0}={}){super("BrightnessContrastEffect","uniform float brightness;uniform float contrast;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=inputColor.rgb+vec3(brightness-0.5);if(contrast>0.0){color/=vec3(1.0-contrast);}else{color*=vec3(1.0+contrast);}outputColor=vec4(color+vec3(0.5),inputColor.a);}",{blendFunction:blendFunction,uniforms:new Map([["brightness",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(brightness)],["contrast",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(contrast)]])}),this.inputColorSpace=three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace}get brightness(){return this.uniforms.get("brightness").value}set brightness(value){this.uniforms.get("brightness").value=value}getBrightness(){return this.brightness}setBrightness(value){this.brightness=value}get contrast(){return this.uniforms.get("contrast").value}set contrast(value){this.uniforms.get("contrast").value=value}getContrast(){return this.contrast}setContrast(value){this.contrast=value}};function orthographicDepthToViewZ(depth,near,far){return depth*(near-far)-near}function viewZToOrthographicDepth(viewZ,near,far){return Math.min(Math.max((viewZ+near)/(near-far),0),1)}var ShaderPass=class extends Pass{constructor(material,input="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=material,this.input=input}setInput(input){this.input=input}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const uniforms=this.fullscreenMaterial.uniforms;null!==inputBuffer&&void 0!==uniforms&&void 0!==uniforms[this.input]&&(uniforms[this.input].value=inputBuffer.texture),renderer.setRenderTarget(this.renderToScreen?null:outputBuffer),renderer.render(this.scene,this.camera)}initialize(renderer,alpha,frameBufferType){void 0!==frameBufferType&&frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}};var NoiseTexture=class extends three__WEBPACK_IMPORTED_MODULE_0__.DataTexture{constructor(width,height,format=three__WEBPACK_IMPORTED_MODULE_0__.LuminanceFormat,type=three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType){super(function getNoise(size,format,type){const channels=new Map([[three__WEBPACK_IMPORTED_MODULE_0__.LuminanceFormat,1],[three__WEBPACK_IMPORTED_MODULE_0__.RedFormat,1],[three__WEBPACK_IMPORTED_MODULE_0__.RGFormat,2],[three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,4]]);let data;if(channels.has(format)||console.error("Invalid noise texture format"),type===three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType){data=new Uint8Array(size*channels.get(format));for(let i=0,l=data.length;i<l;++i)data[i]=255*Math.random()+.5}else{data=new Float32Array(size*channels.get(format));for(let i=0,l=data.length;i<l;++i)data[i]=Math.random()}return data}(width*height,format,type),width,height,format,type),this.needsUpdate=!0}};var RenderPass=class extends Pass{constructor(scene,camera,overrideMaterial=null){super("RenderPass",scene,camera),this.needsSwap=!1,this.clearPass=new ClearPass,this.overrideMaterialManager=null===overrideMaterial?null:new OverrideMaterialManager(overrideMaterial),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(value){this.scene=value}set mainCamera(value){this.camera=value}get renderToScreen(){return super.renderToScreen}set renderToScreen(value){super.renderToScreen=value,this.clearPass.renderToScreen=value}get overrideMaterial(){const manager=this.overrideMaterialManager;return null!==manager?manager.material:null}set overrideMaterial(value){const manager=this.overrideMaterialManager;null!==value?null!==manager?manager.setMaterial(value):this.overrideMaterialManager=new OverrideMaterialManager(value):null!==manager&&(manager.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(value){this.overrideMaterial=value}get clear(){return this.clearPass.enabled}set clear(value){this.clearPass.enabled=value}getSelection(){return this.selection}setSelection(value){this.selection=value}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(value){this.ignoreBackground=value}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(value){this.skipShadowMapUpdate=value}getClearPass(){return this.clearPass}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const scene=this.scene,camera=this.camera,selection=this.selection,mask=camera.layers.mask,background=scene.background,shadowMapAutoUpdate=renderer.shadowMap.autoUpdate,renderTarget=this.renderToScreen?null:inputBuffer;null!==selection&&camera.layers.set(selection.getLayer()),this.skipShadowMapUpdate&&(renderer.shadowMap.autoUpdate=!1),(this.ignoreBackground||null!==this.clearPass.overrideClearColor)&&(scene.background=null),this.clearPass.enabled&&this.clearPass.render(renderer,inputBuffer),renderer.setRenderTarget(renderTarget),null!==this.overrideMaterialManager?this.overrideMaterialManager.render(renderer,scene,camera):renderer.render(scene,camera),camera.layers.mask=mask,scene.background=background,renderer.shadowMap.autoUpdate=shadowMapAutoUpdate}},HueSaturationEffect=class extends Effect{constructor({blendFunction:blendFunction=BlendFunction.SRC,hue:hue=0,saturation:saturation=0}={}){super("HueSaturationEffect","uniform vec3 hue;uniform float saturation;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,hue.xyz),dot(inputColor.rgb,hue.zxy),dot(inputColor.rgb,hue.yzx));float average=(color.r+color.g+color.b)/3.0;vec3 diff=average-color;if(saturation>0.0){color+=diff*(1.0-1.0/(1.001-saturation));}else{color+=diff*-saturation;}outputColor=vec4(min(color,1.0),inputColor.a);}",{blendFunction:blendFunction,uniforms:new Map([["hue",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3)],["saturation",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(saturation)]])}),this.hue=hue}get saturation(){return this.uniforms.get("saturation").value}set saturation(value){this.uniforms.get("saturation").value=value}getSaturation(){return this.saturation}setSaturation(value){this.saturation=value}get hue(){const hue=this.uniforms.get("hue").value;return Math.acos((3*hue.x-1)/2)}set hue(value){const s=Math.sin(value),c2=Math.cos(value);this.uniforms.get("hue").value.set((2*c2+1)/3,(-Math.sqrt(3)*s-c2+1)/3,(Math.sqrt(3)*s-c2+1)/3)}getHue(){return this.hue}setHue(value){this.hue=value}};var VignetteTechnique_DEFAULT=0,VignetteTechnique_ESKIL=1,SSAOMaterial=(Math.PI,class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(camera){super({name:"SSAOMaterial",defines:{SAMPLES_INT:"0",INV_SAMPLES_FLOAT:"0.0",SPIRAL_TURNS:"0.0",RADIUS:"1.0",RADIUS_SQ:"1.0",DISTANCE_SCALING:"1",DEPTH_PACKING:"0"},uniforms:{depthBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),normalBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),normalDepthBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),noiseTexture:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),inverseProjectionMatrix:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4),projectionMatrix:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),cameraNearFar:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),distanceCutoff:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),proximityCutoff:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),noiseScale:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),minRadiusScale:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(.33),intensity:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),fade:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(.01),bias:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(0)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <packing>\n#ifdef NORMAL_DEPTH\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D normalDepthBuffer;\n#else\nuniform mediump sampler2D normalDepthBuffer;\n#endif\nfloat readDepth(const in vec2 uv){return texture2D(normalDepthBuffer,uv).a;}\n#else\nuniform lowp sampler2D normalBuffer;\n#if DEPTH_PACKING == 3201\nuniform lowp sampler2D depthBuffer;\n#elif defined(GL_FRAGMENT_PRECISION_HIGH)\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}\n#endif\nuniform lowp sampler2D noiseTexture;uniform mat4 inverseProjectionMatrix;uniform mat4 projectionMatrix;uniform vec2 texelSize;uniform vec2 cameraNearFar;uniform float intensity;uniform float minRadiusScale;uniform float fade;uniform float bias;uniform vec2 distanceCutoff;uniform vec2 proximityCutoff;varying vec2 vUv;varying vec2 vUv2;float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);\n#endif\n}vec3 getViewPosition(const in vec2 screenPosition,const in float depth,const in float viewZ){vec4 clipPosition=vec4(vec3(screenPosition,depth)*2.0-1.0,1.0);float clipW=projectionMatrix[2][3]*viewZ+projectionMatrix[3][3];clipPosition*=clipW;return(inverseProjectionMatrix*clipPosition).xyz;}float getAmbientOcclusion(const in vec3 p,const in vec3 n,const in float depth,const in vec2 uv){float radiusScale=1.0-smoothstep(0.0,distanceCutoff.y,depth);radiusScale=radiusScale*(1.0-minRadiusScale)+minRadiusScale;float radius=RADIUS*radiusScale;float noise=texture2D(noiseTexture,vUv2).r;float baseAngle=noise*PI2;float rings=SPIRAL_TURNS*PI2;float occlusion=0.0;int taps=0;for(int i=0;i<SAMPLES_INT;++i){float alpha=(float(i)+0.5)*INV_SAMPLES_FLOAT;float angle=alpha*rings+baseAngle;vec2 rotation=vec2(cos(angle),sin(angle));vec2 coords=alpha*radius*rotation*texelSize+uv;if(coords.s<0.0||coords.s>1.0||coords.t<0.0||coords.t>1.0){continue;}float sampleDepth=readDepth(coords);float viewZ=getViewZ(sampleDepth);\n#ifdef PERSPECTIVE_CAMERA\nfloat linearSampleDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);\n#else\nfloat linearSampleDepth=sampleDepth;\n#endif\nfloat proximity=abs(depth-linearSampleDepth);if(proximity<proximityCutoff.y){float falloff=1.0-smoothstep(proximityCutoff.x,proximityCutoff.y,proximity);vec3 Q=getViewPosition(coords,sampleDepth,viewZ);vec3 v=Q-p;float vv=dot(v,v);float vn=dot(v,n)-bias;float f=max(RADIUS_SQ-vv,0.0)/RADIUS_SQ;occlusion+=(f*f*f*max(vn/(fade+vv),0.0))*falloff;}++taps;}return occlusion/(4.0*max(float(taps),1.0));}void main(){\n#ifdef NORMAL_DEPTH\nvec4 normalDepth=texture2D(normalDepthBuffer,vUv);\n#else\nvec4 normalDepth=vec4(texture2D(normalBuffer,vUv).xyz,readDepth(vUv));\n#endif\nfloat ao=0.0;float depth=normalDepth.a;float viewZ=getViewZ(depth);\n#ifdef PERSPECTIVE_CAMERA\nfloat linearDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);\n#else\nfloat linearDepth=depth;\n#endif\nif(linearDepth<distanceCutoff.y){vec3 viewPosition=getViewPosition(vUv,depth,viewZ);vec3 viewNormal=unpackRGBToNormal(normalDepth.rgb);ao+=getAmbientOcclusion(viewPosition,viewNormal,linearDepth,vUv);float d=smoothstep(distanceCutoff.x,distanceCutoff.y,linearDepth);ao=mix(ao,0.0,d);\n#ifdef LEGACY_INTENSITY\nao=clamp(1.0-pow(1.0-ao,abs(intensity)),0.0,1.0);\n#endif\n}gl_FragColor.r=ao;}",vertexShader:"uniform vec2 noiseScale;varying vec2 vUv;varying vec2 vUv2;void main(){vUv=position.xy*0.5+0.5;vUv2=vUv*noiseScale;gl_Position=vec4(position.xy,1.0,1.0);}"}),this.copyCameraSettings(camera),this.resolution=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,this.r=1}get near(){return this.uniforms.cameraNearFar.value.x}get far(){return this.uniforms.cameraNearFar.value.y}set normalDepthBuffer(value){this.uniforms.normalDepthBuffer.value=value,null!==value?this.defines.NORMAL_DEPTH="1":delete this.defines.NORMAL_DEPTH,this.needsUpdate=!0}setNormalDepthBuffer(value){this.normalDepthBuffer=value}set normalBuffer(value){this.uniforms.normalBuffer.value=value}setNormalBuffer(value){this.uniforms.normalBuffer.value=value}set depthBuffer(value){this.uniforms.depthBuffer.value=value}set depthPacking(value){this.defines.DEPTH_PACKING=value.toFixed(0),this.needsUpdate=!0}setDepthBuffer(buffer,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.depthBuffer=buffer,this.depthPacking=depthPacking}set noiseTexture(value){this.uniforms.noiseTexture.value=value}setNoiseTexture(value){this.uniforms.noiseTexture.value=value}get samples(){return Number(this.defines.SAMPLES_INT)}set samples(value){this.defines.SAMPLES_INT=value.toFixed(0),this.defines.INV_SAMPLES_FLOAT=(1/value).toFixed(9),this.needsUpdate=!0}getSamples(){return this.samples}setSamples(value){this.samples=value}get rings(){return Number(this.defines.SPIRAL_TURNS)}set rings(value){this.defines.SPIRAL_TURNS=value.toFixed(1),this.needsUpdate=!0}getRings(){return this.rings}setRings(value){this.rings=value}get intensity(){return this.uniforms.intensity.value}set intensity(value){this.uniforms.intensity.value=value,void 0===this.defines.LEGACY_INTENSITY&&(this.defines.LEGACY_INTENSITY="1",this.needsUpdate=!0)}getIntensity(){return this.uniforms.intensity.value}setIntensity(value){this.uniforms.intensity.value=value}get fade(){return this.uniforms.fade.value}set fade(value){this.uniforms.fade.value=value}getFade(){return this.uniforms.fade.value}setFade(value){this.uniforms.fade.value=value}get bias(){return this.uniforms.bias.value}set bias(value){this.uniforms.bias.value=value}getBias(){return this.uniforms.bias.value}setBias(value){this.uniforms.bias.value=value}get minRadiusScale(){return this.uniforms.minRadiusScale.value}set minRadiusScale(value){this.uniforms.minRadiusScale.value=value}getMinRadiusScale(){return this.uniforms.minRadiusScale.value}setMinRadiusScale(value){this.uniforms.minRadiusScale.value=value}updateRadius(){const radius=this.r*this.resolution.height;this.defines.RADIUS=radius.toFixed(11),this.defines.RADIUS_SQ=(radius*radius).toFixed(11),this.needsUpdate=!0}get radius(){return this.r}set radius(value){this.r=Math.min(Math.max(value,1e-6),1),this.updateRadius()}getRadius(){return this.radius}setRadius(value){this.radius=value}get distanceScaling(){return!0}set distanceScaling(value){}isDistanceScalingEnabled(){return this.distanceScaling}setDistanceScalingEnabled(value){this.distanceScaling=value}get distanceThreshold(){return this.uniforms.distanceCutoff.value.x}set distanceThreshold(value){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(value,0),1),Math.min(Math.max(value+this.distanceFalloff,0),1))}get worldDistanceThreshold(){return-orthographicDepthToViewZ(this.distanceThreshold,this.near,this.far)}set worldDistanceThreshold(value){this.distanceThreshold=viewZToOrthographicDepth(-value,this.near,this.far)}get distanceFalloff(){return this.uniforms.distanceCutoff.value.y-this.distanceThreshold}set distanceFalloff(value){this.uniforms.distanceCutoff.value.y=Math.min(Math.max(this.distanceThreshold+value,0),1)}get worldDistanceFalloff(){return-orthographicDepthToViewZ(this.distanceFalloff,this.near,this.far)}set worldDistanceFalloff(value){this.distanceFalloff=viewZToOrthographicDepth(-value,this.near,this.far)}setDistanceCutoff(threshold,falloff){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(threshold,0),1),Math.min(Math.max(threshold+falloff,0),1))}get proximityThreshold(){return this.uniforms.proximityCutoff.value.x}set proximityThreshold(value){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(value,0),1),Math.min(Math.max(value+this.proximityFalloff,0),1))}get worldProximityThreshold(){return-orthographicDepthToViewZ(this.proximityThreshold,this.near,this.far)}set worldProximityThreshold(value){this.proximityThreshold=viewZToOrthographicDepth(-value,this.near,this.far)}get proximityFalloff(){return this.uniforms.proximityCutoff.value.y-this.proximityThreshold}set proximityFalloff(value){this.uniforms.proximityCutoff.value.y=Math.min(Math.max(this.proximityThreshold+value,0),1)}get worldProximityFalloff(){return-orthographicDepthToViewZ(this.proximityFalloff,this.near,this.far)}set worldProximityFalloff(value){this.proximityFalloff=viewZToOrthographicDepth(-value,this.near,this.far)}setProximityCutoff(threshold,falloff){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(threshold,0),1),Math.min(Math.max(threshold+falloff,0),1))}setTexelSize(x,y){this.uniforms.texelSize.value.set(x,y)}adoptCameraSettings(camera){this.copyCameraSettings(camera)}copyCameraSettings(camera){camera&&(this.uniforms.cameraNearFar.value.set(camera.near,camera.far),this.uniforms.projectionMatrix.value.copy(camera.projectionMatrix),this.uniforms.inverseProjectionMatrix.value.copy(camera.projectionMatrix).invert(),camera instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(width,height){const uniforms=this.uniforms,noiseTexture=uniforms.noiseTexture.value;null!==noiseTexture&&uniforms.noiseScale.value.set(width/noiseTexture.image.width,height/noiseTexture.image.height),uniforms.texelSize.value.set(1/width,1/height),this.resolution.set(width,height),this.updateRadius()}}),DepthDownsamplingMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),normalBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\n#ifdef DOWNSAMPLE_NORMALS\nuniform lowp sampler2D normalBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);\n#ifdef DOWNSAMPLE_NORMALS\nvec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;\n#else\nvec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);\n#endif\ngl_FragColor=vec4(n[index],d[index]);}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}"})}set depthBuffer(value){this.uniforms.depthBuffer.value=value}set depthPacking(value){this.defines.DEPTH_PACKING=value.toFixed(0),this.needsUpdate=!0}setDepthBuffer(buffer,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.depthBuffer=buffer,this.depthPacking=depthPacking}set normalBuffer(value){this.uniforms.normalBuffer.value=value,null!==value?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(value){this.normalBuffer=value}setTexelSize(x,y){this.uniforms.texelSize.value.set(x,y)}setSize(width,height){this.uniforms.texelSize.value.set(1/width,1/height)}},DepthDownsamplingPass=class extends Pass{constructor({normalBuffer:normalBuffer=null,resolutionScale:resolutionScale=.5,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("DepthDownsamplingPass");const material=new DepthDownsamplingMaterial;material.normalBuffer=normalBuffer,this.fullscreenMaterial=material,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{minFilter:three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,depthBuffer:!1,type:three__WEBPACK_IMPORTED_MODULE_0__.FloatType}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight)))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(depthTexture,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.fullscreenMaterial.depthBuffer=depthTexture,this.fullscreenMaterial.depthPacking=depthPacking}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){renderer.setRenderTarget(this.renderToScreen?null:this.renderTarget),renderer.render(this.scene,this.camera)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height),this.renderTarget.setSize(resolution.width,resolution.height),this.fullscreenMaterial.setSize(width,height)}initialize(renderer,alpha,frameBufferType){const gl=renderer.getContext();if(!(gl.getExtension("EXT_color_buffer_float")||gl.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},SSAOEffect=class extends Effect{constructor(camera,normalBuffer,{blendFunction:blendFunction=BlendFunction.MULTIPLY,samples:samples=9,rings:rings=7,normalDepthBuffer:normalDepthBuffer=null,depthAwareUpsampling:depthAwareUpsampling=!0,worldDistanceThreshold:worldDistanceThreshold,worldDistanceFalloff:worldDistanceFalloff,worldProximityThreshold:worldProximityThreshold,worldProximityFalloff:worldProximityFalloff,distanceThreshold:distanceThreshold=.97,distanceFalloff:distanceFalloff=.03,rangeThreshold:rangeThreshold=5e-4,rangeFalloff:rangeFalloff=.001,minRadiusScale:minRadiusScale=.1,luminanceInfluence:luminanceInfluence=.7,radius:radius=.1825,intensity:intensity=1,bias:bias=.025,fade:fade=.01,color:color2=null,resolutionScale:resolutionScale=1,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("SSAOEffect","uniform lowp sampler2D aoBuffer;uniform float luminanceInfluence;uniform float intensity;\n#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH)\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D normalDepthBuffer;\n#else\nuniform mediump sampler2D normalDepthBuffer;\n#endif\n#endif\n#ifdef COLORIZE\nuniform vec3 color;\n#endif\nvoid mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){float aoLinear=texture2D(aoBuffer,uv).r;\n#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH) && __VERSION__ == 300\nvec4 normalDepth[4];normalDepth[0]=textureOffset(normalDepthBuffer,uv,ivec2(0,0));normalDepth[1]=textureOffset(normalDepthBuffer,uv,ivec2(0,1));normalDepth[2]=textureOffset(normalDepthBuffer,uv,ivec2(1,0));normalDepth[3]=textureOffset(normalDepthBuffer,uv,ivec2(1,1));float dot01=dot(normalDepth[0].rgb,normalDepth[1].rgb);float dot02=dot(normalDepth[0].rgb,normalDepth[2].rgb);float dot03=dot(normalDepth[0].rgb,normalDepth[3].rgb);float minDot=min(dot01,min(dot02,dot03));float s=step(THRESHOLD,minDot);float smallestDistance=1.0;int index;for(int i=0;i<4;++i){float distance=abs(depth-normalDepth[i].a);if(distance<smallestDistance){smallestDistance=distance;index=i;}}ivec2 offsets[4];offsets[0]=ivec2(0,0);offsets[1]=ivec2(0,1);offsets[2]=ivec2(1,0);offsets[3]=ivec2(1,1);ivec2 coord=ivec2(uv*vec2(textureSize(aoBuffer,0)))+offsets[index];float aoNearest=texelFetch(aoBuffer,coord,0).r;float ao=mix(aoNearest,aoLinear,s);\n#else\nfloat ao=aoLinear;\n#endif\nfloat l=luminance(inputColor.rgb);ao=mix(ao,0.0,l*luminanceInfluence);ao=clamp(ao*intensity,0.0,1.0);\n#ifdef COLORIZE\noutputColor=vec4(1.0-ao*(1.0-color),inputColor.a);\n#else\noutputColor=vec4(vec3(1.0-ao),inputColor.a);\n#endif\n}",{blendFunction:blendFunction,attributes:EffectAttribute.DEPTH,defines:new Map([["THRESHOLD","0.997"]]),uniforms:new Map([["aoBuffer",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)],["normalDepthBuffer",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(normalDepthBuffer)],["luminanceInfluence",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(luminanceInfluence)],["color",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)],["intensity",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(intensity)],["scale",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(0)]])}),this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="AO.Target",this.uniforms.get("aoBuffer").value=this.renderTarget.texture;const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight))),this.camera=camera,this.depthDownsamplingPass=new DepthDownsamplingPass({normalBuffer:normalBuffer,resolutionScale:resolutionScale}),this.depthDownsamplingPass.enabled=null===normalDepthBuffer,this.ssaoPass=new ShaderPass(new SSAOMaterial(camera));const noiseTexture=new NoiseTexture(64,64,three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat);noiseTexture.wrapS=noiseTexture.wrapT=three__WEBPACK_IMPORTED_MODULE_0__.RepeatWrapping;const ssaoMaterial=this.ssaoMaterial;ssaoMaterial.normalBuffer=normalBuffer,ssaoMaterial.noiseTexture=noiseTexture,ssaoMaterial.minRadiusScale=minRadiusScale,ssaoMaterial.samples=samples,ssaoMaterial.radius=radius,ssaoMaterial.rings=rings,ssaoMaterial.fade=fade,ssaoMaterial.bias=bias,ssaoMaterial.distanceThreshold=distanceThreshold,ssaoMaterial.distanceFalloff=distanceFalloff,ssaoMaterial.proximityThreshold=rangeThreshold,ssaoMaterial.proximityFalloff=rangeFalloff,void 0!==worldDistanceThreshold&&(ssaoMaterial.worldDistanceThreshold=worldDistanceThreshold),void 0!==worldDistanceFalloff&&(ssaoMaterial.worldDistanceFalloff=worldDistanceFalloff),void 0!==worldProximityThreshold&&(ssaoMaterial.worldProximityThreshold=worldProximityThreshold),void 0!==worldProximityFalloff&&(ssaoMaterial.worldProximityFalloff=worldProximityFalloff),null!==normalDepthBuffer&&(this.ssaoMaterial.normalDepthBuffer=normalDepthBuffer,this.defines.set("NORMAL_DEPTH","1")),this.depthAwareUpsampling=depthAwareUpsampling,this.color=color2}set mainCamera(value){this.camera=value,this.ssaoMaterial.copyCameraSettings(value)}get normalBuffer(){return this.ssaoMaterial.normalBuffer}set normalBuffer(value){this.ssaoMaterial.normalBuffer=value,this.depthDownsamplingPass.fullscreenMaterial.normalBuffer=value}getResolution(){return this.resolution}get ssaoMaterial(){return this.ssaoPass.fullscreenMaterial}getSSAOMaterial(){return this.ssaoMaterial}get samples(){return this.ssaoMaterial.samples}set samples(value){this.ssaoMaterial.samples=value}get rings(){return this.ssaoMaterial.rings}set rings(value){this.ssaoMaterial.rings=value}get radius(){return this.ssaoMaterial.radius}set radius(value){this.ssaoMaterial.radius=value}get depthAwareUpsampling(){return this.defines.has("DEPTH_AWARE_UPSAMPLING")}set depthAwareUpsampling(value){this.depthAwareUpsampling!==value&&(value?this.defines.set("DEPTH_AWARE_UPSAMPLING","1"):this.defines.delete("DEPTH_AWARE_UPSAMPLING"),this.setChanged())}isDepthAwareUpsamplingEnabled(){return this.depthAwareUpsampling}setDepthAwareUpsamplingEnabled(value){this.depthAwareUpsampling=value}get distanceScaling(){return!0}set distanceScaling(value){}get color(){return this.uniforms.get("color").value}set color(value){const uniforms=this.uniforms,defines=this.defines;null!==value?defines.has("COLORIZE")?uniforms.get("color").value.set(value):(defines.set("COLORIZE","1"),uniforms.get("color").value=new three__WEBPACK_IMPORTED_MODULE_0__.Color(value),this.setChanged()):defines.has("COLORIZE")&&(defines.delete("COLORIZE"),uniforms.get("color").value=null,this.setChanged())}get luminanceInfluence(){return this.uniforms.get("luminanceInfluence").value}set luminanceInfluence(value){this.uniforms.get("luminanceInfluence").value=value}get intensity(){return this.uniforms.get("intensity").value}set intensity(value){this.uniforms.get("intensity").value=value}getColor(){return this.color}setColor(value){this.color=value}setDistanceCutoff(threshold,falloff){this.ssaoMaterial.distanceThreshold=threshold,this.ssaoMaterial.distanceFalloff=falloff}setProximityCutoff(threshold,falloff){this.ssaoMaterial.proximityThreshold=threshold,this.ssaoMaterial.proximityFalloff=falloff}setDepthTexture(depthTexture,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.depthDownsamplingPass.setDepthTexture(depthTexture,depthPacking),this.ssaoMaterial.depthBuffer=depthTexture,this.ssaoMaterial.depthPacking=depthPacking}update(renderer,inputBuffer,deltaTime){const renderTarget=this.renderTarget;this.depthDownsamplingPass.enabled&&this.depthDownsamplingPass.render(renderer),this.ssaoPass.render(renderer,null,renderTarget)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height);const w=resolution.width,h=resolution.height;this.ssaoMaterial.copyCameraSettings(this.camera),this.ssaoMaterial.setSize(w,h),this.renderTarget.setSize(w,h),this.depthDownsamplingPass.resolution.scale=resolution.scale,this.depthDownsamplingPass.setSize(width,height)}initialize(renderer,alpha,frameBufferType){try{let normalDepthBuffer=this.uniforms.get("normalDepthBuffer").value;null===normalDepthBuffer&&(this.depthDownsamplingPass.initialize(renderer,alpha,frameBufferType),normalDepthBuffer=this.depthDownsamplingPass.texture,this.uniforms.get("normalDepthBuffer").value=normalDepthBuffer,this.ssaoMaterial.normalDepthBuffer=normalDepthBuffer,this.defines.set("NORMAL_DEPTH","1"))}catch(e){this.depthDownsamplingPass.enabled=!1}}},VignetteEffect=class extends Effect{constructor({blendFunction:blendFunction,eskil:eskil=!1,technique:technique=(eskil?VignetteTechnique_ESKIL:VignetteTechnique_DEFAULT),offset:offset=.5,darkness:darkness=.5}={}){super("VignetteEffect","uniform float offset;uniform float darkness;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){const vec2 center=vec2(0.5);vec3 color=inputColor.rgb;\n#if VIGNETTE_TECHNIQUE == 0\nfloat d=distance(uv,center);color*=smoothstep(0.8,offset*0.799,d*(darkness+offset));\n#else\nvec2 coord=(uv-center)*vec2(offset);color=mix(color,vec3(1.0-darkness),dot(coord,coord));\n#endif\noutputColor=vec4(color,inputColor.a);}",{blendFunction:blendFunction,defines:new Map([["VIGNETTE_TECHNIQUE",technique.toFixed(0)]]),uniforms:new Map([["offset",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(offset)],["darkness",new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(darkness)]])})}get technique(){return Number(this.defines.get("VIGNETTE_TECHNIQUE"))}set technique(value){this.technique!==value&&(this.defines.set("VIGNETTE_TECHNIQUE",value.toFixed(0)),this.setChanged())}get eskil(){return this.technique===VignetteTechnique_ESKIL}set eskil(value){this.technique=value?VignetteTechnique_ESKIL:VignetteTechnique_DEFAULT}getTechnique(){return this.technique}setTechnique(value){this.technique=value}get offset(){return this.uniforms.get("offset").value}set offset(value){this.uniforms.get("offset").value=value}getOffset(){return this.offset}setOffset(value){this.offset=value}get darkness(){return this.uniforms.get("darkness").value}set darkness(value){this.uniforms.get("darkness").value=value}getDarkness(){return this.darkness}setDarkness(value){this.darkness=value}},EffectMaterial=class extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial{constructor(shaderParts,defines,uniforms,camera,dithering=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:three__WEBPACK_IMPORTED_MODULE_0__.REVISION.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),depthBuffer:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),resolution:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),texelSize:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2),cameraNear:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(.3),cameraFar:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1e3),aspect:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),time:new three__WEBPACK_IMPORTED_MODULE_0__.Uniform(0)},blending:three__WEBPACK_IMPORTED_MODULE_0__.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:dithering}),shaderParts&&this.setShaderParts(shaderParts),defines&&this.setDefines(defines),uniforms&&this.setUniforms(uniforms),this.copyCameraSettings(camera)}set inputBuffer(value){this.uniforms.inputBuffer.value=value}setInputBuffer(value){this.uniforms.inputBuffer.value=value}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(value){this.uniforms.depthBuffer.value=value}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(value){this.defines.DEPTH_PACKING=value.toFixed(0),this.needsUpdate=!0}setDepthBuffer(buffer,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.depthBuffer=buffer,this.depthPacking=depthPacking}setShaderData(data){this.setShaderParts(data.shaderParts),this.setDefines(data.defines),this.setUniforms(data.uniforms),this.setExtensions(data.extensions)}setShaderParts(shaderParts){return this.fragmentShader="#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#if DEPTH_PACKING == 3201\nuniform lowp sampler2D depthBuffer;\n#elif defined(GL_FRAGMENT_PRECISION_HIGH)\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\n#if THREE_REVISION >= 137\nvec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\n#endif\n}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;\n#ifdef ENCODE_OUTPUT\n#include <colorspace_fragment>\n#endif\n#include <dithering_fragment>\n}".replace(EffectShaderSection.FRAGMENT_HEAD,shaderParts.get(EffectShaderSection.FRAGMENT_HEAD)||"").replace(EffectShaderSection.FRAGMENT_MAIN_UV,shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_UV)||"").replace(EffectShaderSection.FRAGMENT_MAIN_IMAGE,shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}".replace(EffectShaderSection.VERTEX_HEAD,shaderParts.get(EffectShaderSection.VERTEX_HEAD)||"").replace(EffectShaderSection.VERTEX_MAIN_SUPPORT,shaderParts.get(EffectShaderSection.VERTEX_MAIN_SUPPORT)||""),this.fragmentShader=updateFragmentShader(this.fragmentShader),this.needsUpdate=!0,this}setDefines(defines){for(const entry of defines.entries())this.defines[entry[0]]=entry[1];return this.needsUpdate=!0,this}setUniforms(uniforms){for(const entry of uniforms.entries())this.uniforms[entry[0]]=entry[1];return this}setExtensions(extensions){this.extensions={};for(const extension of extensions)this.extensions[extension]=!0;return this}get encodeOutput(){return void 0!==this.defines.ENCODE_OUTPUT}set encodeOutput(value){this.encodeOutput!==value&&(value?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(value){return this.encodeOutput}setOutputEncodingEnabled(value){this.encodeOutput=value}get time(){return this.uniforms.time.value}set time(value){this.uniforms.time.value=value}setDeltaTime(value){this.uniforms.time.value+=value}adoptCameraSettings(camera){this.copyCameraSettings(camera)}copyCameraSettings(camera){camera&&(this.uniforms.cameraNear.value=camera.near,this.uniforms.cameraFar.value=camera.far,camera instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(width,height){const uniforms=this.uniforms;uniforms.resolution.value.set(width,height),uniforms.texelSize.value.set(1/width,1/height),uniforms.aspect.value=width/height}static get Section(){return EffectShaderSection}};new Float32Array([255/256/256**3,255/256/65536,255/256/256,255/256]);function prefixSubstrings(prefix,substrings,strings){for(const substring of substrings){const prefixed="$1"+prefix+substring.charAt(0).toUpperCase()+substring.slice(1),regExp=new RegExp("([^\\.])(\\b"+substring+"\\b)","g");for(const entry of strings.entries())null!==entry[1]&&strings.set(entry[0],entry[1].replace(regExp,prefixed))}}function integrateEffect(prefix,effect,data){let fragmentShader=effect.getFragmentShader(),vertexShader=effect.getVertexShader();const mainImageExists=void 0!==fragmentShader&&/mainImage/.test(fragmentShader),mainUvExists=void 0!==fragmentShader&&/mainUv/.test(fragmentShader);if(data.attributes|=effect.getAttributes(),void 0===fragmentShader)throw new Error(`Missing fragment shader (${effect.name})`);if(mainUvExists&&0!=(data.attributes&EffectAttribute.CONVOLUTION))throw new Error(`Effects that transform UVs are incompatible with convolution effects (${effect.name})`);if(!mainImageExists&&!mainUvExists)throw new Error(`Could not find mainImage or mainUv function (${effect.name})`);{const functionRegExp=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,shaderParts=data.shaderParts;let fragmentHead=shaderParts.get(EffectShaderSection.FRAGMENT_HEAD)||"",fragmentMainUv=shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_UV)||"",fragmentMainImage=shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_IMAGE)||"",vertexHead=shaderParts.get(EffectShaderSection.VERTEX_HEAD)||"",vertexMainSupport=shaderParts.get(EffectShaderSection.VERTEX_MAIN_SUPPORT)||"";const varyings=new Set,names=new Set;if(mainUvExists&&(fragmentMainUv+=`\t${prefix}MainUv(UV);\n`,data.uvTransformation=!0),null!==vertexShader&&/mainSupport/.test(vertexShader)){const needsUv=/mainSupport *\([\w\s]*?uv\s*?\)/.test(vertexShader);vertexMainSupport+=`\t${prefix}MainSupport(`,vertexMainSupport+=needsUv?"vUv);\n":");\n";for(const m2 of vertexShader.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const n of m2[1].split(/\s*,\s*/))data.varyings.add(n),varyings.add(n),names.add(n);for(const m2 of vertexShader.matchAll(functionRegExp))names.add(m2[1])}for(const m2 of fragmentShader.matchAll(functionRegExp))names.add(m2[1]);for(const d of effect.defines.keys())names.add(d.replace(/\([\w\s,]*\)/g,""));for(const u of effect.uniforms.keys())names.add(u);names.delete("while"),names.delete("for"),names.delete("if"),effect.uniforms.forEach(((val,key)=>data.uniforms.set(prefix+key.charAt(0).toUpperCase()+key.slice(1),val))),effect.defines.forEach(((val,key)=>data.defines.set(prefix+key.charAt(0).toUpperCase()+key.slice(1),val)));const shaders=new Map([["fragment",fragmentShader],["vertex",vertexShader]]);prefixSubstrings(prefix,names,data.defines),prefixSubstrings(prefix,names,shaders),fragmentShader=shaders.get("fragment"),vertexShader=shaders.get("vertex");const blendMode=effect.blendMode;if(data.blendModes.set(blendMode.blendFunction,blendMode),mainImageExists){null!==effect.inputColorSpace&&effect.inputColorSpace!==data.colorSpace&&(fragmentMainImage+=effect.inputColorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace?"color0 = LinearTosRGB(color0);\n\t":"color0 = sRGBToLinear(color0);\n\t"),effect.outputColorSpace!==three__WEBPACK_IMPORTED_MODULE_0__.NoColorSpace?data.colorSpace=effect.outputColorSpace:null!==effect.inputColorSpace&&(data.colorSpace=effect.inputColorSpace);const depthParamRegExp=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;fragmentMainImage+=`${prefix}MainImage(color0, UV, `,0!=(data.attributes&EffectAttribute.DEPTH)&&depthParamRegExp.test(fragmentShader)&&(fragmentMainImage+="depth, ",data.readDepth=!0),fragmentMainImage+="color1);\n\t";const blendOpacity=prefix+"BlendOpacity";data.uniforms.set(blendOpacity,blendMode.opacity),fragmentMainImage+=`color0 = blend${blendMode.blendFunction}(color0, color1, ${blendOpacity});\n\n\t`,fragmentHead+=`uniform float ${blendOpacity};\n\n`}if(fragmentHead+=fragmentShader+"\n",null!==vertexShader&&(vertexHead+=vertexShader+"\n"),shaderParts.set(EffectShaderSection.FRAGMENT_HEAD,fragmentHead),shaderParts.set(EffectShaderSection.FRAGMENT_MAIN_UV,fragmentMainUv),shaderParts.set(EffectShaderSection.FRAGMENT_MAIN_IMAGE,fragmentMainImage),shaderParts.set(EffectShaderSection.VERTEX_HEAD,vertexHead),shaderParts.set(EffectShaderSection.VERTEX_MAIN_SUPPORT,vertexMainSupport),null!==effect.extensions)for(const extension of effect.extensions)data.extensions.add(extension)}}var EffectPass=class extends Pass{constructor(camera,...effects){super("EffectPass"),this.fullscreenMaterial=new EffectMaterial(null,null,null,camera),this.listener=event=>this.handleEvent(event),this.effects=[],this.setEffects(effects),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(value){for(const effect of this.effects)effect.mainScene=value}set mainCamera(value){this.fullscreenMaterial.copyCameraSettings(value);for(const effect of this.effects)effect.mainCamera=value}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(value){this.fullscreenMaterial.encodeOutput=value}get dithering(){return this.fullscreenMaterial.dithering}set dithering(value){const material=this.fullscreenMaterial;material.dithering=value,material.needsUpdate=!0}setEffects(effects){for(const effect of this.effects)effect.removeEventListener("change",this.listener);this.effects=effects.sort(((a,b)=>b.attributes-a.attributes));for(const effect of this.effects)effect.addEventListener("change",this.listener)}updateMaterial(){const data=new class{constructor(){this.shaderParts=new Map([[EffectShaderSection.FRAGMENT_HEAD,null],[EffectShaderSection.FRAGMENT_MAIN_UV,null],[EffectShaderSection.FRAGMENT_MAIN_IMAGE,null],[EffectShaderSection.VERTEX_HEAD,null],[EffectShaderSection.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=EffectAttribute.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=three__WEBPACK_IMPORTED_MODULE_0__.LinearSRGBColorSpace}};let id=0;for(const effect of this.effects)if(effect.blendMode.blendFunction===BlendFunction.DST)data.attributes|=effect.getAttributes()&EffectAttribute.DEPTH;else{if(0!=(data.attributes&effect.getAttributes()&EffectAttribute.CONVOLUTION))throw new Error(`Convolution effects cannot be merged (${effect.name})`);integrateEffect("e"+id++,effect,data)}let fragmentHead=data.shaderParts.get(EffectShaderSection.FRAGMENT_HEAD),fragmentMainImage=data.shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_IMAGE),fragmentMainUv=data.shaderParts.get(EffectShaderSection.FRAGMENT_MAIN_UV);const blendRegExp=/\bblend\b/g;for(const blendMode of data.blendModes.values())fragmentHead+=blendMode.getShaderCode().replace(blendRegExp,`blend${blendMode.blendFunction}`)+"\n";0!=(data.attributes&EffectAttribute.DEPTH)?(data.readDepth&&(fragmentMainImage="float depth = readDepth(UV);\n\n\t"+fragmentMainImage),this.needsDepthTexture=null===this.getDepthTexture()):this.needsDepthTexture=!1,data.colorSpace===three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace&&(fragmentMainImage+="color0 = sRGBToLinear(color0);\n\t"),data.uvTransformation?(fragmentMainUv="vec2 transformedUv = vUv;\n"+fragmentMainUv,data.defines.set("UV","transformedUv")):data.defines.set("UV","vUv"),data.shaderParts.set(EffectShaderSection.FRAGMENT_HEAD,fragmentHead),data.shaderParts.set(EffectShaderSection.FRAGMENT_MAIN_IMAGE,fragmentMainImage),data.shaderParts.set(EffectShaderSection.FRAGMENT_MAIN_UV,fragmentMainUv);for(const[key,value]of data.shaderParts)null!==value&&data.shaderParts.set(key,value.trim().replace(/^#/,"\n#"));this.skipRendering=0===id,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(data)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(depthTexture,depthPacking=three__WEBPACK_IMPORTED_MODULE_0__.BasicDepthPacking){this.fullscreenMaterial.depthBuffer=depthTexture,this.fullscreenMaterial.depthPacking=depthPacking;for(const effect of this.effects)effect.setDepthTexture(depthTexture,depthPacking)}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){for(const effect of this.effects)effect.update(renderer,inputBuffer,deltaTime);if(!this.skipRendering||this.renderToScreen){const material=this.fullscreenMaterial;material.inputBuffer=inputBuffer.texture,material.time+=deltaTime*this.timeScale,renderer.setRenderTarget(this.renderToScreen?null:outputBuffer),renderer.render(this.scene,this.camera)}}setSize(width,height){this.fullscreenMaterial.setSize(width,height);for(const effect of this.effects)effect.setSize(width,height)}initialize(renderer,alpha,frameBufferType){this.renderer=renderer;for(const effect of this.effects)effect.initialize(renderer,alpha,frameBufferType);this.updateMaterial(),void 0!==frameBufferType&&frameBufferType!==three__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const effect of this.effects)effect.removeEventListener("change",this.listener),effect.dispose()}handleEvent(event){if("change"===event.type)this.recompile()}},NormalPass=class extends Pass{constructor(scene,camera,{renderTarget:renderTarget,resolutionScale:resolutionScale=1,width:width=Resolution.AUTO_SIZE,height:height=Resolution.AUTO_SIZE,resolutionX:resolutionX=width,resolutionY:resolutionY=height}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new RenderPass(scene,camera,new three__WEBPACK_IMPORTED_MODULE_0__.MeshNormalMaterial);const renderPass=this.renderPass;renderPass.ignoreBackground=!0,renderPass.skipShadowMapUpdate=!0;const clearPass=renderPass.getClearPass();clearPass.overrideClearColor=new three__WEBPACK_IMPORTED_MODULE_0__.Color(7829503),clearPass.overrideClearAlpha=1,this.renderTarget=renderTarget,void 0===this.renderTarget&&(this.renderTarget=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1,1,{minFilter:three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter}),this.renderTarget.texture.name="NormalPass.Target");const resolution=this.resolution=new Resolution(this,resolutionX,resolutionY,resolutionScale);resolution.addEventListener("change",(e=>this.setSize(resolution.baseWidth,resolution.baseHeight)))}set mainScene(value){this.renderPass.mainScene=value}set mainCamera(value){this.renderPass.mainCamera=value}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(scale){this.resolution.scale=scale}render(renderer,inputBuffer,outputBuffer,deltaTime,stencilTest){const renderTarget=this.renderToScreen?null:this.renderTarget;this.renderPass.render(renderer,renderTarget,renderTarget)}setSize(width,height){const resolution=this.resolution;resolution.setBaseSize(width,height),this.renderTarget.setSize(resolution.width,resolution.height)}};new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1]);new Float32Array(2),new Float32Array(2),new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3]);bilinear(0,0,0,0),new Float32Array([0,0,0,0]),bilinear(0,0,0,1),new Float32Array([0,0,0,1]),bilinear(0,0,1,0),new Float32Array([0,0,1,0]),bilinear(0,0,1,1),new Float32Array([0,0,1,1]),bilinear(0,1,0,0),new Float32Array([0,1,0,0]),bilinear(0,1,0,1),new Float32Array([0,1,0,1]),bilinear(0,1,1,0),new Float32Array([0,1,1,0]),bilinear(0,1,1,1),new Float32Array([0,1,1,1]),bilinear(1,0,0,0),new Float32Array([1,0,0,0]),bilinear(1,0,0,1),new Float32Array([1,0,0,1]),bilinear(1,0,1,0),new Float32Array([1,0,1,0]),bilinear(1,0,1,1),new Float32Array([1,0,1,1]),bilinear(1,1,0,0),new Float32Array([1,1,0,0]),bilinear(1,1,0,1),new Float32Array([1,1,0,1]),bilinear(1,1,1,0),new Float32Array([1,1,1,0]),bilinear(1,1,1,1),new Float32Array([1,1,1,1]);function lerp2(a,b,p){return a+(b-a)*p}function bilinear(e0,e1,e2,e3){const a=lerp2(e0,e1,.75),b=lerp2(e2,e3,.75);return lerp2(a,b,.875)}},"./node_modules/three-stdlib/controls/OrbitControls.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{z:function(){return OrbitControls}});var three__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/three/build/three.module.js"),__defProp=Object.defineProperty,__publicField=(obj,key,value)=>(((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value:value}):obj[key]=value})(obj,"symbol"!=typeof key?key+"":key,value),value);const _ray=new three__WEBPACK_IMPORTED_MODULE_0__.Ray,_plane=new three__WEBPACK_IMPORTED_MODULE_0__.Plane,TILT_LIMIT=Math.cos(Math.PI/180*70),moduloWrapAround=(offset,capacity)=>(offset%capacity+capacity)%capacity;class OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher{constructor(object,domElement){super(),__publicField(this,"object"),__publicField(this,"domElement"),__publicField(this,"enabled",!0),__publicField(this,"target",new three__WEBPACK_IMPORTED_MODULE_0__.Vector3),__publicField(this,"minDistance",0),__publicField(this,"maxDistance",1/0),__publicField(this,"minZoom",0),__publicField(this,"maxZoom",1/0),__publicField(this,"minPolarAngle",0),__publicField(this,"maxPolarAngle",Math.PI),__publicField(this,"minAzimuthAngle",-1/0),__publicField(this,"maxAzimuthAngle",1/0),__publicField(this,"enableDamping",!1),__publicField(this,"dampingFactor",.05),__publicField(this,"enableZoom",!0),__publicField(this,"zoomSpeed",1),__publicField(this,"enableRotate",!0),__publicField(this,"rotateSpeed",1),__publicField(this,"enablePan",!0),__publicField(this,"panSpeed",1),__publicField(this,"screenSpacePanning",!0),__publicField(this,"keyPanSpeed",7),__publicField(this,"zoomToCursor",!1),__publicField(this,"autoRotate",!1),__publicField(this,"autoRotateSpeed",2),__publicField(this,"reverseOrbit",!1),__publicField(this,"reverseHorizontalOrbit",!1),__publicField(this,"reverseVerticalOrbit",!1),__publicField(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),__publicField(this,"mouseButtons",{LEFT:three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE,MIDDLE:three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY,RIGHT:three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN}),__publicField(this,"touches",{ONE:three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE,TWO:three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN}),__publicField(this,"target0"),__publicField(this,"position0"),__publicField(this,"zoom0"),__publicField(this,"_domElementKeyEvents",null),__publicField(this,"getPolarAngle"),__publicField(this,"getAzimuthalAngle"),__publicField(this,"setPolarAngle"),__publicField(this,"setAzimuthalAngle"),__publicField(this,"getDistance"),__publicField(this,"listenToKeyEvents"),__publicField(this,"stopListenToKeyEvents"),__publicField(this,"saveState"),__publicField(this,"reset"),__publicField(this,"update"),__publicField(this,"connect"),__publicField(this,"dispose"),this.object=object,this.domElement=domElement,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>spherical.phi,this.getAzimuthalAngle=()=>spherical.theta,this.setPolarAngle=value=>{let phi=moduloWrapAround(value,2*Math.PI),currentPhi=spherical.phi;currentPhi<0&&(currentPhi+=2*Math.PI),phi<0&&(phi+=2*Math.PI);let phiDist=Math.abs(phi-currentPhi);2*Math.PI-phiDist<phiDist&&(phi<currentPhi?phi+=2*Math.PI:currentPhi+=2*Math.PI),sphericalDelta.phi=phi-currentPhi,scope.update()},this.setAzimuthalAngle=value=>{let theta=moduloWrapAround(value,2*Math.PI),currentTheta=spherical.theta;currentTheta<0&&(currentTheta+=2*Math.PI),theta<0&&(theta+=2*Math.PI);let thetaDist=Math.abs(theta-currentTheta);2*Math.PI-thetaDist<thetaDist&&(theta<currentTheta?theta+=2*Math.PI:currentTheta+=2*Math.PI),sphericalDelta.theta=theta-currentTheta,scope.update()},this.getDistance=()=>scope.object.position.distanceTo(scope.target),this.listenToKeyEvents=domElement2=>{domElement2.addEventListener("keydown",onKeyDown),this._domElementKeyEvents=domElement2},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",onKeyDown),this._domElementKeyEvents=null},this.saveState=()=>{scope.target0.copy(scope.target),scope.position0.copy(scope.object.position),scope.zoom0=scope.object.zoom},this.reset=()=>{scope.target.copy(scope.target0),scope.object.position.copy(scope.position0),scope.object.zoom=scope.zoom0,scope.object.updateProjectionMatrix(),scope.dispatchEvent(changeEvent),scope.update(),state=STATE.NONE},this.update=(()=>{const offset=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3,up=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0),quat=(new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion).setFromUnitVectors(object.up,up),quatInverse=quat.clone().invert(),lastPosition=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3,lastQuaternion=new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion,twoPI=2*Math.PI;return function update(){const position=scope.object.position;quat.setFromUnitVectors(object.up,up),quatInverse.copy(quat).invert(),offset.copy(position).sub(scope.target),offset.applyQuaternion(quat),spherical.setFromVector3(offset),scope.autoRotate&&state===STATE.NONE&&rotateLeft(function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed}()),scope.enableDamping?(spherical.theta+=sphericalDelta.theta*scope.dampingFactor,spherical.phi+=sphericalDelta.phi*scope.dampingFactor):(spherical.theta+=sphericalDelta.theta,spherical.phi+=sphericalDelta.phi);let min=scope.minAzimuthAngle,max=scope.maxAzimuthAngle;isFinite(min)&&isFinite(max)&&(min<-Math.PI?min+=twoPI:min>Math.PI&&(min-=twoPI),max<-Math.PI?max+=twoPI:max>Math.PI&&(max-=twoPI),spherical.theta=min<=max?Math.max(min,Math.min(max,spherical.theta)):spherical.theta>(min+max)/2?Math.max(min,spherical.theta):Math.min(max,spherical.theta)),spherical.phi=Math.max(scope.minPolarAngle,Math.min(scope.maxPolarAngle,spherical.phi)),spherical.makeSafe(),!0===scope.enableDamping?scope.target.addScaledVector(panOffset,scope.dampingFactor):scope.target.add(panOffset),scope.zoomToCursor&&performCursorZoom||scope.object.isOrthographicCamera?spherical.radius=clampDistance(spherical.radius):spherical.radius=clampDistance(spherical.radius*scale),offset.setFromSpherical(spherical),offset.applyQuaternion(quatInverse),position.copy(scope.target).add(offset),scope.object.matrixAutoUpdate||scope.object.updateMatrix(),scope.object.lookAt(scope.target),!0===scope.enableDamping?(sphericalDelta.theta*=1-scope.dampingFactor,sphericalDelta.phi*=1-scope.dampingFactor,panOffset.multiplyScalar(1-scope.dampingFactor)):(sphericalDelta.set(0,0,0),panOffset.set(0,0,0));let zoomChanged=!1;if(scope.zoomToCursor&&performCursorZoom){let newRadius=null;if(scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera&&scope.object.isPerspectiveCamera){const prevRadius=offset.length();newRadius=clampDistance(prevRadius*scale);const radiusDelta=prevRadius-newRadius;scope.object.position.addScaledVector(dollyDirection,radiusDelta),scope.object.updateMatrixWorld()}else if(scope.object.isOrthographicCamera){const mouseBefore=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouse.x,mouse.y,0);mouseBefore.unproject(scope.object),scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/scale)),scope.object.updateProjectionMatrix(),zoomChanged=!0;const mouseAfter=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouse.x,mouse.y,0);mouseAfter.unproject(scope.object),scope.object.position.sub(mouseAfter).add(mouseBefore),scope.object.updateMatrixWorld(),newRadius=offset.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),scope.zoomToCursor=!1;null!==newRadius&&(scope.screenSpacePanning?scope.target.set(0,0,-1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position):(_ray.origin.copy(scope.object.position),_ray.direction.set(0,0,-1).transformDirection(scope.object.matrix),Math.abs(scope.object.up.dot(_ray.direction))<TILT_LIMIT?object.lookAt(scope.target):(_plane.setFromNormalAndCoplanarPoint(scope.object.up,scope.target),_ray.intersectPlane(_plane,scope.target))))}else scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera&&scope.object.isOrthographicCamera&&(zoomChanged=1!==scale,zoomChanged&&(scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/scale)),scope.object.updateProjectionMatrix()));return scale=1,performCursorZoom=!1,!!(zoomChanged||lastPosition.distanceToSquared(scope.object.position)>EPS||8*(1-lastQuaternion.dot(scope.object.quaternion))>EPS)&&(scope.dispatchEvent(changeEvent),lastPosition.copy(scope.object.position),lastQuaternion.copy(scope.object.quaternion),zoomChanged=!1,!0)}})(),this.connect=domElement2=>{domElement2===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),scope.domElement=domElement2,scope.domElement.style.touchAction="none",scope.domElement.addEventListener("contextmenu",onContextMenu),scope.domElement.addEventListener("pointerdown",onPointerDown),scope.domElement.addEventListener("pointercancel",onPointerUp),scope.domElement.addEventListener("wheel",onMouseWheel)},this.dispose=()=>{var _a,_b,_c,_d,_e,_f;scope.domElement&&(scope.domElement.style.touchAction="auto"),null==(_a=scope.domElement)||_a.removeEventListener("contextmenu",onContextMenu),null==(_b=scope.domElement)||_b.removeEventListener("pointerdown",onPointerDown),null==(_c=scope.domElement)||_c.removeEventListener("pointercancel",onPointerUp),null==(_d=scope.domElement)||_d.removeEventListener("wheel",onMouseWheel),null==(_e=scope.domElement)||_e.ownerDocument.removeEventListener("pointermove",onPointerMove),null==(_f=scope.domElement)||_f.ownerDocument.removeEventListener("pointerup",onPointerUp),null!==scope._domElementKeyEvents&&scope._domElementKeyEvents.removeEventListener("keydown",onKeyDown)};const scope=this,changeEvent={type:"change"},startEvent={type:"start"},endEvent={type:"end"},STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let state=STATE.NONE;const EPS=1e-6,spherical=new three__WEBPACK_IMPORTED_MODULE_0__.Spherical,sphericalDelta=new three__WEBPACK_IMPORTED_MODULE_0__.Spherical;let scale=1;const panOffset=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3,rotateStart=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,rotateEnd=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,rotateDelta=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,panStart=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,panEnd=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,panDelta=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,dollyStart=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,dollyEnd=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,dollyDelta=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,dollyDirection=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3,mouse=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2;let performCursorZoom=!1;const pointers=[],pointerPositions={};function getZoomScale(){return Math.pow(.95,scope.zoomSpeed)}function rotateLeft(angle){scope.reverseOrbit||scope.reverseHorizontalOrbit?sphericalDelta.theta+=angle:sphericalDelta.theta-=angle}function rotateUp(angle){scope.reverseOrbit||scope.reverseVerticalOrbit?sphericalDelta.phi+=angle:sphericalDelta.phi-=angle}const panLeft=(()=>{const v=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3;return function panLeft2(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0),v.multiplyScalar(-distance),panOffset.add(v)}})(),panUp=(()=>{const v=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3;return function panUp2(distance,objectMatrix){!0===scope.screenSpacePanning?v.setFromMatrixColumn(objectMatrix,1):(v.setFromMatrixColumn(objectMatrix,0),v.crossVectors(scope.object.up,v)),v.multiplyScalar(distance),panOffset.add(v)}})(),pan=(()=>{const offset=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3;return function pan2(deltaX,deltaY){const element=scope.domElement;if(element&&scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera&&scope.object.isPerspectiveCamera){const position=scope.object.position;offset.copy(position).sub(scope.target);let targetDistance=offset.length();targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180),panLeft(2*deltaX*targetDistance/element.clientHeight,scope.object.matrix),panUp(2*deltaY*targetDistance/element.clientHeight,scope.object.matrix)}else element&&scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera&&scope.object.isOrthographicCamera?(panLeft(deltaX*(scope.object.right-scope.object.left)/scope.object.zoom/element.clientWidth,scope.object.matrix),panUp(deltaY*(scope.object.top-scope.object.bottom)/scope.object.zoom/element.clientHeight,scope.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),scope.enablePan=!1)}})();function dollyOut(dollyScale){scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera&&scope.object.isPerspectiveCamera||scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera&&scope.object.isOrthographicCamera?scale/=dollyScale:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function dollyIn(dollyScale){scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera&&scope.object.isPerspectiveCamera||scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera&&scope.object.isOrthographicCamera?scale*=dollyScale:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function updateMouseParameters(event){if(!scope.zoomToCursor||!scope.domElement)return;performCursorZoom=!0;const rect=scope.domElement.getBoundingClientRect(),x=event.clientX-rect.left,y=event.clientY-rect.top,w=rect.width,h=rect.height;mouse.x=x/w*2-1,mouse.y=-y/h*2+1,dollyDirection.set(mouse.x,mouse.y,1).unproject(scope.object).sub(scope.object.position).normalize()}function clampDistance(dist){return Math.max(scope.minDistance,Math.min(scope.maxDistance,dist))}function handleMouseDownRotate(event){rotateStart.set(event.clientX,event.clientY)}function handleMouseDownPan(event){panStart.set(event.clientX,event.clientY)}function handleTouchStartRotate(){if(1==pointers.length)rotateStart.set(pointers[0].pageX,pointers[0].pageY);else{const x=.5*(pointers[0].pageX+pointers[1].pageX),y=.5*(pointers[0].pageY+pointers[1].pageY);rotateStart.set(x,y)}}function handleTouchStartPan(){if(1==pointers.length)panStart.set(pointers[0].pageX,pointers[0].pageY);else{const x=.5*(pointers[0].pageX+pointers[1].pageX),y=.5*(pointers[0].pageY+pointers[1].pageY);panStart.set(x,y)}}function handleTouchStartDolly(){const dx=pointers[0].pageX-pointers[1].pageX,dy=pointers[0].pageY-pointers[1].pageY,distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance)}function handleTouchMoveRotate(event){if(1==pointers.length)rotateEnd.set(event.pageX,event.pageY);else{const position=getSecondPointerPosition(event),x=.5*(event.pageX+position.x),y=.5*(event.pageY+position.y);rotateEnd.set(x,y)}rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);const element=scope.domElement;element&&(rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight)),rotateStart.copy(rotateEnd)}function handleTouchMovePan(event){if(1==pointers.length)panEnd.set(event.pageX,event.pageY);else{const position=getSecondPointerPosition(event),x=.5*(event.pageX+position.x),y=.5*(event.pageY+position.y);panEnd.set(x,y)}panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed),pan(panDelta.x,panDelta.y),panStart.copy(panEnd)}function handleTouchMoveDolly(event){const position=getSecondPointerPosition(event),dx=event.pageX-position.x,dy=event.pageY-position.y,distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance),dollyDelta.set(0,Math.pow(dollyEnd.y/dollyStart.y,scope.zoomSpeed)),dollyOut(dollyDelta.y),dollyStart.copy(dollyEnd)}function onPointerDown(event){var _a,_b;!1!==scope.enabled&&(0===pointers.length&&(null==(_a=scope.domElement)||_a.ownerDocument.addEventListener("pointermove",onPointerMove),null==(_b=scope.domElement)||_b.ownerDocument.addEventListener("pointerup",onPointerUp)),function addPointer(event){pointers.push(event)}(event),"touch"===event.pointerType?function onTouchStart(event){switch(trackPointer(event),pointers.length){case 1:switch(scope.touches.ONE){case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:if(!1===scope.enableRotate)return;handleTouchStartRotate(),state=STATE.TOUCH_ROTATE;break;case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:if(!1===scope.enablePan)return;handleTouchStartPan(),state=STATE.TOUCH_PAN;break;default:state=STATE.NONE}break;case 2:switch(scope.touches.TWO){case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:if(!1===scope.enableZoom&&!1===scope.enablePan)return;!function handleTouchStartDollyPan(){scope.enableZoom&&handleTouchStartDolly(),scope.enablePan&&handleTouchStartPan()}(),state=STATE.TOUCH_DOLLY_PAN;break;case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)return;!function handleTouchStartDollyRotate(){scope.enableZoom&&handleTouchStartDolly(),scope.enableRotate&&handleTouchStartRotate()}(),state=STATE.TOUCH_DOLLY_ROTATE;break;default:state=STATE.NONE}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(startEvent)}(event):function onMouseDown(event){let mouseAction;switch(event.button){case 0:mouseAction=scope.mouseButtons.LEFT;break;case 1:mouseAction=scope.mouseButtons.MIDDLE;break;case 2:mouseAction=scope.mouseButtons.RIGHT;break;default:mouseAction=-1}switch(mouseAction){case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:if(!1===scope.enableZoom)return;!function handleMouseDownDolly(event){updateMouseParameters(event),dollyStart.set(event.clientX,event.clientY)}(event),state=STATE.DOLLY;break;case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enablePan)return;handleMouseDownPan(event),state=STATE.PAN}else{if(!1===scope.enableRotate)return;handleMouseDownRotate(event),state=STATE.ROTATE}break;case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enableRotate)return;handleMouseDownRotate(event),state=STATE.ROTATE}else{if(!1===scope.enablePan)return;handleMouseDownPan(event),state=STATE.PAN}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(startEvent)}(event))}function onPointerMove(event){!1!==scope.enabled&&("touch"===event.pointerType?function onTouchMove(event){switch(trackPointer(event),state){case STATE.TOUCH_ROTATE:if(!1===scope.enableRotate)return;handleTouchMoveRotate(event),scope.update();break;case STATE.TOUCH_PAN:if(!1===scope.enablePan)return;handleTouchMovePan(event),scope.update();break;case STATE.TOUCH_DOLLY_PAN:if(!1===scope.enableZoom&&!1===scope.enablePan)return;!function handleTouchMoveDollyPan(event){scope.enableZoom&&handleTouchMoveDolly(event),scope.enablePan&&handleTouchMovePan(event)}(event),scope.update();break;case STATE.TOUCH_DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)return;!function handleTouchMoveDollyRotate(event){scope.enableZoom&&handleTouchMoveDolly(event),scope.enableRotate&&handleTouchMoveRotate(event)}(event),scope.update();break;default:state=STATE.NONE}}(event):function onMouseMove(event){if(!1===scope.enabled)return;switch(state){case STATE.ROTATE:if(!1===scope.enableRotate)return;!function handleMouseMoveRotate(event){rotateEnd.set(event.clientX,event.clientY),rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);const element=scope.domElement;element&&(rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight)),rotateStart.copy(rotateEnd),scope.update()}(event);break;case STATE.DOLLY:if(!1===scope.enableZoom)return;!function handleMouseMoveDolly(event){dollyEnd.set(event.clientX,event.clientY),dollyDelta.subVectors(dollyEnd,dollyStart),dollyDelta.y>0?dollyOut(getZoomScale()):dollyDelta.y<0&&dollyIn(getZoomScale()),dollyStart.copy(dollyEnd),scope.update()}(event);break;case STATE.PAN:if(!1===scope.enablePan)return;!function handleMouseMovePan(event){panEnd.set(event.clientX,event.clientY),panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed),pan(panDelta.x,panDelta.y),panStart.copy(panEnd),scope.update()}(event)}}(event))}function onPointerUp(event){var _a,_b,_c;!function removePointer(event){delete pointerPositions[event.pointerId];for(let i=0;i<pointers.length;i++)if(pointers[i].pointerId==event.pointerId)return void pointers.splice(i,1)}(event),0===pointers.length&&(null==(_a=scope.domElement)||_a.releasePointerCapture(event.pointerId),null==(_b=scope.domElement)||_b.ownerDocument.removeEventListener("pointermove",onPointerMove),null==(_c=scope.domElement)||_c.ownerDocument.removeEventListener("pointerup",onPointerUp)),scope.dispatchEvent(endEvent),state=STATE.NONE}function onMouseWheel(event){!1===scope.enabled||!1===scope.enableZoom||state!==STATE.NONE&&state!==STATE.ROTATE||(event.preventDefault(),scope.dispatchEvent(startEvent),function handleMouseWheel(event){updateMouseParameters(event),event.deltaY<0?dollyIn(getZoomScale()):event.deltaY>0&&dollyOut(getZoomScale()),scope.update()}(event),scope.dispatchEvent(endEvent))}function onKeyDown(event){!1!==scope.enabled&&!1!==scope.enablePan&&function handleKeyDown(event){let needsUpdate=!1;switch(event.code){case scope.keys.UP:pan(0,scope.keyPanSpeed),needsUpdate=!0;break;case scope.keys.BOTTOM:pan(0,-scope.keyPanSpeed),needsUpdate=!0;break;case scope.keys.LEFT:pan(scope.keyPanSpeed,0),needsUpdate=!0;break;case scope.keys.RIGHT:pan(-scope.keyPanSpeed,0),needsUpdate=!0}needsUpdate&&(event.preventDefault(),scope.update())}(event)}function onContextMenu(event){!1!==scope.enabled&&event.preventDefault()}function trackPointer(event){let position=pointerPositions[event.pointerId];void 0===position&&(position=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2,pointerPositions[event.pointerId]=position),position.set(event.pageX,event.pageY)}function getSecondPointerPosition(event){const pointer=event.pointerId===pointers[0].pointerId?pointers[1]:pointers[0];return pointerPositions[pointer.pointerId]}void 0!==domElement&&this.connect(domElement),this.update()}}}}]);