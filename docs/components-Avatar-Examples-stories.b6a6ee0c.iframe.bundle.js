"use strict";(self.webpackChunk_readyplayerme_visage=self.webpackChunk_readyplayerme_visage||[]).push([[960,989],{"./node_modules/@react-three/drei/core/StatsGl.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{G:function(){return StatsGl}});var react=__webpack_require__("./node_modules/react/index.js"),index_673ef987_esm=__webpack_require__("./node_modules/@react-three/fiber/dist/index-673ef987.esm.js");class Stats{constructor({logsPerSecond:logsPerSecond=20,samplesLog:samplesLog=100,samplesGraph:samplesGraph=10,precision:precision=2,minimal:minimal=!1,horizontal:horizontal=!0,mode:mode=0}={}){this.mode=mode,this.horizontal=horizontal,this.container=document.createElement("div"),this.container.style.cssText="position:fixed;top:0;left:0;opacity:0.9;z-index:10000;",minimal&&(this.container.style.cssText+="cursor:pointer"),this.canvasGpu=null,this.gl=null,this.query=null,this.minimal=minimal,this.beginTime=(performance||Date).now(),this.prevTime=this.beginTime,this.prevCpuTime=this.beginTime,this.frames=0,this.averageCpu={logs:[],graph:[]},this.averageGpu={logs:[],graph:[]},this.queryCreated=!1,this.fpsPanel=this.addPanel(new Stats.Panel("FPS","#0ff","#002"),0),this.msPanel=this.addPanel(new Stats.Panel("CPU","#0f0","#020"),1),this.gpuPanel=null,this.samplesLog=samplesLog,this.samplesGraph=samplesGraph,this.precision=precision,this.logsPerSecond=logsPerSecond,this.minimal?(this.container.addEventListener("click",(event=>{event.preventDefault(),this.showPanel(++this.mode%this.container.children.length)}),!1),this.mode=mode,this.showPanel(this.mode)):window.addEventListener("resize",(()=>{this.resizePanel(this.fpsPanel,0),this.resizePanel(this.msPanel,1),this.gpuPanel&&this.resizePanel(this.gpuPanel,2)}))}resizePanel(panel,offset){panel.canvas.style.position="absolute",this.minimal?panel.canvas.style.display="none":(panel.canvas.style.display="block",this.horizontal?(panel.canvas.style.top="0px",panel.canvas.style.left=offset*panel.WIDTH/panel.PR+"px"):(panel.canvas.style.left="0px",panel.canvas.style.top=offset*panel.HEIGHT/panel.PR+"px"))}addPanel(panel,offset){return panel.canvas&&(this.container.appendChild(panel.canvas),this.resizePanel(panel,offset)),panel}showPanel(id){for(let i=0;i<this.container.children.length;i++){this.container.children[i].style.display=i===id?"block":"none"}this.mode=id}init(canvas){this.canvasGpu=canvas,this.canvasGpu&&(this.gl=this.canvasGpu.getContext("webgl2"),this.ext=this.gl?this.gl.getExtension("EXT_disjoint_timer_query_webgl2"):null,this.ext&&(this.gpuPanel=this.addPanel(new Stats.Panel("GPU","#ff0","#220"),2)))}begin(){if(this.beginProfiling("cpu-started"),this.gl&&this.ext){if(this.query){const available=this.gl.getQueryParameter(this.query,this.gl.QUERY_RESULT_AVAILABLE);if(this.disjoint=this.gl.getParameter(this.ext.GPU_DISJOINT_EXT),available&&!this.disjoint){this.ns=this.gl.getQueryParameter(this.query,this.gl.QUERY_RESULT);const ms=1e-6*this.ns;(available||this.disjoint)&&(this.gl.deleteQuery(this.query),this.query=null),available&&this.addToAverage(ms,this.averageGpu)}}this.query||(this.queryCreated=!0,this.query=this.gl.createQuery(),this.query&&this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,this.query))}}end(){this.beginTime=this.endInternal(),this.endProfiling("cpu-started","cpu-finished","cpu-duration",this.averageCpu),this.gl&&this.ext&&this.queryCreated&&this.gl.getQuery(this.ext.TIME_ELAPSED_EXT,this.gl.CURRENT_QUERY)&&this.gl.endQuery(this.ext.TIME_ELAPSED_EXT)}endInternal(){this.frames++;const time=(performance||Date).now();if(time>=this.prevCpuTime+1e3/this.logsPerSecond&&(this.updatePanel(this.msPanel,this.averageCpu),this.updatePanel(this.gpuPanel,this.averageGpu),this.prevCpuTime=time),time>=this.prevTime+1e3){const fps=1e3*this.frames/(time-this.prevTime);this.fpsPanel.update(fps,fps,100,100,0),this.prevTime=time,this.frames=0}return time}addToAverage(value,averageArray){averageArray.logs.push(value),averageArray.logs.length>this.samplesLog&&averageArray.logs.shift(),averageArray.graph.push(value),averageArray.graph.length>this.samplesGraph&&averageArray.graph.shift()}beginProfiling(marker){window.performance&&window.performance.mark(marker)}endProfiling(startMarker,endMarker,measureName,averageArray){if(window.performance&&endMarker){window.performance.mark(endMarker);const cpuMeasure=performance.measure(measureName,startMarker,endMarker);this.addToAverage(cpuMeasure.duration,averageArray)}}updatePanel(panel,averageArray){if(averageArray.logs.length>0){let sumLog=0,max=.01;for(let i=0;i<averageArray.logs.length;i++)sumLog+=averageArray.logs[i],averageArray.logs[i]>max&&(max=averageArray.logs[i]);let sumGraph=0,maxGraph=.01;for(let i=0;i<averageArray.graph.length;i++)sumGraph+=averageArray.graph[i],averageArray.graph[i]>maxGraph&&(maxGraph=averageArray.graph[i]);panel&&panel.update(sumLog/Math.min(averageArray.logs.length,this.samplesLog),sumGraph/Math.min(averageArray.graph.length,this.samplesGraph),max,maxGraph,this.precision)}}}function StatsGl({className:className,parent:parent,...props}){const gl=(0,index_673ef987_esm.z)((state=>state.gl)),stats=react.useMemo((()=>{const stats=new Stats({...props});return stats.init(gl.domElement),stats}),[gl]);return react.useEffect((()=>{if(stats){const node=parent&&parent.current||document.body;null==node||node.appendChild(stats.container),className&&stats.container.classList.add(...className.split(" ").filter((cls=>cls)));const begin=(0,index_673ef987_esm.n)((()=>stats.begin())),end=(0,index_673ef987_esm.o)((()=>stats.end()));return()=>{null==node||node.removeChild(stats.container),begin(),end()}}}),[parent,stats,className]),null}Stats.Panel=class Panel{constructor(name,fg,bg){this.name=name,this.fg=fg,this.bg=bg,this.PR=Math.round(window.devicePixelRatio||1),this.WIDTH=90*this.PR,this.HEIGHT=48*this.PR,this.TEXT_X=3*this.PR,this.TEXT_Y=2*this.PR,this.GRAPH_X=3*this.PR,this.GRAPH_Y=15*this.PR,this.GRAPH_WIDTH=84*this.PR,this.GRAPH_HEIGHT=30*this.PR,this.canvas=document.createElement("canvas"),this.canvas.width=90*this.PR,this.canvas.height=48*this.PR,this.canvas.style.width="90px",this.canvas.style.position="absolute",this.canvas.style.height="48px",this.canvas.style.cssText="width:90px;height:48px",this.context=this.canvas.getContext("2d"),this.context&&(this.context.font="bold "+9*this.PR+"px Helvetica,Arial,sans-serif",this.context.textBaseline="top",this.context.fillStyle=this.bg,this.context.fillRect(0,0,this.WIDTH,this.HEIGHT),this.context.fillStyle=this.fg,this.context.fillText(this.name,this.TEXT_X,this.TEXT_Y),this.context.fillRect(this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH,this.GRAPH_HEIGHT),this.context.fillStyle=this.bg,this.context.globalAlpha=.9,this.context.fillRect(this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH,this.GRAPH_HEIGHT))}update(value,valueGraph,maxValue,maxGraph,decimals=0){let min=1/0,max=0;this.context&&(min=Math.min(min,value),max=Math.max(maxValue,value),maxGraph=Math.max(maxGraph,valueGraph),this.context.fillStyle=this.bg,this.context.globalAlpha=1,this.context.fillRect(0,0,this.WIDTH,this.GRAPH_Y),this.context.fillStyle=this.fg,this.context.fillText(value.toFixed(decimals)+" "+this.name+" ("+min.toFixed(decimals)+"-"+parseFloat(max.toFixed(decimals))+")",this.TEXT_X,this.TEXT_Y),this.context.drawImage(this.canvas,this.GRAPH_X+this.PR,this.GRAPH_Y,this.GRAPH_WIDTH-this.PR,this.GRAPH_HEIGHT,this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH-this.PR,this.GRAPH_HEIGHT),this.context.fillRect(this.GRAPH_X+this.GRAPH_WIDTH-this.PR,this.GRAPH_Y,this.PR,this.GRAPH_HEIGHT),this.context.fillStyle=this.bg,this.context.globalAlpha=.9,this.context.fillRect(this.GRAPH_X+this.GRAPH_WIDTH-this.PR,this.GRAPH_Y,this.PR,(1-valueGraph/maxGraph)*this.GRAPH_HEIGHT))}}},"./src/components/Avatar/Examples.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bloom:function(){return Bloom},FloatingSparkles:function(){return FloatingSparkles},IdleBlinking:function(){return IdleBlinking},Posing:function(){return Posing},ReflectiveFloor:function(){return ReflectiveFloor},SpawnEffectAndAnimation:function(){return SpawnEffectAndAnimation},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Examples_stories},environmentModel:function(){return environmentModel}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),core_Sparkles=__webpack_require__("./node_modules/@react-three/drei/core/Sparkles.js"),StatsGl=__webpack_require__("./node_modules/@react-three/drei/core/StatsGl.js"),components_Avatar=__webpack_require__("./src/components/Avatar/index.ts"),services=__webpack_require__("./src/services/index.ts"),Stories_service=__webpack_require__("./src/services/Stories.service.ts"),Environment_service=__webpack_require__("./src/services/Environment.service.ts"),Models=__webpack_require__("./src/components/Models/index.ts"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),index_673ef987_esm=__webpack_require__("./node_modules/@react-three/fiber/dist/index-673ef987.esm.js");var react_merge_refs_esm=function mergeRefs(refs){return function(value){refs.forEach((function(ref){"function"==typeof ref?ref(value):null!=ref&&(ref.current=value)}))}};class ConvolutionMaterial extends three_module.ShaderMaterial{constructor(texelSize=new three_module.Vector2){super({uniforms:{inputBuffer:new three_module.Uniform(null),depthBuffer:new three_module.Uniform(null),resolution:new three_module.Uniform(new three_module.Vector2),texelSize:new three_module.Uniform(new three_module.Vector2),halfTexelSize:new three_module.Uniform(new three_module.Vector2),kernel:new three_module.Uniform(0),scale:new three_module.Uniform(1),cameraNear:new three_module.Uniform(0),cameraFar:new three_module.Uniform(1),minDepthThreshold:new three_module.Uniform(0),maxDepthThreshold:new three_module.Uniform(1),depthScale:new three_module.Uniform(0),depthToBlurRatioBias:new three_module.Uniform(.25)},fragmentShader:"#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n          #include <tonemapping_fragment>\n          #include <encodings_fragment>\n        }",vertexShader:"uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }",blending:three_module.NoBlending,depthWrite:!1,depthTest:!1}),this.toneMapped=!1,this.setTexelSize(texelSize.x,texelSize.y),this.kernel=new Float32Array([0,1,2,2,3])}setTexelSize(x,y){this.uniforms.texelSize.value.set(x,y),this.uniforms.halfTexelSize.value.set(x,y).multiplyScalar(.5)}setResolution(resolution){this.uniforms.resolution.value.copy(resolution)}}class BlurPass{constructor({gl:gl,resolution:resolution,width:width=500,height:height=500,minDepthThreshold:minDepthThreshold=0,maxDepthThreshold:maxDepthThreshold=1,depthScale:depthScale=0,depthToBlurRatioBias:depthToBlurRatioBias=.25}){this.renderToScreen=!1,this.renderTargetA=new three_module.WebGLRenderTarget(resolution,resolution,{minFilter:three_module.LinearFilter,magFilter:three_module.LinearFilter,stencilBuffer:!1,depthBuffer:!1,type:three_module.HalfFloatType}),this.renderTargetB=this.renderTargetA.clone(),this.convolutionMaterial=new ConvolutionMaterial,this.convolutionMaterial.setTexelSize(1/width,1/height),this.convolutionMaterial.setResolution(new three_module.Vector2(width,height)),this.scene=new three_module.Scene,this.camera=new three_module.Camera,this.convolutionMaterial.uniforms.minDepthThreshold.value=minDepthThreshold,this.convolutionMaterial.uniforms.maxDepthThreshold.value=maxDepthThreshold,this.convolutionMaterial.uniforms.depthScale.value=depthScale,this.convolutionMaterial.uniforms.depthToBlurRatioBias.value=depthToBlurRatioBias,this.convolutionMaterial.defines.USE_DEPTH=depthScale>0;const vertices=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),uvs=new Float32Array([0,0,2,0,0,2]),geometry=new three_module.BufferGeometry;geometry.setAttribute("position",new three_module.BufferAttribute(vertices,3)),geometry.setAttribute("uv",new three_module.BufferAttribute(uvs,2)),this.screen=new three_module.Mesh(geometry,this.convolutionMaterial),this.screen.frustumCulled=!1,this.scene.add(this.screen)}render(renderer,inputBuffer,outputBuffer){const scene=this.scene,camera=this.camera,renderTargetA=this.renderTargetA,renderTargetB=this.renderTargetB;let material=this.convolutionMaterial,uniforms=material.uniforms;uniforms.depthBuffer.value=inputBuffer.depthTexture;const kernel=material.kernel;let destRT,i,l,lastRT=inputBuffer;for(i=0,l=kernel.length-1;i<l;++i)destRT=0==(1&i)?renderTargetA:renderTargetB,uniforms.kernel.value=kernel[i],uniforms.inputBuffer.value=lastRT.texture,renderer.setRenderTarget(destRT),renderer.render(scene,camera),lastRT=destRT;uniforms.kernel.value=kernel[i],uniforms.inputBuffer.value=lastRT.texture,renderer.setRenderTarget(this.renderToScreen?null:outputBuffer),renderer.render(scene,camera)}}class MeshReflectorMaterial extends three_module.MeshStandardMaterial{constructor(parameters={}){super(parameters),this._tDepth={value:null},this._distortionMap={value:null},this._tDiffuse={value:null},this._tDiffuseBlur={value:null},this._textureMatrix={value:null},this._hasBlur={value:!1},this._mirror={value:0},this._mixBlur={value:0},this._blurStrength={value:.5},this._minDepthThreshold={value:.9},this._maxDepthThreshold={value:1},this._depthScale={value:0},this._depthToBlurRatioBias={value:.25},this._distortion={value:1},this._mixContrast={value:1},this.setValues(parameters)}onBeforeCompile(shader){var _shader$defines;null!=(_shader$defines=shader.defines)&&_shader$defines.USE_UV||(shader.defines.USE_UV=""),shader.uniforms.hasBlur=this._hasBlur,shader.uniforms.tDiffuse=this._tDiffuse,shader.uniforms.tDepth=this._tDepth,shader.uniforms.distortionMap=this._distortionMap,shader.uniforms.tDiffuseBlur=this._tDiffuseBlur,shader.uniforms.textureMatrix=this._textureMatrix,shader.uniforms.mirror=this._mirror,shader.uniforms.mixBlur=this._mixBlur,shader.uniforms.mixStrength=this._blurStrength,shader.uniforms.minDepthThreshold=this._minDepthThreshold,shader.uniforms.maxDepthThreshold=this._maxDepthThreshold,shader.uniforms.depthScale=this._depthScale,shader.uniforms.depthToBlurRatioBias=this._depthToBlurRatioBias,shader.uniforms.distortion=this._distortion,shader.uniforms.mixContrast=this._mixContrast,shader.vertexShader=`\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;\n      ${shader.vertexShader}`,shader.vertexShader=shader.vertexShader.replace("#include <project_vertex>","#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );"),shader.fragmentShader=`\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float mixContrast;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;\n        ${shader.fragmentShader}`,shader.fragmentShader=shader.fragmentShader.replace("#include <emissivemap_fragment>","#include <emissivemap_fragment>\n\n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n\n      vec4 merge = base;\n\n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);\n        #else\n          merge = merge * depthFactor;\n        #endif\n\n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n\n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\n      ")}get tDiffuse(){return this._tDiffuse.value}set tDiffuse(v){this._tDiffuse.value=v}get tDepth(){return this._tDepth.value}set tDepth(v){this._tDepth.value=v}get distortionMap(){return this._distortionMap.value}set distortionMap(v){this._distortionMap.value=v}get tDiffuseBlur(){return this._tDiffuseBlur.value}set tDiffuseBlur(v){this._tDiffuseBlur.value=v}get textureMatrix(){return this._textureMatrix.value}set textureMatrix(v){this._textureMatrix.value=v}get hasBlur(){return this._hasBlur.value}set hasBlur(v){this._hasBlur.value=v}get mirror(){return this._mirror.value}set mirror(v){this._mirror.value=v}get mixBlur(){return this._mixBlur.value}set mixBlur(v){this._mixBlur.value=v}get mixStrength(){return this._blurStrength.value}set mixStrength(v){this._blurStrength.value=v}get minDepthThreshold(){return this._minDepthThreshold.value}set minDepthThreshold(v){this._minDepthThreshold.value=v}get maxDepthThreshold(){return this._maxDepthThreshold.value}set maxDepthThreshold(v){this._maxDepthThreshold.value=v}get depthScale(){return this._depthScale.value}set depthScale(v){this._depthScale.value=v}get depthToBlurRatioBias(){return this._depthToBlurRatioBias.value}set depthToBlurRatioBias(v){this._depthToBlurRatioBias.value=v}get distortion(){return this._distortion.value}set distortion(v){this._distortion.value=v}get mixContrast(){return this._mixContrast.value}set mixContrast(v){this._mixContrast.value=v}}(0,index_673ef987_esm.e)({MeshReflectorMaterialImpl:MeshReflectorMaterial});const MeshReflectorMaterial_MeshReflectorMaterial=react.forwardRef((({mixBlur:mixBlur=0,mixStrength:mixStrength=1,resolution:resolution=256,blur:blur=[0,0],minDepthThreshold:minDepthThreshold=.9,maxDepthThreshold:maxDepthThreshold=1,depthScale:depthScale=0,depthToBlurRatioBias:depthToBlurRatioBias=.25,mirror:mirror=0,distortion:distortion=1,mixContrast:mixContrast=1,distortionMap:distortionMap,reflectorOffset:reflectorOffset=0,...props},ref)=>{const gl=(0,index_673ef987_esm.z)((({gl:gl})=>gl)),camera=(0,index_673ef987_esm.z)((({camera:camera})=>camera)),scene=(0,index_673ef987_esm.z)((({scene:scene})=>scene)),hasBlur=(blur=Array.isArray(blur)?blur:[blur,blur])[0]+blur[1]>0,materialRef=react.useRef(null),[reflectorPlane]=react.useState((()=>new three_module.Plane)),[normal]=react.useState((()=>new three_module.Vector3)),[reflectorWorldPosition]=react.useState((()=>new three_module.Vector3)),[cameraWorldPosition]=react.useState((()=>new three_module.Vector3)),[rotationMatrix]=react.useState((()=>new three_module.Matrix4)),[lookAtPosition]=react.useState((()=>new three_module.Vector3(0,0,-1))),[clipPlane]=react.useState((()=>new three_module.Vector4)),[view]=react.useState((()=>new three_module.Vector3)),[target]=react.useState((()=>new three_module.Vector3)),[q]=react.useState((()=>new three_module.Vector4)),[textureMatrix]=react.useState((()=>new three_module.Matrix4)),[virtualCamera]=react.useState((()=>new three_module.PerspectiveCamera)),beforeRender=react.useCallback((()=>{var _materialRef$current;const parent=materialRef.current.parent||(null==(_materialRef$current=materialRef.current)?void 0:_materialRef$current.__r3f.parent);if(!parent)return;if(reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld),cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld),rotationMatrix.extractRotation(parent.matrixWorld),normal.set(0,0,1),normal.applyMatrix4(rotationMatrix),reflectorWorldPosition.addScaledVector(normal,reflectorOffset),view.subVectors(reflectorWorldPosition,cameraWorldPosition),view.dot(normal)>0)return;view.reflect(normal).negate(),view.add(reflectorWorldPosition),rotationMatrix.extractRotation(camera.matrixWorld),lookAtPosition.set(0,0,-1),lookAtPosition.applyMatrix4(rotationMatrix),lookAtPosition.add(cameraWorldPosition),target.subVectors(reflectorWorldPosition,lookAtPosition),target.reflect(normal).negate(),target.add(reflectorWorldPosition),virtualCamera.position.copy(view),virtualCamera.up.set(0,1,0),virtualCamera.up.applyMatrix4(rotationMatrix),virtualCamera.up.reflect(normal),virtualCamera.lookAt(target),virtualCamera.far=camera.far,virtualCamera.updateMatrixWorld(),virtualCamera.projectionMatrix.copy(camera.projectionMatrix),textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),textureMatrix.multiply(virtualCamera.projectionMatrix),textureMatrix.multiply(virtualCamera.matrixWorldInverse),textureMatrix.multiply(parent.matrixWorld),reflectorPlane.setFromNormalAndCoplanarPoint(normal,reflectorWorldPosition),reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse),clipPlane.set(reflectorPlane.normal.x,reflectorPlane.normal.y,reflectorPlane.normal.z,reflectorPlane.constant);const projectionMatrix=virtualCamera.projectionMatrix;q.x=(Math.sign(clipPlane.x)+projectionMatrix.elements[8])/projectionMatrix.elements[0],q.y=(Math.sign(clipPlane.y)+projectionMatrix.elements[9])/projectionMatrix.elements[5],q.z=-1,q.w=(1+projectionMatrix.elements[10])/projectionMatrix.elements[14],clipPlane.multiplyScalar(2/clipPlane.dot(q)),projectionMatrix.elements[2]=clipPlane.x,projectionMatrix.elements[6]=clipPlane.y,projectionMatrix.elements[10]=clipPlane.z+1,projectionMatrix.elements[14]=clipPlane.w}),[camera,reflectorOffset]),[fbo1,fbo2,blurpass,reflectorProps]=react.useMemo((()=>{const parameters={minFilter:three_module.LinearFilter,magFilter:three_module.LinearFilter,type:three_module.HalfFloatType},fbo1=new three_module.WebGLRenderTarget(resolution,resolution,parameters);fbo1.depthBuffer=!0,fbo1.depthTexture=new three_module.DepthTexture(resolution,resolution),fbo1.depthTexture.format=three_module.DepthFormat,fbo1.depthTexture.type=three_module.UnsignedShortType;const fbo2=new three_module.WebGLRenderTarget(resolution,resolution,parameters);return[fbo1,fbo2,new BlurPass({gl:gl,resolution:resolution,width:blur[0],height:blur[1],minDepthThreshold:minDepthThreshold,maxDepthThreshold:maxDepthThreshold,depthScale:depthScale,depthToBlurRatioBias:depthToBlurRatioBias}),{mirror:mirror,textureMatrix:textureMatrix,mixBlur:mixBlur,tDiffuse:fbo1.texture,tDepth:fbo1.depthTexture,tDiffuseBlur:fbo2.texture,hasBlur:hasBlur,mixStrength:mixStrength,minDepthThreshold:minDepthThreshold,maxDepthThreshold:maxDepthThreshold,depthScale:depthScale,depthToBlurRatioBias:depthToBlurRatioBias,distortion:distortion,distortionMap:distortionMap,mixContrast:mixContrast,"defines-USE_BLUR":hasBlur?"":void 0,"defines-USE_DEPTH":depthScale>0?"":void 0,"defines-USE_DISTORTION":distortionMap?"":void 0}]}),[gl,blur,textureMatrix,resolution,mirror,hasBlur,mixBlur,mixStrength,minDepthThreshold,maxDepthThreshold,depthScale,depthToBlurRatioBias,distortion,distortionMap,mixContrast]);return(0,index_673ef987_esm.A)((()=>{var _materialRef$current2;const parent=materialRef.current.parent||(null==(_materialRef$current2=materialRef.current)?void 0:_materialRef$current2.__r3f.parent);if(!parent)return;parent.visible=!1;const currentXrEnabled=gl.xr.enabled,currentShadowAutoUpdate=gl.shadowMap.autoUpdate;beforeRender(),gl.xr.enabled=!1,gl.shadowMap.autoUpdate=!1,gl.setRenderTarget(fbo1),gl.state.buffers.depth.setMask(!0),gl.autoClear||gl.clear(),gl.render(scene,virtualCamera),hasBlur&&blurpass.render(gl,fbo1,fbo2),gl.xr.enabled=currentXrEnabled,gl.shadowMap.autoUpdate=currentShadowAutoUpdate,parent.visible=!0,gl.setRenderTarget(null)})),react.createElement("meshReflectorMaterialImpl",(0,esm_extends.Z)({attach:"material",key:"key"+reflectorProps["defines-USE_BLUR"]+reflectorProps["defines-USE_DEPTH"]+reflectorProps["defines-USE_DISTORTION"],ref:react_merge_refs_esm([materialRef,ref])},reflectorProps,props))}));var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["resolution","mixBlur","mixStrength","metalness","blur","mirror","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","distortion","mixContrast","reflectorOffset","roughness","color"],FloorReflection=function FloorReflection(_ref){var _ref$resolution=_ref.resolution,resolution=void 0===_ref$resolution?512:_ref$resolution,_ref$mixBlur=_ref.mixBlur,mixBlur=void 0===_ref$mixBlur?.8:_ref$mixBlur,_ref$mixStrength=_ref.mixStrength,mixStrength=void 0===_ref$mixStrength?80:_ref$mixStrength,_ref$metalness=_ref.metalness,metalness=void 0===_ref$metalness?.5:_ref$metalness,_ref$blur=_ref.blur,blur=void 0===_ref$blur?[300,200]:_ref$blur,_ref$mirror=_ref.mirror,mirror=void 0===_ref$mirror?1:_ref$mirror,_ref$minDepthThreshol=_ref.minDepthThreshold,minDepthThreshold=void 0===_ref$minDepthThreshol?.4:_ref$minDepthThreshol,_ref$maxDepthThreshol=_ref.maxDepthThreshold,maxDepthThreshold=void 0===_ref$maxDepthThreshol?1.4:_ref$maxDepthThreshol,_ref$depthScale=_ref.depthScale,depthScale=void 0===_ref$depthScale?1.2:_ref$depthScale,_ref$depthToBlurRatio=_ref.depthToBlurRatioBias,depthToBlurRatioBias=void 0===_ref$depthToBlurRatio?1:_ref$depthToBlurRatio,_ref$distortion=_ref.distortion,distortion=void 0===_ref$distortion?0:_ref$distortion,_ref$mixContrast=_ref.mixContrast,mixContrast=void 0===_ref$mixContrast?1:_ref$mixContrast,_ref$reflectorOffset=_ref.reflectorOffset,reflectorOffset=void 0===_ref$reflectorOffset?0:_ref$reflectorOffset,_ref$roughness=_ref.roughness,roughness=void 0===_ref$roughness?1:_ref$roughness,color=_ref.color,props=(0,objectWithoutProperties.Z)(_ref,_excluded);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("fog",{attach:"fog",args:[color,2,6]}),(0,jsx_runtime.jsx)("group",{position:[0,0,0],children:(0,jsx_runtime.jsxs)("mesh",{rotation:[-Math.PI/2,0,0],children:[(0,jsx_runtime.jsx)("planeGeometry",{args:[20,10]}),(0,jsx_runtime.jsx)(MeshReflectorMaterial_MeshReflectorMaterial,(0,objectSpread2.Z)({resolution:resolution,mixBlur:mixBlur,mixStrength:mixStrength,metalness:metalness,blur:blur,mirror:mirror,minDepthThreshold:minDepthThreshold,maxDepthThreshold:maxDepthThreshold,depthScale:depthScale,depthToBlurRatioBias:depthToBlurRatioBias,distortion:distortion,mixContrast:mixContrast,reflectorOffset:reflectorOffset,roughness:roughness,color:color,envMapIntensity:0},props))]})})]})};FloorReflection.__docgenInfo={description:"",methods:[],displayName:"FloorReflection",props:{resolution:{defaultValue:{value:"512",computed:!1},required:!1},mixBlur:{defaultValue:{value:"0.8",computed:!1},required:!1},mixStrength:{defaultValue:{value:"80",computed:!1},required:!1},metalness:{defaultValue:{value:"0.5",computed:!1},required:!1},blur:{defaultValue:{value:"[300, 200]",computed:!1},required:!1},mirror:{defaultValue:{value:"1",computed:!1},required:!1},minDepthThreshold:{defaultValue:{value:"0.4",computed:!1},required:!1},maxDepthThreshold:{defaultValue:{value:"1.4",computed:!1},required:!1},depthScale:{defaultValue:{value:"1.2",computed:!1},required:!1},depthToBlurRatioBias:{defaultValue:{value:"1",computed:!1},required:!1},distortion:{defaultValue:{value:"0",computed:!1},required:!1},mixContrast:{defaultValue:{value:"1",computed:!1},required:!1},reflectorOffset:{defaultValue:{value:"0",computed:!1},required:!1},roughness:{defaultValue:{value:"1",computed:!1},required:!1}}};var _Bloom$parameters,_Bloom$parameters2,_Bloom$parameters2$do,_FloatingSparkles$par,_FloatingSparkles$par2,_FloatingSparkles$par3,_SpawnEffectAndAnimat,_SpawnEffectAndAnimat2,_SpawnEffectAndAnimat3,_Posing$parameters,_Posing$parameters2,_Posing$parameters2$d,_IdleBlinking$paramet,_IdleBlinking$paramet2,_IdleBlinking$paramet3,_environmentModel$par,_environmentModel$par2,_environmentModel$par3,_ReflectiveFloor$para,_ReflectiveFloor$para2,_ReflectiveFloor$para3,Avatar_stories=__webpack_require__("./src/components/Avatar/Avatar.stories.tsx"),Avatar=function Avatar(args){return(0,jsx_runtime.jsx)(components_Avatar.q,(0,objectSpread2.Z)({},args))},Sparkles=function Sparkles(args){return(0,jsx_runtime.jsx)(core_Sparkles.P,(0,objectSpread2.Z)({},args))},EnvironmentModel=function EnvironmentModel(args){return(0,jsx_runtime.jsx)(Models.R8,(0,objectSpread2.Z)({},args))},Examples_stories={component:Avatar,subcomponents:{Sparkles:Sparkles,EnvironmentModel:EnvironmentModel}},Bloom=function Bloom(args){return(0,jsx_runtime.jsx)(Avatar,{modelSrc:Stories_service.HI.one,cameraTarget:components_Avatar.b.TARGET.FULL_BODY.FEMALE,cameraInitialDistance:components_Avatar.b.CONTROLS.FULL_BODY.MAX_DISTANCE,effects:{bloom:(0,objectSpread2.Z)({},args)},ambientLightColor:"#ffffff",dirLightColor:"#ffffff",spotLightColor:"#adbfe5",ambientLightIntensity:0,dirLightIntensity:2.2,spotLightIntensity:.5,environment:"apartment",background:{color:"rgb(9,20,26)"}})};Bloom.args={luminanceThreshold:1,luminanceSmoothing:1,mipmapBlur:!0,kernelSize:1,intensity:4,materialIntensity:1},Bloom.argTypes=(0,objectSpread2.Z)({luminanceThreshold:{control:{type:"range",step:.01,min:0,max:1}},luminanceSmoothing:{control:{type:"range",step:.01,min:0,max:1}},mipmapBlur:{control:{type:"boolean"}},intensity:{control:{type:"range",min:0,max:100}},materialIntensity:{control:{type:"range",step:.01,min:0,max:1}},kernelSize:{control:{type:"range",min:0,max:4}}},Stories_service.nx);var FloatingSparkles=function FloatingSparkles(args){return(0,jsx_runtime.jsx)(Avatar,{modelSrc:(0,services.gT)("female.glb"),cameraTarget:components_Avatar.b.TARGET.FULL_BODY.FEMALE,cameraInitialDistance:components_Avatar.b.CONTROLS.FULL_BODY.MAX_DISTANCE,children:(0,jsx_runtime.jsx)(Sparkles,(0,objectSpread2.Z)({},args))})};FloatingSparkles.args={count:70,scale:4,size:5,speed:.25,opacity:.6,color:"#124cca"},FloatingSparkles.argTypes=(0,objectSpread2.Z)({count:{control:{type:"range",min:0,max:70}},scale:{control:{type:"number"}},size:{control:{type:"range",min:0,max:10}},speed:{control:{type:"range",step:.01,min:0,max:20}},opacity:{control:{type:"range",step:.01,min:0,max:1.1}}},Stories_service.nx);var SpawnEffectAndAnimation=function SpawnEffectAndAnimation(args){return(0,jsx_runtime.jsx)(Avatar,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{children:(0,jsx_runtime.jsx)(Sparkles,{color:"white",count:50,opacity:.9,scale:5,size:.5,speed:.35})}))};SpawnEffectAndAnimation.args={onLoadedEffect:{src:(0,services.gT)("spawn-effect.glb"),loop:12},onLoadedAnimation:{src:(0,services.gT)("male-spawn-animation.fbx"),loop:1},cameraTarget:components_Avatar.b.TARGET.FULL_BODY.FEMALE,cameraInitialDistance:components_Avatar.b.CONTROLS.FULL_BODY.MAX_DISTANCE,modelSrc:(0,services.gT)("male-emissive.glb"),animationSrc:(0,services.gT)("male-idle.glb"),background:{color:"rgb(9,20,26)"}},SpawnEffectAndAnimation.argTypes=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Stories_service.nx),{},{onLoadedEffect:{control:{disable:!1}},onLoadedAnimation:{control:{disable:!1}},modelSrc:{control:{disable:!1}},animationSrc:{control:{disable:!1}}});var Posing=function Posing(args){return(0,jsx_runtime.jsx)(Avatar,(0,objectSpread2.Z)({},args))};Posing.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Avatar_stories.Static.args),{},{modelSrc:(0,services.gT)("male.glb"),poseSrc:(0,services.gT)("male-pose-standing.glb"),cameraTarget:components_Avatar.b.TARGET.FULL_BODY.MALE,cameraInitialDistance:components_Avatar.b.CONTROLS.FULL_BODY.MAX_DISTANCE,onLoaded:function onLoaded(){return console.info("EVENT: posing avatar loaded")},onLoading:function onLoading(){return console.info("EVENT: loading posing avatar")},emotion:Stories_service.eE.smile}),Posing.argTypes={headMovement:{control:!1}};var IdleBlinking=function IdleBlinking(args){return(0,jsx_runtime.jsx)(Avatar,(0,objectSpread2.Z)({},args))};IdleBlinking.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({Comment:"Idle blinking works when avatar includes morph targets for 'ARKit' and 'Eyes Extra'."},Avatar_stories.Static.args),{},{modelSrc:Stories_service.HI.seven,animationSrc:Stories_service.jb.three,cameraTarget:components_Avatar.b.TARGET.FULL_BODY.MALE,cameraInitialDistance:components_Avatar.b.CONTROLS.FULL_BODY.MAX_DISTANCE,headMovement:!0,emotion:Stories_service.eE.smile}),IdleBlinking.argTypes=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Stories_service.nx),{},{modelSrc:{options:Object.values({seven:Stories_service.HI.seven}),control:{type:"select"}},animationSrc:{options:Object.values(Stories_service.jb),control:{type:"select"}}});var environmentModel=function environmentModel(args){return(0,jsx_runtime.jsx)(Avatar,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{effects:{ambientOcclusion:!0},children:(0,jsx_runtime.jsx)(EnvironmentModel,{environment:args.environmentModel,scale:args.environmentScale})}))};environmentModel.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({environmentModel:"spaceStation"},Avatar_stories.Static.args),{},{fov:50,environmentScale:1,shadows:!0,modelSrc:Stories_service.HI.one,animationSrc:Stories_service.jb.one,environment:"warehouse",onLoaded:function onLoaded(){return console.info("EVENT: environment model loaded")}}),environmentModel.argTypes=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Stories_service.nx),{},{onLoading:{table:{disable:!0}},dirLightPosition:{table:{disable:!0}},spotLightPosition:{table:{disable:!0}},scale:{table:{disable:!0}},environmentModel:{options:Object.keys(Environment_service.om),control:{type:"select"}},fov:{control:{type:"range",min:30,max:100,step:1}},environmentScale:{control:{type:"range",min:.01,max:10,step:.01}},ambientLightIntensity:{control:{type:"range",min:0,max:20,step:.1}},dirLightIntensity:{control:{type:"range",min:0,max:20,step:.1}},spotLightIntensity:{control:{type:"range",min:0,max:20,step:.1}},environment:{options:Object.keys(Environment_service.s$),control:{type:"select"}}});var ReflectiveFloor=function ReflectiveFloor(args){return(0,jsx_runtime.jsxs)(Avatar,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{effects:{ambientOcclusion:!0},background:{color:null==args?void 0:args.color},children:[(0,jsx_runtime.jsx)(FloorReflection,(0,objectSpread2.Z)({},args)),(null==args?void 0:args.debug)&&(0,jsx_runtime.jsx)(StatsGl.G,{})]}))};ReflectiveFloor.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Avatar_stories.Static.args),{},{fov:50,shadows:!1,modelSrc:Stories_service.HI.one,animationSrc:Stories_service.jb.three,environment:"warehouse",onLoaded:function onLoaded(){return console.info("EVENT: environment model loaded")},resolution:512,mixBlur:.8,mixStrength:80,metalness:.5,blur:[300,200],mirror:1,minDepthThreshold:.4,maxDepthThreshold:1.4,depthScale:1.2,depthToBlurRatioBias:1,distortion:0,mixContrast:1,reflectorOffset:0,roughness:1,color:"rgb(9,20,26)",debug:!1}),ReflectiveFloor.argTypes=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Stories_service.nx),{},{fov:{control:{type:"range",min:30,max:100,step:1}},environment:{options:Object.keys(Environment_service.s$),control:{type:"select"}},resolution:{control:{type:"range",min:64,max:2048,step:64}},mixBlur:{control:{type:"range",min:0,max:10,step:.1}},mixStrength:{control:{type:"range",min:0,max:100,step:1}},metalness:{control:{type:"range",min:0,max:1,step:.01}},mirror:{control:{type:"range",min:0,max:1,step:1}},minDepthThreshold:{control:{type:"range",min:0,max:10,step:.01}},maxDepthThreshold:{control:{type:"range",min:0,max:10,step:.01}},depthScale:{control:{type:"range",min:0,max:20,step:.01}},depthToBlurRatioBias:{control:{type:"range",min:0,max:1,step:.01}},distortion:{control:{type:"range",min:0,max:1,step:.01}},mixContrast:{control:{type:"range",min:0,max:1,step:.01}},reflectorOffset:{control:{type:"range",min:0,max:1,step:.01}},roughness:{control:{type:"range",min:0,max:1,step:.01}}}),Bloom.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Bloom.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Bloom$parameters=Bloom.parameters)||void 0===_Bloom$parameters?void 0:_Bloom$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'(args: BloomConfiguration | undefined) => <Avatar modelSrc={modelPresets.one} cameraTarget={CAMERA.TARGET.FULL_BODY.FEMALE} cameraInitialDistance={CAMERA.CONTROLS.FULL_BODY.MAX_DISTANCE} effects={{\n  bloom: {\n    ...args\n  }\n}} ambientLightColor="#ffffff" dirLightColor="#ffffff" spotLightColor="#adbfe5" ambientLightIntensity={0} dirLightIntensity={2.2} spotLightIntensity={0.5} environment="apartment" background={{\n  color: \'rgb(9,20,26)\'\n}} />'},null===(_Bloom$parameters2=Bloom.parameters)||void 0===_Bloom$parameters2||null===(_Bloom$parameters2$do=_Bloom$parameters2.docs)||void 0===_Bloom$parameters2$do?void 0:_Bloom$parameters2$do.source)})}),FloatingSparkles.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},FloatingSparkles.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_FloatingSparkles$par=FloatingSparkles.parameters)||void 0===_FloatingSparkles$par?void 0:_FloatingSparkles$par.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => <Avatar modelSrc={getStoryAssetPath('female.glb')} cameraTarget={CAMERA.TARGET.FULL_BODY.FEMALE} cameraInitialDistance={CAMERA.CONTROLS.FULL_BODY.MAX_DISTANCE}>\n    <Sparkles {...args} />\n  </Avatar>"},null===(_FloatingSparkles$par2=FloatingSparkles.parameters)||void 0===_FloatingSparkles$par2||null===(_FloatingSparkles$par3=_FloatingSparkles$par2.docs)||void 0===_FloatingSparkles$par3?void 0:_FloatingSparkles$par3.source)})}),SpawnEffectAndAnimation.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SpawnEffectAndAnimation.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SpawnEffectAndAnimat=SpawnEffectAndAnimation.parameters)||void 0===_SpawnEffectAndAnimat?void 0:_SpawnEffectAndAnimat.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => <Avatar {...args}>\n    <Sparkles color="white" count={50} opacity={0.9} scale={5} size={0.5} speed={0.35} />\n  </Avatar>'},null===(_SpawnEffectAndAnimat2=SpawnEffectAndAnimation.parameters)||void 0===_SpawnEffectAndAnimat2||null===(_SpawnEffectAndAnimat3=_SpawnEffectAndAnimat2.docs)||void 0===_SpawnEffectAndAnimat3?void 0:_SpawnEffectAndAnimat3.source)})}),Posing.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Posing.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Posing$parameters=Posing.parameters)||void 0===_Posing$parameters?void 0:_Posing$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => <Avatar {...args} />"},null===(_Posing$parameters2=Posing.parameters)||void 0===_Posing$parameters2||null===(_Posing$parameters2$d=_Posing$parameters2.docs)||void 0===_Posing$parameters2$d?void 0:_Posing$parameters2$d.source)})}),IdleBlinking.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},IdleBlinking.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_IdleBlinking$paramet=IdleBlinking.parameters)||void 0===_IdleBlinking$paramet?void 0:_IdleBlinking$paramet.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => <Avatar {...args} />"},null===(_IdleBlinking$paramet2=IdleBlinking.parameters)||void 0===_IdleBlinking$paramet2||null===(_IdleBlinking$paramet3=_IdleBlinking$paramet2.docs)||void 0===_IdleBlinking$paramet3?void 0:_IdleBlinking$paramet3.source)})}),environmentModel.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},environmentModel.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_environmentModel$par=environmentModel.parameters)||void 0===_environmentModel$par?void 0:_environmentModel$par.docs),{},{source:(0,objectSpread2.Z)({originalSource:"(args: AvatarProps & {\n  environmentModel: string;\n  environmentScale: number;\n}) => <Avatar {...args} effects={{\n  ambientOcclusion: true\n}}>\n    <EnvironmentModel environment={(args.environmentModel! as string)} scale={(args.environmentScale! as number)} />\n  </Avatar>"},null===(_environmentModel$par2=environmentModel.parameters)||void 0===_environmentModel$par2||null===(_environmentModel$par3=_environmentModel$par2.docs)||void 0===_environmentModel$par3?void 0:_environmentModel$par3.source)})}),ReflectiveFloor.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},ReflectiveFloor.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_ReflectiveFloor$para=ReflectiveFloor.parameters)||void 0===_ReflectiveFloor$para?void 0:_ReflectiveFloor$para.docs),{},{source:(0,objectSpread2.Z)({originalSource:"(args: AvatarProps & FloorReflectionProps & {\n  debug: boolean;\n}) => <Avatar {...args} effects={{\n  ambientOcclusion: true\n}} background={{\n  color: args?.color\n}}>\n    <FloorReflection {...args} />\n    {args?.debug && <StatsGl />}\n  </Avatar>"},null===(_ReflectiveFloor$para2=ReflectiveFloor.parameters)||void 0===_ReflectiveFloor$para2||null===(_ReflectiveFloor$para3=_ReflectiveFloor$para2.docs)||void 0===_ReflectiveFloor$para3?void 0:_ReflectiveFloor$para3.source)})});var __namedExportsOrder=["Bloom","FloatingSparkles","SpawnEffectAndAnimation","Posing","IdleBlinking","environmentModel","ReflectiveFloor"];Bloom.__docgenInfo={description:"",methods:[],displayName:"Bloom"},FloatingSparkles.__docgenInfo={description:"",methods:[],displayName:"FloatingSparkles"},SpawnEffectAndAnimation.__docgenInfo={description:"",methods:[],displayName:"SpawnEffectAndAnimation"},Posing.__docgenInfo={description:"",methods:[],displayName:"Posing"},IdleBlinking.__docgenInfo={description:"",methods:[],displayName:"IdleBlinking"},environmentModel.__docgenInfo={description:"",methods:[],displayName:"environmentModel",props:{environmentModel:{required:!0,tsType:{name:"string"},description:""},environmentScale:{required:!0,tsType:{name:"number"},description:""}}},ReflectiveFloor.__docgenInfo={description:"",methods:[],displayName:"ReflectiveFloor",props:{debug:{required:!0,tsType:{name:"boolean"},description:""}}}}}]);