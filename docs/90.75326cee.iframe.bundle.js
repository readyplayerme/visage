"use strict";(self.webpackChunk_readyplayerme_visage=self.webpackChunk_readyplayerme_visage||[]).push([[90],{"./node_modules/@react-three/drei/core/Bounds.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{B:function(){return useBounds},Y:function(){return Bounds}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),three__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/three/build/three.module.js"),_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@react-three/fiber/dist/index-673ef987.esm.js");const isOrthographic=def=>def&&def.isOrthographicCamera,isBox3=def=>def&&def.isBox3,context=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);function Bounds({children:children,damping:damping=6,fit:fit,clip:clip,observe:observe,margin:margin=1.2,eps:eps=.01,onFit:onFit}){const ref=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),{camera:camera,invalidate:invalidate,size:size,controls:controlsImpl}=(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__.z)(),controls=controlsImpl,onFitRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(onFit);function equals(a,b){return Math.abs(a.x-b.x)<eps&&Math.abs(a.y-b.y)<eps&&Math.abs(a.z-b.z)<eps}function damp(v,t,lambda,delta){v.x=three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.damp(v.x,t.x,lambda,delta),v.y=three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.damp(v.y,t.y,lambda,delta),v.z=three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.damp(v.z,t.z,lambda,delta)}onFitRef.current=onFit;const[current]=react__WEBPACK_IMPORTED_MODULE_0__.useState((()=>({animating:!1,focus:new three__WEBPACK_IMPORTED_MODULE_2__.Vector3,camera:new three__WEBPACK_IMPORTED_MODULE_2__.Vector3,zoom:1}))),[goal]=react__WEBPACK_IMPORTED_MODULE_0__.useState((()=>({focus:new three__WEBPACK_IMPORTED_MODULE_2__.Vector3,camera:new three__WEBPACK_IMPORTED_MODULE_2__.Vector3,zoom:1}))),[box]=react__WEBPACK_IMPORTED_MODULE_0__.useState((()=>new three__WEBPACK_IMPORTED_MODULE_2__.Box3)),api=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>{function getSize(){const size=box.getSize(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3),center=box.getCenter(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3),maxSize=Math.max(size.x,size.y,size.z),fitHeightDistance=isOrthographic(camera)?4*maxSize:maxSize/(2*Math.atan(Math.PI*camera.fov/360)),fitWidthDistance=isOrthographic(camera)?4*maxSize:fitHeightDistance/camera.aspect,distance=margin*Math.max(fitHeightDistance,fitWidthDistance);return{box:box,size:size,center:center,distance:distance}}return{getSize:getSize,refresh(object){if(isBox3(object))box.copy(object);else{const target=object||ref.current;if(!target)return this;target.updateWorldMatrix(!0,!0),box.setFromObject(target)}if(box.isEmpty()){const max=camera.position.length()||10;box.setFromCenterAndSize(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3,new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(max,max,max))}if("OrthographicTrackballControls"===(null==controls?void 0:controls.constructor.name)){const{distance:distance}=getSize(),direction=camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance),newPos=controls.target.clone().add(direction);camera.position.copy(newPos)}return this},clip(){const{distance:distance}=getSize();return controls&&(controls.maxDistance=10*distance),camera.near=distance/100,camera.far=100*distance,camera.updateProjectionMatrix(),controls&&controls.update(),invalidate(),this},to({position:position,target:target}){current.camera.copy(camera.position);const{center:center}=getSize();return goal.camera.set(...position),target?goal.focus.set(...target):goal.focus.copy(center),damping?current.animating=!0:camera.position.set(...position),this},fit(){current.camera.copy(camera.position),controls&&current.focus.copy(controls.target);const{center:center,distance:distance}=getSize(),direction=center.clone().sub(camera.position).normalize().multiplyScalar(distance);if(goal.camera.copy(center).sub(direction),goal.focus.copy(center),isOrthographic(camera)){current.zoom=camera.zoom;let maxHeight=0,maxWidth=0;const vertices=[new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x,box.min.y,box.min.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x,box.max.y,box.min.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x,box.min.y,box.max.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x,box.max.y,box.max.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x,box.max.y,box.max.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x,box.max.y,box.min.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x,box.min.y,box.max.z),new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x,box.min.y,box.min.z)];center.applyMatrix4(camera.matrixWorldInverse);for(const v of vertices)v.applyMatrix4(camera.matrixWorldInverse),maxHeight=Math.max(maxHeight,Math.abs(v.y-center.y)),maxWidth=Math.max(maxWidth,Math.abs(v.x-center.x));maxHeight*=2,maxWidth*=2;const zoomForHeight=(camera.top-camera.bottom)/maxHeight,zoomForWidth=(camera.right-camera.left)/maxWidth;goal.zoom=Math.min(zoomForHeight,zoomForWidth)/margin,damping||(camera.zoom=goal.zoom,camera.updateProjectionMatrix())}return damping?current.animating=!0:(camera.position.copy(goal.camera),camera.lookAt(goal.focus),controls&&(controls.target.copy(goal.focus),controls.update())),onFitRef.current&&onFitRef.current(this.getSize()),invalidate(),this}}}),[box,camera,controls,margin,damping,invalidate]);react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect((()=>{if(controls){const callback=()=>current.animating=!1;return controls.addEventListener("start",callback),()=>controls.removeEventListener("start",callback)}}),[controls]);const count=react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);return react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect((()=>{(observe||0==count.current++)&&(api.refresh(),fit&&api.fit(),clip&&api.clip())}),[size,clip,fit,observe,camera,controls]),(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__.A)(((state,delta)=>{if(current.animating){if(damp(current.focus,goal.focus,damping,delta),damp(current.camera,goal.camera,damping,delta),current.zoom=three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.damp(current.zoom,goal.zoom,damping,delta),camera.position.copy(current.camera),isOrthographic(camera)&&(camera.zoom=current.zoom,camera.updateProjectionMatrix()),controls?(controls.target.copy(current.focus),controls.update()):camera.lookAt(current.focus),invalidate(),isOrthographic(camera)&&!(Math.abs(current.zoom-goal.zoom)<eps))return;if(!isOrthographic(camera)&&!equals(current.camera,goal.camera))return;if(controls&&!equals(current.focus,goal.focus))return;current.animating=!1}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("group",{ref:ref},react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Provider,{value:api},children))}function useBounds(){return react__WEBPACK_IMPORTED_MODULE_0__.useContext(context)}},"./node_modules/@react-three/drei/core/ContactShadows.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{j:function(){return ContactShadows}});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),index_673ef987_esm=__webpack_require__("./node_modules/@react-three/fiber/dist/index-673ef987.esm.js");const HorizontalBlurShader={uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:"\n      varying vec2 vUv;\n\n      void main() {\n\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n      }\n  ",fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform float h;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 sum = vec4( 0.0 );\n\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\n\n    \tgl_FragColor = sum;\n\n    }\n  "},VerticalBlurShader={uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  ",fragmentShader:"\n\n  uniform sampler2D tDiffuse;\n  uniform float v;\n\n  varying vec2 vUv;\n\n  void main() {\n\n    vec4 sum = vec4( 0.0 );\n\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\n\n    gl_FragColor = sum;\n\n  }\n  "},ContactShadows=react.forwardRef((({scale:scale=10,frames:frames=1/0,opacity:opacity=1,width:width=1,height:height=1,blur:blur=1,near:near=0,far:far=10,resolution:resolution=512,smooth:smooth=!0,color:color="#000000",depthWrite:depthWrite=!1,renderOrder:renderOrder,...props},fref)=>{const ref=react.useRef(null),scene=(0,index_673ef987_esm.z)((state=>state.scene)),gl=(0,index_673ef987_esm.z)((state=>state.gl)),shadowCamera=react.useRef(null);width*=Array.isArray(scale)?scale[0]:scale||1,height*=Array.isArray(scale)?scale[1]:scale||1;const[renderTarget,planeGeometry,depthMaterial,blurPlane,horizontalBlurMaterial,verticalBlurMaterial,renderTargetBlur]=react.useMemo((()=>{const renderTarget=new three_module.WebGLRenderTarget(resolution,resolution),renderTargetBlur=new three_module.WebGLRenderTarget(resolution,resolution);renderTargetBlur.texture.generateMipmaps=renderTarget.texture.generateMipmaps=!1;const planeGeometry=new three_module.PlaneGeometry(width,height).rotateX(Math.PI/2),blurPlane=new three_module.Mesh(planeGeometry),depthMaterial=new three_module.MeshDepthMaterial;depthMaterial.depthTest=depthMaterial.depthWrite=!1,depthMaterial.onBeforeCompile=shader=>{shader.uniforms={...shader.uniforms,ucolor:{value:new three_module.Color(color)}},shader.fragmentShader=shader.fragmentShader.replace("void main() {","uniform vec3 ucolor;\n           void main() {\n          "),shader.fragmentShader=shader.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );")};const horizontalBlurMaterial=new three_module.ShaderMaterial(HorizontalBlurShader),verticalBlurMaterial=new three_module.ShaderMaterial(VerticalBlurShader);return verticalBlurMaterial.depthTest=horizontalBlurMaterial.depthTest=!1,[renderTarget,planeGeometry,depthMaterial,blurPlane,horizontalBlurMaterial,verticalBlurMaterial,renderTargetBlur]}),[resolution,width,height,scale,color]),blurShadows=blur=>{blurPlane.visible=!0,blurPlane.material=horizontalBlurMaterial,horizontalBlurMaterial.uniforms.tDiffuse.value=renderTarget.texture,horizontalBlurMaterial.uniforms.h.value=1*blur/256,gl.setRenderTarget(renderTargetBlur),gl.render(blurPlane,shadowCamera.current),blurPlane.material=verticalBlurMaterial,verticalBlurMaterial.uniforms.tDiffuse.value=renderTargetBlur.texture,verticalBlurMaterial.uniforms.v.value=1*blur/256,gl.setRenderTarget(renderTarget),gl.render(blurPlane,shadowCamera.current),blurPlane.visible=!1};let initialBackground,initialOverrideMaterial,count=0;return(0,index_673ef987_esm.A)((()=>{shadowCamera.current&&(frames===1/0||count<frames)&&(count++,initialBackground=scene.background,initialOverrideMaterial=scene.overrideMaterial,ref.current.visible=!1,scene.background=null,scene.overrideMaterial=depthMaterial,gl.setRenderTarget(renderTarget),gl.render(scene,shadowCamera.current),blurShadows(blur),smooth&&blurShadows(.4*blur),gl.setRenderTarget(null),ref.current.visible=!0,scene.overrideMaterial=initialOverrideMaterial,scene.background=initialBackground)})),react.useImperativeHandle(fref,(()=>ref.current),[]),react.createElement("group",(0,esm_extends.Z)({"rotation-x":Math.PI/2},props,{ref:ref}),react.createElement("mesh",{renderOrder:renderOrder,geometry:planeGeometry,scale:[1,-1,1],rotation:[-Math.PI/2,0,0]},react.createElement("meshBasicMaterial",{transparent:!0,map:renderTarget.texture,opacity:opacity,depthWrite:depthWrite})),react.createElement("orthographicCamera",{ref:shadowCamera,args:[-width/2,width/2,height/2,-height/2,near,far]}))}))},"./node_modules/@react-three/drei/web/PresentationControls.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{N:function(){return PresentationControls}});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),index_673ef987_esm=__webpack_require__("./node_modules/@react-three/fiber/dist/index-673ef987.esm.js");let updateQueue=makeQueue();const react_spring_rafz_esm_raf=fn=>schedule(fn,updateQueue);let writeQueue=makeQueue();react_spring_rafz_esm_raf.write=fn=>schedule(fn,writeQueue);let onStartQueue=makeQueue();react_spring_rafz_esm_raf.onStart=fn=>schedule(fn,onStartQueue);let onFrameQueue=makeQueue();react_spring_rafz_esm_raf.onFrame=fn=>schedule(fn,onFrameQueue);let onFinishQueue=makeQueue();react_spring_rafz_esm_raf.onFinish=fn=>schedule(fn,onFinishQueue);let timeouts=[];react_spring_rafz_esm_raf.setTimeout=(handler,ms)=>{let time=react_spring_rafz_esm_raf.now()+ms,cancel=()=>{let i=timeouts.findIndex((t=>t.cancel==cancel));~i&&timeouts.splice(i,1),pendingCount-=~i?1:0},timeout={time:time,handler:handler,cancel:cancel};return timeouts.splice(findTimeout(time),0,timeout),pendingCount+=1,start(),timeout};let findTimeout=time=>~(~timeouts.findIndex((t=>t.time>time))||~timeouts.length);react_spring_rafz_esm_raf.cancel=fn=>{onStartQueue.delete(fn),onFrameQueue.delete(fn),onFinishQueue.delete(fn),updateQueue.delete(fn),writeQueue.delete(fn)},react_spring_rafz_esm_raf.sync=fn=>{sync=!0,react_spring_rafz_esm_raf.batchedUpdates(fn),sync=!1},react_spring_rafz_esm_raf.throttle=fn=>{let lastArgs;function queuedFn(){try{fn(...lastArgs)}finally{lastArgs=null}}function throttled(...args){lastArgs=args,react_spring_rafz_esm_raf.onStart(queuedFn)}return throttled.handler=fn,throttled.cancel=()=>{onStartQueue.delete(queuedFn),lastArgs=null},throttled};let nativeRaf="undefined"!=typeof window?window.requestAnimationFrame:()=>{};react_spring_rafz_esm_raf.use=impl=>nativeRaf=impl,react_spring_rafz_esm_raf.now="undefined"!=typeof performance?()=>performance.now():Date.now,react_spring_rafz_esm_raf.batchedUpdates=fn=>fn(),react_spring_rafz_esm_raf.catch=console.error,react_spring_rafz_esm_raf.frameLoop="always",react_spring_rafz_esm_raf.advance=()=>{"demand"!==react_spring_rafz_esm_raf.frameLoop?console.warn("Cannot call the manual advancement of rafz whilst frameLoop is not set as demand"):update()};let ts=-1,pendingCount=0,sync=!1;function schedule(fn,queue){sync?(queue.delete(fn),fn(0)):(queue.add(fn),start())}function start(){ts<0&&(ts=0,"demand"!==react_spring_rafz_esm_raf.frameLoop&&nativeRaf(loop))}function loop(){~ts&&(nativeRaf(loop),react_spring_rafz_esm_raf.batchedUpdates(update))}function update(){let prevTs=ts;ts=react_spring_rafz_esm_raf.now();let count=findTimeout(ts);count&&(eachSafely(timeouts.splice(0,count),(t=>t.handler())),pendingCount-=count),pendingCount?(onStartQueue.flush(),updateQueue.flush(prevTs?Math.min(64,ts-prevTs):16.667),onFrameQueue.flush(),writeQueue.flush(),onFinishQueue.flush()):function stop(){ts=-1}()}function makeQueue(){let next=new Set,current=next;return{add(fn){pendingCount+=current!=next||next.has(fn)?0:1,next.add(fn)},delete(fn){return pendingCount-=current==next&&next.has(fn)?1:0,next.delete(fn)},flush(arg){current.size&&(next=new Set,pendingCount-=current.size,eachSafely(current,(fn=>fn(arg)&&next.add(fn))),pendingCount+=next.size,current=next)}}}function eachSafely(values,each){values.forEach((value=>{try{each(value)}catch(e){react_spring_rafz_esm_raf.catch(e)}}))}function noop(){}const react_spring_shared_esm_is={arr:Array.isArray,obj:a=>!!a&&"Object"===a.constructor.name,fun:a=>"function"==typeof a,str:a=>"string"==typeof a,num:a=>"number"==typeof a,und:a=>void 0===a};function isEqual(a,b){if(react_spring_shared_esm_is.arr(a)){if(!react_spring_shared_esm_is.arr(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(a[i]!==b[i])return!1;return!0}return a===b}const react_spring_shared_esm_each=(obj,fn)=>obj.forEach(fn);function eachProp(obj,fn,ctx){if(react_spring_shared_esm_is.arr(obj))for(let i=0;i<obj.length;i++)fn.call(ctx,obj[i],`${i}`);else for(const key in obj)obj.hasOwnProperty(key)&&fn.call(ctx,obj[key],key)}const react_spring_shared_esm_toArray=a=>react_spring_shared_esm_is.und(a)?[]:react_spring_shared_esm_is.arr(a)?a:[a];function flush(queue,iterator){if(queue.size){const items=Array.from(queue);queue.clear(),react_spring_shared_esm_each(items,iterator)}}const flushCalls=(queue,...args)=>flush(queue,(fn=>fn(...args))),isSSR=()=>"undefined"==typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent);let createStringInterpolator$1,to,colors$1=null,skipAnimation=!1,willAdvance=noop;const react_spring_shared_esm_assign=globals=>{globals.to&&(to=globals.to),globals.now&&(react_spring_rafz_esm_raf.now=globals.now),void 0!==globals.colors&&(colors$1=globals.colors),null!=globals.skipAnimation&&(skipAnimation=globals.skipAnimation),globals.createStringInterpolator&&(createStringInterpolator$1=globals.createStringInterpolator),globals.requestAnimationFrame&&react_spring_rafz_esm_raf.use(globals.requestAnimationFrame),globals.batchedUpdates&&(react_spring_rafz_esm_raf.batchedUpdates=globals.batchedUpdates),globals.willAdvance&&(willAdvance=globals.willAdvance),globals.frameLoop&&(react_spring_rafz_esm_raf.frameLoop=globals.frameLoop)};var globals=Object.freeze({__proto__:null,get createStringInterpolator(){return createStringInterpolator$1},get to(){return to},get colors(){return colors$1},get skipAnimation(){return skipAnimation},get willAdvance(){return willAdvance},assign:react_spring_shared_esm_assign});const startQueue=new Set;let currentFrame=[],prevFrame=[],priority=0;const frameLoop={get idle(){return!startQueue.size&&!currentFrame.length},start(animation){priority>animation.priority?(startQueue.add(animation),react_spring_rafz_esm_raf.onStart(flushStartQueue)):(startSafely(animation),react_spring_rafz_esm_raf(advance))},advance:advance,sort(animation){if(priority)react_spring_rafz_esm_raf.onFrame((()=>frameLoop.sort(animation)));else{const prevIndex=currentFrame.indexOf(animation);~prevIndex&&(currentFrame.splice(prevIndex,1),startUnsafely(animation))}},clear(){currentFrame=[],startQueue.clear()}};function flushStartQueue(){startQueue.forEach(startSafely),startQueue.clear(),react_spring_rafz_esm_raf(advance)}function startSafely(animation){currentFrame.includes(animation)||startUnsafely(animation)}function startUnsafely(animation){currentFrame.splice(function findIndex(arr,test){const index=arr.findIndex(test);return index<0?arr.length:index}(currentFrame,(other=>other.priority>animation.priority)),0,animation)}function advance(dt){const nextFrame=prevFrame;for(let i=0;i<currentFrame.length;i++){const animation=currentFrame[i];priority=animation.priority,animation.idle||(willAdvance(animation),animation.advance(dt),animation.idle||nextFrame.push(animation))}return priority=0,prevFrame=currentFrame,prevFrame.length=0,currentFrame=nextFrame,currentFrame.length>0}const NUMBER="[-+]?\\d*\\.?\\d+",PERCENTAGE=NUMBER+"%";function call(...parts){return"\\(\\s*("+parts.join(")\\s*,\\s*(")+")\\s*\\)"}const rgb=new RegExp("rgb"+call(NUMBER,NUMBER,NUMBER)),rgba=new RegExp("rgba"+call(NUMBER,NUMBER,NUMBER,NUMBER)),hsl=new RegExp("hsl"+call(NUMBER,PERCENTAGE,PERCENTAGE)),hsla=new RegExp("hsla"+call(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)),hex3=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex4=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6=/^#([0-9a-fA-F]{6})$/,hex8=/^#([0-9a-fA-F]{8})$/;function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}function hslToRgb(h,s,l){const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q,r=hue2rgb(p,q,h+1/3),g=hue2rgb(p,q,h),b=hue2rgb(p,q,h-1/3);return Math.round(255*r)<<24|Math.round(255*g)<<16|Math.round(255*b)<<8}function parse255(str){const int=parseInt(str,10);return int<0?0:int>255?255:int}function parse360(str){return(parseFloat(str)%360+360)%360/360}function parse1(str){const num=parseFloat(str);return num<0?0:num>1?255:Math.round(255*num)}function parsePercentage(str){const int=parseFloat(str);return int<0?0:int>100?1:int/100}function colorToRgba(input){let int32Color=function normalizeColor(color){let match;return"number"==typeof color?color>>>0===color&&color>=0&&color<=4294967295?color:null:(match=hex6.exec(color))?parseInt(match[1]+"ff",16)>>>0:colors$1&&void 0!==colors$1[color]?colors$1[color]:(match=rgb.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|255)>>>0:(match=rgba.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|parse1(match[4]))>>>0:(match=hex3.exec(color))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+"ff",16)>>>0:(match=hex8.exec(color))?parseInt(match[1],16)>>>0:(match=hex4.exec(color))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+match[4]+match[4],16)>>>0:(match=hsl.exec(color))?(255|hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3])))>>>0:(match=hsla.exec(color))?(hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3]))|parse1(match[4]))>>>0:null}(input);return null===int32Color?input:(int32Color=int32Color||0,`rgba(${(4278190080&int32Color)>>>24}, ${(16711680&int32Color)>>>16}, ${(65280&int32Color)>>>8}, ${(255&int32Color)/255})`)}const createInterpolator=(range,output,extrapolate)=>{if(react_spring_shared_esm_is.fun(range))return range;if(react_spring_shared_esm_is.arr(range))return createInterpolator({range:range,output:output,extrapolate:extrapolate});if(react_spring_shared_esm_is.str(range.output[0]))return createStringInterpolator$1(range);const config=range,outputRange=config.output,inputRange=config.range||[0,1],extrapolateLeft=config.extrapolateLeft||config.extrapolate||"extend",extrapolateRight=config.extrapolateRight||config.extrapolate||"extend",easing=config.easing||(t=>t);return input=>{const range=function findRange(input,inputRange){for(var i=1;i<inputRange.length-1&&!(inputRange[i]>=input);++i);return i-1}(input,inputRange);return function interpolate(input,inputMin,inputMax,outputMin,outputMax,easing,extrapolateLeft,extrapolateRight,map){let result=map?map(input):input;if(result<inputMin){if("identity"===extrapolateLeft)return result;"clamp"===extrapolateLeft&&(result=inputMin)}if(result>inputMax){if("identity"===extrapolateRight)return result;"clamp"===extrapolateRight&&(result=inputMax)}if(outputMin===outputMax)return outputMin;if(inputMin===inputMax)return input<=inputMin?outputMin:outputMax;inputMin===-1/0?result=-result:inputMax===1/0?result-=inputMin:result=(result-inputMin)/(inputMax-inputMin);result=easing(result),outputMin===-1/0?result=-result:outputMax===1/0?result+=outputMin:result=result*(outputMax-outputMin)+outputMin;return result}(input,inputRange[range],inputRange[range+1],outputRange[range],outputRange[range+1],easing,extrapolateLeft,extrapolateRight,config.map)}};const c1=1.70158,c2=1.525*c1,c4=2*Math.PI/3,c5=2*Math.PI/4.5,bounceOut=x=>{const n1=7.5625,d1=2.75;return x<1/d1?n1*x*x:x<2/d1?n1*(x-=1.5/d1)*x+.75:x<2.5/d1?n1*(x-=2.25/d1)*x+.9375:n1*(x-=2.625/d1)*x+.984375},easings={linear:x=>x,easeInQuad:x=>x*x,easeOutQuad:x=>1-(1-x)*(1-x),easeInOutQuad:x=>x<.5?2*x*x:1-Math.pow(-2*x+2,2)/2,easeInCubic:x=>x*x*x,easeOutCubic:x=>1-Math.pow(1-x,3),easeInOutCubic:x=>x<.5?4*x*x*x:1-Math.pow(-2*x+2,3)/2,easeInQuart:x=>x*x*x*x,easeOutQuart:x=>1-Math.pow(1-x,4),easeInOutQuart:x=>x<.5?8*x*x*x*x:1-Math.pow(-2*x+2,4)/2,easeInQuint:x=>x*x*x*x*x,easeOutQuint:x=>1-Math.pow(1-x,5),easeInOutQuint:x=>x<.5?16*x*x*x*x*x:1-Math.pow(-2*x+2,5)/2,easeInSine:x=>1-Math.cos(x*Math.PI/2),easeOutSine:x=>Math.sin(x*Math.PI/2),easeInOutSine:x=>-(Math.cos(Math.PI*x)-1)/2,easeInExpo:x=>0===x?0:Math.pow(2,10*x-10),easeOutExpo:x=>1===x?1:1-Math.pow(2,-10*x),easeInOutExpo:x=>0===x?0:1===x?1:x<.5?Math.pow(2,20*x-10)/2:(2-Math.pow(2,-20*x+10))/2,easeInCirc:x=>1-Math.sqrt(1-Math.pow(x,2)),easeOutCirc:x=>Math.sqrt(1-Math.pow(x-1,2)),easeInOutCirc:x=>x<.5?(1-Math.sqrt(1-Math.pow(2*x,2)))/2:(Math.sqrt(1-Math.pow(-2*x+2,2))+1)/2,easeInBack:x=>2.70158*x*x*x-c1*x*x,easeOutBack:x=>1+2.70158*Math.pow(x-1,3)+c1*Math.pow(x-1,2),easeInOutBack:x=>x<.5?Math.pow(2*x,2)*(7.189819*x-c2)/2:(Math.pow(2*x-2,2)*((c2+1)*(2*x-2)+c2)+2)/2,easeInElastic:x=>0===x?0:1===x?1:-Math.pow(2,10*x-10)*Math.sin((10*x-10.75)*c4),easeOutElastic:x=>0===x?0:1===x?1:Math.pow(2,-10*x)*Math.sin((10*x-.75)*c4)+1,easeInOutElastic:x=>0===x?0:1===x?1:x<.5?-Math.pow(2,20*x-10)*Math.sin((20*x-11.125)*c5)/2:Math.pow(2,-20*x+10)*Math.sin((20*x-11.125)*c5)/2+1,easeInBounce:x=>1-bounceOut(1-x),easeOutBounce:bounceOut,easeInOutBounce:x=>x<.5?(1-bounceOut(1-2*x))/2:(1+bounceOut(2*x-1))/2,steps:(steps,direction="end")=>progress=>{const expanded=(progress="end"===direction?Math.min(progress,.999):Math.max(progress,.001))*steps,rounded="end"===direction?Math.floor(expanded):Math.ceil(expanded);return min=0,max=1,v=rounded/steps,Math.min(Math.max(v,min),max);var min,max,v}};function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const $get=Symbol.for("FluidValue.get"),$observers=Symbol.for("FluidValue.observers"),hasFluidValue=arg=>Boolean(arg&&arg[$get]),getFluidValue=arg=>arg&&arg[$get]?arg[$get]():arg,getFluidObservers=target=>target[$observers]||null;function callFluidObservers(target,event){let observers=target[$observers];observers&&observers.forEach((observer=>{!function callFluidObserver(observer,event){observer.eventObserved?observer.eventObserved(event):observer(event)}(observer,event)}))}class FluidValue{constructor(get){if(this[$get]=void 0,this[$observers]=void 0,!get&&!(get=this.get))throw Error("Unknown getter");setFluidGetter(this,get)}}const setFluidGetter=(target,get)=>setHidden(target,$get,get);function addFluidObserver(target,observer){if(target[$get]){let observers=target[$observers];observers||setHidden(target,$observers,observers=new Set),observers.has(observer)||(observers.add(observer),target.observerAdded&&target.observerAdded(observers.size,observer))}return observer}function removeFluidObserver(target,observer){let observers=target[$observers];if(observers&&observers.has(observer)){const count=observers.size-1;count?observers.delete(observer):target[$observers]=null,target.observerRemoved&&target.observerRemoved(count,observer)}}const setHidden=(target,key,value)=>Object.defineProperty(target,key,{value:value,writable:!0,configurable:!0}),numberRegex=/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,colorRegex=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,unitRegex=new RegExp(`(${numberRegex.source})(%|[a-z]+)`,"i"),rgbaRegex=/rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,cssVariableRegex=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/,variableToRgba=input=>{const[token,fallback]=parseCSSVariable(input);if(!token||isSSR())return input;const value=window.getComputedStyle(document.documentElement).getPropertyValue(token);if(value)return value.trim();if(fallback&&fallback.startsWith("--")){const _value=window.getComputedStyle(document.documentElement).getPropertyValue(fallback);return _value||input}return fallback&&cssVariableRegex.test(fallback)?variableToRgba(fallback):fallback||input},parseCSSVariable=current=>{const match=cssVariableRegex.exec(current);if(!match)return[,];const[,token,fallback]=match;return[token,fallback]};let namedColorRegex;const rgbaRound=(_,p1,p2,p3,p4)=>`rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`,createStringInterpolator=config=>{namedColorRegex||(namedColorRegex=colors$1?new RegExp(`(${Object.keys(colors$1).join("|")})(?!\\w)`,"g"):/^\b$/);const output=config.output.map((value=>getFluidValue(value).replace(cssVariableRegex,variableToRgba).replace(colorRegex,colorToRgba).replace(namedColorRegex,colorToRgba))),keyframes=output.map((value=>value.match(numberRegex).map(Number))),interpolators=keyframes[0].map(((_,i)=>keyframes.map((values=>{if(!(i in values))throw Error('The arity of each "output" value must be equal');return values[i]})))).map((output=>createInterpolator(_extends({},config,{output:output}))));return input=>{var _output$find;const missingUnit=!unitRegex.test(output[0])&&(null==(_output$find=output.find((value=>unitRegex.test(value))))?void 0:_output$find.replace(numberRegex,""));let i=0;return output[0].replace(numberRegex,(()=>`${interpolators[i++](input)}${missingUnit||""}`)).replace(rgbaRegex,rgbaRound)}},prefix="react-spring: ",once=fn=>{const func=fn;let called=!1;if("function"!=typeof func)throw new TypeError(`${prefix}once requires a function parameter`);return(...args)=>{called||(func(...args),called=!0)}},warnInterpolate=once(console.warn);const warnDirectCall=once(console.warn);function isAnimatedString(value){return react_spring_shared_esm_is.str(value)&&("#"==value[0]||/\d/.test(value)||!isSSR()&&cssVariableRegex.test(value)||value in(colors$1||{}))}new WeakMap;new Set;new WeakMap,new WeakMap,new WeakMap;const react_spring_shared_esm_useIsomorphicLayoutEffect=isSSR()?react.useEffect:react.useLayoutEffect,useIsMounted=()=>{const isMounted=(0,react.useRef)(!1);return react_spring_shared_esm_useIsomorphicLayoutEffect((()=>(isMounted.current=!0,()=>{isMounted.current=!1})),[]),isMounted};function react_spring_shared_esm_useForceUpdate(){const update=(0,react.useState)()[1],isMounted=useIsMounted();return()=>{isMounted.current&&update(Math.random())}}const react_spring_shared_esm_useOnce=effect=>(0,react.useEffect)(effect,emptyDeps),emptyDeps=[];function react_spring_shared_esm_usePrev(value){const prevRef=(0,react.useRef)();return(0,react.useEffect)((()=>{prevRef.current=value})),prevRef.current}const $node=Symbol.for("Animated:node"),getAnimated=owner=>owner&&owner[$node],setAnimated=(owner,node)=>{return obj=owner,key=$node,value=node,Object.defineProperty(obj,key,{value:value,writable:!0,configurable:!0});var obj,key,value},getPayload=owner=>owner&&owner[$node]&&owner[$node].getPayload();class Animated{constructor(){this.payload=void 0,setAnimated(this,this)}getPayload(){return this.payload||[]}}class AnimatedValue extends Animated{constructor(_value){super(),this.done=!0,this.elapsedTime=void 0,this.lastPosition=void 0,this.lastVelocity=void 0,this.v0=void 0,this.durationProgress=0,this._value=_value,react_spring_shared_esm_is.num(this._value)&&(this.lastPosition=this._value)}static create(value){return new AnimatedValue(value)}getPayload(){return[this]}getValue(){return this._value}setValue(value,step){return react_spring_shared_esm_is.num(value)&&(this.lastPosition=value,step&&(value=Math.round(value/step)*step,this.done&&(this.lastPosition=value))),this._value!==value&&(this._value=value,!0)}reset(){const{done:done}=this;this.done=!1,react_spring_shared_esm_is.num(this._value)&&(this.elapsedTime=0,this.durationProgress=0,this.lastPosition=this._value,done&&(this.lastVelocity=null),this.v0=null)}}class AnimatedString extends AnimatedValue{constructor(value){super(0),this._string=null,this._toString=void 0,this._toString=createInterpolator({output:[value,value]})}static create(value){return new AnimatedString(value)}getValue(){let value=this._string;return null==value?this._string=this._toString(this._value):value}setValue(value){if(react_spring_shared_esm_is.str(value)){if(value==this._string)return!1;this._string=value,this._value=1}else{if(!super.setValue(value))return!1;this._string=null}return!0}reset(goal){goal&&(this._toString=createInterpolator({output:[this.getValue(),goal]})),this._value=0,super.reset()}}const TreeContext={dependencies:null};class AnimatedObject extends Animated{constructor(source){super(),this.source=source,this.setValue(source)}getValue(animated){const values={};return eachProp(this.source,((source,key)=>{var value;(value=source)&&value[$node]===value?values[key]=source.getValue(animated):hasFluidValue(source)?values[key]=getFluidValue(source):animated||(values[key]=source)})),values}setValue(source){this.source=source,this.payload=this._makePayload(source)}reset(){this.payload&&react_spring_shared_esm_each(this.payload,(node=>node.reset()))}_makePayload(source){if(source){const payload=new Set;return eachProp(source,this._addToPayload,payload),Array.from(payload)}}_addToPayload(source){TreeContext.dependencies&&hasFluidValue(source)&&TreeContext.dependencies.add(source);const payload=getPayload(source);payload&&react_spring_shared_esm_each(payload,(node=>this.add(node)))}}class AnimatedArray extends AnimatedObject{constructor(source){super(source)}static create(source){return new AnimatedArray(source)}getValue(){return this.source.map((node=>node.getValue()))}setValue(source){const payload=this.getPayload();return source.length==payload.length?payload.map(((node,i)=>node.setValue(source[i]))).some(Boolean):(super.setValue(source.map(makeAnimated)),!0)}}function makeAnimated(value){return(isAnimatedString(value)?AnimatedString:AnimatedValue).create(value)}function getAnimatedType(value){const parentNode=getAnimated(value);return parentNode?parentNode.constructor:react_spring_shared_esm_is.arr(value)?AnimatedArray:isAnimatedString(value)?AnimatedString:AnimatedValue}function react_spring_animated_esm_extends(){return react_spring_animated_esm_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},react_spring_animated_esm_extends.apply(this,arguments)}const withAnimated=(Component,host)=>{const hasInstance=!react_spring_shared_esm_is.fun(Component)||Component.prototype&&Component.prototype.isReactComponent;return(0,react.forwardRef)(((givenProps,givenRef)=>{const instanceRef=(0,react.useRef)(null),ref=hasInstance&&(0,react.useCallback)((value=>{instanceRef.current=function updateRef(ref,value){ref&&(react_spring_shared_esm_is.fun(ref)?ref(value):ref.current=value);return value}(givenRef,value)}),[givenRef]),[props,deps]=function getAnimatedState(props,host){const dependencies=new Set;TreeContext.dependencies=dependencies,props.style&&(props=react_spring_animated_esm_extends({},props,{style:host.createAnimatedStyle(props.style)}));return props=new AnimatedObject(props),TreeContext.dependencies=null,[props,dependencies]}(givenProps,host),forceUpdate=react_spring_shared_esm_useForceUpdate(),callback=()=>{const instance=instanceRef.current;if(hasInstance&&!instance)return;!1===(!!instance&&host.applyAnimatedValues(instance,props.getValue(!0)))&&forceUpdate()},observer=new PropsObserver(callback,deps),observerRef=(0,react.useRef)();react_spring_shared_esm_useIsomorphicLayoutEffect((()=>(observerRef.current=observer,react_spring_shared_esm_each(deps,(dep=>addFluidObserver(dep,observer))),()=>{observerRef.current&&(react_spring_shared_esm_each(observerRef.current.deps,(dep=>removeFluidObserver(dep,observerRef.current))),react_spring_rafz_esm_raf.cancel(observerRef.current.update))}))),(0,react.useEffect)(callback,[]),react_spring_shared_esm_useOnce((()=>()=>{const observer=observerRef.current;react_spring_shared_esm_each(observer.deps,(dep=>removeFluidObserver(dep,observer)))}));const usedProps=host.getComponentProps(props.getValue());return react.createElement(Component,react_spring_animated_esm_extends({},usedProps,{ref:ref}))}))};class PropsObserver{constructor(update,deps){this.update=update,this.deps=deps}eventObserved(event){"change"==event.type&&react_spring_rafz_esm_raf.write(this.update)}}const cacheKey=Symbol.for("AnimatedComponent"),getDisplayName=arg=>react_spring_shared_esm_is.str(arg)?arg:arg&&react_spring_shared_esm_is.str(arg.displayName)?arg.displayName:react_spring_shared_esm_is.fun(arg)&&arg.name||null;function react_spring_core_esm_extends(){return react_spring_core_esm_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},react_spring_core_esm_extends.apply(this,arguments)}function callProp(value,...args){return react_spring_shared_esm_is.fun(value)?value(...args):value}const matchProp=(value,key)=>!0===value||!!(key&&value&&(react_spring_shared_esm_is.fun(value)?value(key):react_spring_shared_esm_toArray(value).includes(key))),resolveProp=(prop,key)=>react_spring_shared_esm_is.obj(prop)?key&&prop[key]:prop,getDefaultProp=(props,key)=>!0===props.default?props[key]:props.default?props.default[key]:void 0,noopTransform=value=>value,getDefaultProps=(props,transform=noopTransform)=>{let keys=DEFAULT_PROPS;props.default&&!0!==props.default&&(props=props.default,keys=Object.keys(props));const defaults={};for(const key of keys){const value=transform(props[key],key);react_spring_shared_esm_is.und(value)||(defaults[key]=value)}return defaults},DEFAULT_PROPS=["config","onProps","onStart","onChange","onPause","onResume","onRest"],RESERVED_PROPS={config:1,from:1,to:1,ref:1,loop:1,reset:1,pause:1,cancel:1,reverse:1,immediate:1,default:1,delay:1,onProps:1,onStart:1,onChange:1,onPause:1,onResume:1,onRest:1,onResolve:1,items:1,trail:1,sort:1,expires:1,initial:1,enter:1,update:1,leave:1,children:1,onDestroyed:1,keys:1,callId:1,parentId:1};function inferTo(props){const to=function getForwardProps(props){const forward={};let count=0;if(eachProp(props,((value,prop)=>{RESERVED_PROPS[prop]||(forward[prop]=value,count++)})),count)return forward}(props);if(to){const out={to:to};return eachProp(props,((val,key)=>key in to||(out[key]=val))),out}return react_spring_core_esm_extends({},props)}function computeGoal(value){return value=getFluidValue(value),react_spring_shared_esm_is.arr(value)?value.map(computeGoal):isAnimatedString(value)?globals.createStringInterpolator({range:[0,1],output:[value,value]})(1):value}function hasProps(props){for(const _ in props)return!0;return!1}function isAsyncTo(to){return react_spring_shared_esm_is.fun(to)||react_spring_shared_esm_is.arr(to)&&react_spring_shared_esm_is.obj(to[0])}function detachRefs(ctrl,ref){var _ctrl$ref;null==(_ctrl$ref=ctrl.ref)||_ctrl$ref.delete(ctrl),null==ref||ref.delete(ctrl)}function replaceRef(ctrl,ref){var _ctrl$ref2;ref&&ctrl.ref!==ref&&(null==(_ctrl$ref2=ctrl.ref)||_ctrl$ref2.delete(ctrl),ref.add(ctrl),ctrl.ref=ref)}const defaults=react_spring_core_esm_extends({},{tension:170,friction:26},{mass:1,damping:1,easing:easings.linear,clamp:!1});class AnimationConfig{constructor(){this.tension=void 0,this.friction=void 0,this.frequency=void 0,this.damping=void 0,this.mass=void 0,this.velocity=0,this.restVelocity=void 0,this.precision=void 0,this.progress=void 0,this.duration=void 0,this.easing=void 0,this.clamp=void 0,this.bounce=void 0,this.decay=void 0,this.round=void 0,Object.assign(this,defaults)}}function sanitizeConfig(config,props){if(react_spring_shared_esm_is.und(props.decay)){const isTensionConfig=!react_spring_shared_esm_is.und(props.tension)||!react_spring_shared_esm_is.und(props.friction);!isTensionConfig&&react_spring_shared_esm_is.und(props.frequency)&&react_spring_shared_esm_is.und(props.damping)&&react_spring_shared_esm_is.und(props.mass)||(config.duration=void 0,config.decay=void 0),isTensionConfig&&(config.frequency=void 0)}else config.duration=void 0}const emptyArray=[];class Animation{constructor(){this.changed=!1,this.values=emptyArray,this.toValues=null,this.fromValues=emptyArray,this.to=void 0,this.from=void 0,this.config=new AnimationConfig,this.immediate=!1}}function scheduleProps(callId,{key:key,props:props,defaultProps:defaultProps,state:state,actions:actions}){return new Promise(((resolve,reject)=>{var _props$cancel;let delay,timeout,cancel=matchProp(null!=(_props$cancel=props.cancel)?_props$cancel:null==defaultProps?void 0:defaultProps.cancel,key);if(cancel)onStart();else{react_spring_shared_esm_is.und(props.pause)||(state.paused=matchProp(props.pause,key));let pause=null==defaultProps?void 0:defaultProps.pause;!0!==pause&&(pause=state.paused||matchProp(pause,key)),delay=callProp(props.delay||0,key),pause?(state.resumeQueue.add(onResume),actions.pause()):(actions.resume(),onResume())}function onPause(){state.resumeQueue.add(onResume),state.timeouts.delete(timeout),timeout.cancel(),delay=timeout.time-react_spring_rafz_esm_raf.now()}function onResume(){delay>0&&!globals.skipAnimation?(state.delayed=!0,timeout=react_spring_rafz_esm_raf.setTimeout(onStart,delay),state.pauseQueue.add(onPause),state.timeouts.add(timeout)):onStart()}function onStart(){state.delayed&&(state.delayed=!1),state.pauseQueue.delete(onPause),state.timeouts.delete(timeout),callId<=(state.cancelId||0)&&(cancel=!0);try{actions.start(react_spring_core_esm_extends({},props,{callId:callId,cancel:cancel}),resolve)}catch(err){reject(err)}}}))}const getCombinedResult=(target,results)=>1==results.length?results[0]:results.some((result=>result.cancelled))?getCancelledResult(target.get()):results.every((result=>result.noop))?getNoopResult(target.get()):getFinishedResult(target.get(),results.every((result=>result.finished))),getNoopResult=value=>({value:value,noop:!0,finished:!0,cancelled:!1}),getFinishedResult=(value,finished,cancelled=!1)=>({value:value,finished:finished,cancelled:cancelled}),getCancelledResult=value=>({value:value,cancelled:!0,finished:!1});function runAsync(to,props,state,target){const{callId:callId,parentId:parentId,onRest:onRest}=props,{asyncTo:prevTo,promise:prevPromise}=state;return parentId||to!==prevTo||props.reset?state.promise=(async()=>{state.asyncId=callId,state.asyncTo=to;const defaultProps=getDefaultProps(props,((value,key)=>"onRest"===key?void 0:value));let preventBail,bail;const bailPromise=new Promise(((resolve,reject)=>(preventBail=resolve,bail=reject))),bailIfEnded=bailSignal=>{const bailResult=callId<=(state.cancelId||0)&&getCancelledResult(target)||callId!==state.asyncId&&getFinishedResult(target,!1);if(bailResult)throw bailSignal.result=bailResult,bail(bailSignal),bailSignal},animate=(arg1,arg2)=>{const bailSignal=new BailSignal,skipAnimationSignal=new SkipAnimationSignal;return(async()=>{if(globals.skipAnimation)throw stopAsync(state),skipAnimationSignal.result=getFinishedResult(target,!1),bail(skipAnimationSignal),skipAnimationSignal;bailIfEnded(bailSignal);const props=react_spring_shared_esm_is.obj(arg1)?react_spring_core_esm_extends({},arg1):react_spring_core_esm_extends({},arg2,{to:arg1});props.parentId=callId,eachProp(defaultProps,((value,key)=>{react_spring_shared_esm_is.und(props[key])&&(props[key]=value)}));const result=await target.start(props);return bailIfEnded(bailSignal),state.paused&&await new Promise((resume=>{state.resumeQueue.add(resume)})),result})()};let result;if(globals.skipAnimation)return stopAsync(state),getFinishedResult(target,!1);try{let animating;animating=react_spring_shared_esm_is.arr(to)?(async queue=>{for(const props of queue)await animate(props)})(to):Promise.resolve(to(animate,target.stop.bind(target))),await Promise.all([animating.then(preventBail),bailPromise]),result=getFinishedResult(target.get(),!0,!1)}catch(err){if(err instanceof BailSignal)result=err.result;else{if(!(err instanceof SkipAnimationSignal))throw err;result=err.result}}finally{callId==state.asyncId&&(state.asyncId=parentId,state.asyncTo=parentId?prevTo:void 0,state.promise=parentId?prevPromise:void 0)}return react_spring_shared_esm_is.fun(onRest)&&react_spring_rafz_esm_raf.batchedUpdates((()=>{onRest(result,target,target.item)})),result})():prevPromise}function stopAsync(state,cancelId){flush(state.timeouts,(t=>t.cancel())),state.pauseQueue.clear(),state.resumeQueue.clear(),state.asyncId=state.asyncTo=state.promise=void 0,cancelId&&(state.cancelId=cancelId)}class BailSignal extends Error{constructor(){super("An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise."),this.result=void 0}}class SkipAnimationSignal extends Error{constructor(){super("SkipAnimationSignal"),this.result=void 0}}const isFrameValue=value=>value instanceof FrameValue;let nextId$1=1;class FrameValue extends FluidValue{constructor(...args){super(...args),this.id=nextId$1++,this.key=void 0,this._priority=0}get priority(){return this._priority}set priority(priority){this._priority!=priority&&(this._priority=priority,this._onPriorityChange(priority))}get(){const node=getAnimated(this);return node&&node.getValue()}to(...args){return globals.to(this,args)}interpolate(...args){return function react_spring_shared_esm_deprecateInterpolate(){warnInterpolate(`${prefix}The "interpolate" function is deprecated in v9 (use "to" instead)`)}(),globals.to(this,args)}toJSON(){return this.get()}observerAdded(count){1==count&&this._attach()}observerRemoved(count){0==count&&this._detach()}_attach(){}_detach(){}_onChange(value,idle=!1){callFluidObservers(this,{type:"change",parent:this,value:value,idle:idle})}_onPriorityChange(priority){this.idle||frameLoop.sort(this),callFluidObservers(this,{type:"priority",parent:this,priority:priority})}}const $P=Symbol.for("SpringPhase"),hasAnimated=target=>(1&target[$P])>0,isAnimating=target=>(2&target[$P])>0,isPaused=target=>(4&target[$P])>0,setActiveBit=(target,active)=>active?target[$P]|=3:target[$P]&=-3,setPausedBit=(target,paused)=>paused?target[$P]|=4:target[$P]&=-5;class SpringValue extends FrameValue{constructor(arg1,arg2){if(super(),this.key=void 0,this.animation=new Animation,this.queue=void 0,this.defaultProps={},this._state={paused:!1,delayed:!1,pauseQueue:new Set,resumeQueue:new Set,timeouts:new Set},this._pendingCalls=new Set,this._lastCallId=0,this._lastToId=0,this._memoizedDuration=0,!react_spring_shared_esm_is.und(arg1)||!react_spring_shared_esm_is.und(arg2)){const props=react_spring_shared_esm_is.obj(arg1)?react_spring_core_esm_extends({},arg1):react_spring_core_esm_extends({},arg2,{from:arg1});react_spring_shared_esm_is.und(props.default)&&(props.default=!0),this.start(props)}}get idle(){return!(isAnimating(this)||this._state.asyncTo)||isPaused(this)}get goal(){return getFluidValue(this.animation.to)}get velocity(){const node=getAnimated(this);return node instanceof AnimatedValue?node.lastVelocity||0:node.getPayload().map((node=>node.lastVelocity||0))}get hasAnimated(){return hasAnimated(this)}get isAnimating(){return isAnimating(this)}get isPaused(){return isPaused(this)}get isDelayed(){return this._state.delayed}advance(dt){let idle=!0,changed=!1;const anim=this.animation;let{config:config,toValues:toValues}=anim;const payload=getPayload(anim.to);!payload&&hasFluidValue(anim.to)&&(toValues=react_spring_shared_esm_toArray(getFluidValue(anim.to))),anim.values.forEach(((node,i)=>{if(node.done)return;const to=node.constructor==AnimatedString?1:payload?payload[i].lastPosition:toValues[i];let finished=anim.immediate,position=to;if(!finished){if(position=node.lastPosition,config.tension<=0)return void(node.done=!0);let elapsed=node.elapsedTime+=dt;const from=anim.fromValues[i],v0=null!=node.v0?node.v0:node.v0=react_spring_shared_esm_is.arr(config.velocity)?config.velocity[i]:config.velocity;let velocity;const precision=config.precision||(from==to?.005:Math.min(1,.001*Math.abs(to-from)));if(react_spring_shared_esm_is.und(config.duration))if(config.decay){const decay=!0===config.decay?.998:config.decay,e=Math.exp(-(1-decay)*elapsed);position=from+v0/(1-decay)*(1-e),finished=Math.abs(node.lastPosition-position)<=precision,velocity=v0*e}else{velocity=null==node.lastVelocity?v0:node.lastVelocity;const restVelocity=config.restVelocity||precision/10,bounceFactor=config.clamp?0:config.bounce,canBounce=!react_spring_shared_esm_is.und(bounceFactor),isGrowing=from==to?node.v0>0:from<to;let isMoving,isBouncing=!1;const step=1,numSteps=Math.ceil(dt/step);for(let n=0;n<numSteps&&(isMoving=Math.abs(velocity)>restVelocity,isMoving||(finished=Math.abs(to-position)<=precision,!finished));++n){canBounce&&(isBouncing=position==to||position>to==isGrowing,isBouncing&&(velocity=-velocity*bounceFactor,position=to));velocity+=(1e-6*-config.tension*(position-to)+.001*-config.friction*velocity)/config.mass*step,position+=velocity*step}}else{let p=1;config.duration>0&&(this._memoizedDuration!==config.duration&&(this._memoizedDuration=config.duration,node.durationProgress>0&&(node.elapsedTime=config.duration*node.durationProgress,elapsed=node.elapsedTime+=dt)),p=(config.progress||0)+elapsed/this._memoizedDuration,p=p>1?1:p<0?0:p,node.durationProgress=p),position=from+config.easing(p)*(to-from),velocity=(position-node.lastPosition)/dt,finished=1==p}node.lastVelocity=velocity,Number.isNaN(position)&&(console.warn("Got NaN while animating:",this),finished=!0)}payload&&!payload[i].done&&(finished=!1),finished?node.done=!0:idle=!1,node.setValue(position,config.round)&&(changed=!0)}));const node=getAnimated(this),currVal=node.getValue();if(idle){const finalVal=getFluidValue(anim.to);currVal===finalVal&&!changed||config.decay?changed&&config.decay&&this._onChange(currVal):(node.setValue(finalVal),this._onChange(finalVal)),this._stop()}else changed&&this._onChange(currVal)}set(value){return react_spring_rafz_esm_raf.batchedUpdates((()=>{this._stop(),this._focus(value),this._set(value)})),this}pause(){this._update({pause:!0})}resume(){this._update({pause:!1})}finish(){if(isAnimating(this)){const{to:to,config:config}=this.animation;react_spring_rafz_esm_raf.batchedUpdates((()=>{this._onStart(),config.decay||this._set(to,!1),this._stop()}))}return this}update(props){return(this.queue||(this.queue=[])).push(props),this}start(to,arg2){let queue;return react_spring_shared_esm_is.und(to)?(queue=this.queue||[],this.queue=[]):queue=[react_spring_shared_esm_is.obj(to)?to:react_spring_core_esm_extends({},arg2,{to:to})],Promise.all(queue.map((props=>this._update(props)))).then((results=>getCombinedResult(this,results)))}stop(cancel){const{to:to}=this.animation;return this._focus(this.get()),stopAsync(this._state,cancel&&this._lastCallId),react_spring_rafz_esm_raf.batchedUpdates((()=>this._stop(to,cancel))),this}reset(){this._update({reset:!0})}eventObserved(event){"change"==event.type?this._start():"priority"==event.type&&(this.priority=event.priority+1)}_prepareNode(props){const key=this.key||"";let{to:to,from:from}=props;to=react_spring_shared_esm_is.obj(to)?to[key]:to,(null==to||isAsyncTo(to))&&(to=void 0),from=react_spring_shared_esm_is.obj(from)?from[key]:from,null==from&&(from=void 0);const range={to:to,from:from};return hasAnimated(this)||(props.reverse&&([to,from]=[from,to]),from=getFluidValue(from),react_spring_shared_esm_is.und(from)?getAnimated(this)||this._set(to):this._set(from)),range}_update(_ref,isLoop){let props=react_spring_core_esm_extends({},_ref);const{key:key,defaultProps:defaultProps}=this;props.default&&Object.assign(defaultProps,getDefaultProps(props,((value,prop)=>/^on/.test(prop)?resolveProp(value,key):value))),mergeActiveFn(this,props,"onProps"),sendEvent(this,"onProps",props,this);const range=this._prepareNode(props);if(Object.isFrozen(this))throw Error("Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?");const state=this._state;return scheduleProps(++this._lastCallId,{key:key,props:props,defaultProps:defaultProps,state:state,actions:{pause:()=>{isPaused(this)||(setPausedBit(this,!0),flushCalls(state.pauseQueue),sendEvent(this,"onPause",getFinishedResult(this,checkFinished(this,this.animation.to)),this))},resume:()=>{isPaused(this)&&(setPausedBit(this,!1),isAnimating(this)&&this._resume(),flushCalls(state.resumeQueue),sendEvent(this,"onResume",getFinishedResult(this,checkFinished(this,this.animation.to)),this))},start:this._merge.bind(this,range)}}).then((result=>{if(props.loop&&result.finished&&(!isLoop||!result.noop)){const nextProps=createLoopUpdate(props);if(nextProps)return this._update(nextProps,!0)}return result}))}_merge(range,props,resolve){if(props.cancel)return this.stop(!0),resolve(getCancelledResult(this));const hasToProp=!react_spring_shared_esm_is.und(range.to),hasFromProp=!react_spring_shared_esm_is.und(range.from);if(hasToProp||hasFromProp){if(!(props.callId>this._lastToId))return resolve(getCancelledResult(this));this._lastToId=props.callId}const{key:key,defaultProps:defaultProps,animation:anim}=this,{to:prevTo,from:prevFrom}=anim;let{to:to=prevTo,from:from=prevFrom}=range;!hasFromProp||hasToProp||props.default&&!react_spring_shared_esm_is.und(to)||(to=from),props.reverse&&([to,from]=[from,to]);const hasFromChanged=!isEqual(from,prevFrom);hasFromChanged&&(anim.from=from),from=getFluidValue(from);const hasToChanged=!isEqual(to,prevTo);hasToChanged&&this._focus(to);const hasAsyncTo=isAsyncTo(props.to),{config:config}=anim,{decay:decay,velocity:velocity}=config;(hasToProp||hasFromProp)&&(config.velocity=0),props.config&&!hasAsyncTo&&function mergeConfig(config,newConfig,defaultConfig){defaultConfig&&(sanitizeConfig(defaultConfig=react_spring_core_esm_extends({},defaultConfig),newConfig),newConfig=react_spring_core_esm_extends({},defaultConfig,newConfig)),sanitizeConfig(config,newConfig),Object.assign(config,newConfig);for(const key in defaults)null==config[key]&&(config[key]=defaults[key]);let{mass:mass,frequency:frequency,damping:damping}=config;return react_spring_shared_esm_is.und(frequency)||(frequency<.01&&(frequency=.01),damping<0&&(damping=0),config.tension=Math.pow(2*Math.PI/frequency,2)*mass,config.friction=4*Math.PI*damping*mass/frequency),config}(config,callProp(props.config,key),props.config!==defaultProps.config?callProp(defaultProps.config,key):void 0);let node=getAnimated(this);if(!node||react_spring_shared_esm_is.und(to))return resolve(getFinishedResult(this,!0));const reset=react_spring_shared_esm_is.und(props.reset)?hasFromProp&&!props.default:!react_spring_shared_esm_is.und(from)&&matchProp(props.reset,key),value=reset?from:this.get(),goal=computeGoal(to),isAnimatable=react_spring_shared_esm_is.num(goal)||react_spring_shared_esm_is.arr(goal)||isAnimatedString(goal),immediate=!hasAsyncTo&&(!isAnimatable||matchProp(defaultProps.immediate||props.immediate,key));if(hasToChanged){const nodeType=getAnimatedType(to);if(nodeType!==node.constructor){if(!immediate)throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the "to" prop suggests`);node=this._set(goal)}}const goalType=node.constructor;let started=hasFluidValue(to),finished=!1;if(!started){const hasValueChanged=reset||!hasAnimated(this)&&hasFromChanged;(hasToChanged||hasValueChanged)&&(finished=isEqual(computeGoal(value),goal),started=!finished),(isEqual(anim.immediate,immediate)||immediate)&&isEqual(config.decay,decay)&&isEqual(config.velocity,velocity)||(started=!0)}if(finished&&isAnimating(this)&&(anim.changed&&!reset?started=!0:started||this._stop(prevTo)),!hasAsyncTo&&((started||hasFluidValue(prevTo))&&(anim.values=node.getPayload(),anim.toValues=hasFluidValue(to)?null:goalType==AnimatedString?[1]:react_spring_shared_esm_toArray(goal)),anim.immediate!=immediate&&(anim.immediate=immediate,immediate||reset||this._set(prevTo)),started)){const{onRest:onRest}=anim;react_spring_shared_esm_each(ACTIVE_EVENTS,(type=>mergeActiveFn(this,props,type)));const result=getFinishedResult(this,checkFinished(this,prevTo));flushCalls(this._pendingCalls,result),this._pendingCalls.add(resolve),anim.changed&&react_spring_rafz_esm_raf.batchedUpdates((()=>{anim.changed=!reset,null==onRest||onRest(result,this),reset?callProp(defaultProps.onRest,result):null==anim.onStart||anim.onStart(result,this)}))}reset&&this._set(value),hasAsyncTo?resolve(runAsync(props.to,props,this._state,this)):started?this._start():isAnimating(this)&&!hasToChanged?this._pendingCalls.add(resolve):resolve(getNoopResult(value))}_focus(value){const anim=this.animation;value!==anim.to&&(getFluidObservers(this)&&this._detach(),anim.to=value,getFluidObservers(this)&&this._attach())}_attach(){let priority=0;const{to:to}=this.animation;hasFluidValue(to)&&(addFluidObserver(to,this),isFrameValue(to)&&(priority=to.priority+1)),this.priority=priority}_detach(){const{to:to}=this.animation;hasFluidValue(to)&&removeFluidObserver(to,this)}_set(arg,idle=!0){const value=getFluidValue(arg);if(!react_spring_shared_esm_is.und(value)){const oldNode=getAnimated(this);if(!oldNode||!isEqual(value,oldNode.getValue())){const nodeType=getAnimatedType(value);oldNode&&oldNode.constructor==nodeType?oldNode.setValue(value):setAnimated(this,nodeType.create(value)),oldNode&&react_spring_rafz_esm_raf.batchedUpdates((()=>{this._onChange(value,idle)}))}}return getAnimated(this)}_onStart(){const anim=this.animation;anim.changed||(anim.changed=!0,sendEvent(this,"onStart",getFinishedResult(this,checkFinished(this,anim.to)),this))}_onChange(value,idle){idle||(this._onStart(),callProp(this.animation.onChange,value,this)),callProp(this.defaultProps.onChange,value,this),super._onChange(value,idle)}_start(){const anim=this.animation;getAnimated(this).reset(getFluidValue(anim.to)),anim.immediate||(anim.fromValues=anim.values.map((node=>node.lastPosition))),isAnimating(this)||(setActiveBit(this,!0),isPaused(this)||this._resume())}_resume(){globals.skipAnimation?this.finish():frameLoop.start(this)}_stop(goal,cancel){if(isAnimating(this)){setActiveBit(this,!1);const anim=this.animation;react_spring_shared_esm_each(anim.values,(node=>{node.done=!0})),anim.toValues&&(anim.onChange=anim.onPause=anim.onResume=void 0),callFluidObservers(this,{type:"idle",parent:this});const result=cancel?getCancelledResult(this.get()):getFinishedResult(this.get(),checkFinished(this,null!=goal?goal:anim.to));flushCalls(this._pendingCalls,result),anim.changed&&(anim.changed=!1,sendEvent(this,"onRest",result,this))}}}function checkFinished(target,to){const goal=computeGoal(to);return isEqual(computeGoal(target.get()),goal)}function createLoopUpdate(props,loop=props.loop,to=props.to){let loopRet=callProp(loop);if(loopRet){const overrides=!0!==loopRet&&inferTo(loopRet),reverse=(overrides||props).reverse,reset=!overrides||overrides.reset;return createUpdate(react_spring_core_esm_extends({},props,{loop:loop,default:!1,pause:void 0,to:!reverse||isAsyncTo(to)?to:void 0,from:reset?props.from:void 0,reset:reset},overrides))}}function createUpdate(props){const{to:to,from:from}=props=inferTo(props),keys=new Set;return react_spring_shared_esm_is.obj(to)&&findDefined(to,keys),react_spring_shared_esm_is.obj(from)&&findDefined(from,keys),props.keys=keys.size?Array.from(keys):null,props}function declareUpdate(props){const update=createUpdate(props);return react_spring_shared_esm_is.und(update.default)&&(update.default=getDefaultProps(update)),update}function findDefined(values,keys){eachProp(values,((value,key)=>null!=value&&keys.add(key)))}const ACTIVE_EVENTS=["onStart","onRest","onChange","onPause","onResume"];function mergeActiveFn(target,props,type){target.animation[type]=props[type]!==getDefaultProp(props,type)?resolveProp(props[type],target.key):void 0}function sendEvent(target,type,...args){var _target$animation$typ,_target$animation,_target$defaultProps$,_target$defaultProps;null==(_target$animation$typ=(_target$animation=target.animation)[type])||_target$animation$typ.call(_target$animation,...args),null==(_target$defaultProps$=(_target$defaultProps=target.defaultProps)[type])||_target$defaultProps$.call(_target$defaultProps,...args)}const BATCHED_EVENTS=["onStart","onChange","onRest"];let nextId=1;class Controller{constructor(props,flush){this.id=nextId++,this.springs={},this.queue=[],this.ref=void 0,this._flush=void 0,this._initialProps=void 0,this._lastAsyncId=0,this._active=new Set,this._changed=new Set,this._started=!1,this._item=void 0,this._state={paused:!1,pauseQueue:new Set,resumeQueue:new Set,timeouts:new Set},this._events={onStart:new Map,onChange:new Map,onRest:new Map},this._onFrame=this._onFrame.bind(this),flush&&(this._flush=flush),props&&this.start(react_spring_core_esm_extends({default:!0},props))}get idle(){return!this._state.asyncTo&&Object.values(this.springs).every((spring=>spring.idle&&!spring.isDelayed&&!spring.isPaused))}get item(){return this._item}set item(item){this._item=item}get(){const values={};return this.each(((spring,key)=>values[key]=spring.get())),values}set(values){for(const key in values){const value=values[key];react_spring_shared_esm_is.und(value)||this.springs[key].set(value)}}update(props){return props&&this.queue.push(createUpdate(props)),this}start(props){let{queue:queue}=this;return props?queue=react_spring_shared_esm_toArray(props).map(createUpdate):this.queue=[],this._flush?this._flush(this,queue):(prepareKeys(this,queue),flushUpdateQueue(this,queue))}stop(arg,keys){if(arg!==!!arg&&(keys=arg),keys){const springs=this.springs;react_spring_shared_esm_each(react_spring_shared_esm_toArray(keys),(key=>springs[key].stop(!!arg)))}else stopAsync(this._state,this._lastAsyncId),this.each((spring=>spring.stop(!!arg)));return this}pause(keys){if(react_spring_shared_esm_is.und(keys))this.start({pause:!0});else{const springs=this.springs;react_spring_shared_esm_each(react_spring_shared_esm_toArray(keys),(key=>springs[key].pause()))}return this}resume(keys){if(react_spring_shared_esm_is.und(keys))this.start({pause:!1});else{const springs=this.springs;react_spring_shared_esm_each(react_spring_shared_esm_toArray(keys),(key=>springs[key].resume()))}return this}each(iterator){eachProp(this.springs,iterator)}_onFrame(){const{onStart:onStart,onChange:onChange,onRest:onRest}=this._events,active=this._active.size>0,changed=this._changed.size>0;(active&&!this._started||changed&&!this._started)&&(this._started=!0,flush(onStart,(([onStart,result])=>{result.value=this.get(),onStart(result,this,this._item)})));const idle=!active&&this._started,values=changed||idle&&onRest.size?this.get():null;changed&&onChange.size&&flush(onChange,(([onChange,result])=>{result.value=values,onChange(result,this,this._item)})),idle&&(this._started=!1,flush(onRest,(([onRest,result])=>{result.value=values,onRest(result,this,this._item)})))}eventObserved(event){if("change"==event.type)this._changed.add(event.parent),event.idle||this._active.add(event.parent);else{if("idle"!=event.type)return;this._active.delete(event.parent)}react_spring_rafz_esm_raf.onFrame(this._onFrame)}}function flushUpdateQueue(ctrl,queue){return Promise.all(queue.map((props=>flushUpdate(ctrl,props)))).then((results=>getCombinedResult(ctrl,results)))}async function flushUpdate(ctrl,props,isLoop){const{keys:keys,to:to,from:from,loop:loop,onRest:onRest,onResolve:onResolve}=props,defaults=react_spring_shared_esm_is.obj(props.default)&&props.default;loop&&(props.loop=!1),!1===to&&(props.to=null),!1===from&&(props.from=null);const asyncTo=react_spring_shared_esm_is.arr(to)||react_spring_shared_esm_is.fun(to)?to:void 0;asyncTo?(props.to=void 0,props.onRest=void 0,defaults&&(defaults.onRest=void 0)):react_spring_shared_esm_each(BATCHED_EVENTS,(key=>{const handler=props[key];if(react_spring_shared_esm_is.fun(handler)){const queue=ctrl._events[key];props[key]=({finished:finished,cancelled:cancelled})=>{const result=queue.get(handler);result?(finished||(result.finished=!1),cancelled&&(result.cancelled=!0)):queue.set(handler,{value:null,finished:finished||!1,cancelled:cancelled||!1})},defaults&&(defaults[key]=props[key])}}));const state=ctrl._state;props.pause===!state.paused?(state.paused=props.pause,flushCalls(props.pause?state.pauseQueue:state.resumeQueue)):state.paused&&(props.pause=!0);const promises=(keys||Object.keys(ctrl.springs)).map((key=>ctrl.springs[key].start(props))),cancel=!0===props.cancel||!0===getDefaultProp(props,"cancel");(asyncTo||cancel&&state.asyncId)&&promises.push(scheduleProps(++ctrl._lastAsyncId,{props:props,state:state,actions:{pause:noop,resume:noop,start(props,resolve){cancel?(stopAsync(state,ctrl._lastAsyncId),resolve(getCancelledResult(ctrl))):(props.onRest=onRest,resolve(runAsync(asyncTo,props,state,ctrl)))}}})),state.paused&&await new Promise((resume=>{state.resumeQueue.add(resume)}));const result=getCombinedResult(ctrl,await Promise.all(promises));if(loop&&result.finished&&(!isLoop||!result.noop)){const nextProps=createLoopUpdate(props,loop,to);if(nextProps)return prepareKeys(ctrl,[nextProps]),flushUpdate(ctrl,nextProps,!0)}return onResolve&&react_spring_rafz_esm_raf.batchedUpdates((()=>onResolve(result,ctrl,ctrl.item))),result}function getSprings(ctrl,props){const springs=react_spring_core_esm_extends({},ctrl.springs);return props&&react_spring_shared_esm_each(react_spring_shared_esm_toArray(props),(props=>{react_spring_shared_esm_is.und(props.keys)&&(props=createUpdate(props)),react_spring_shared_esm_is.obj(props.to)||(props=react_spring_core_esm_extends({},props,{to:void 0})),prepareSprings(springs,props,(key=>createSpring(key)))})),setSprings(ctrl,springs),springs}function setSprings(ctrl,springs){eachProp(springs,((spring,key)=>{ctrl.springs[key]||(ctrl.springs[key]=spring,addFluidObserver(spring,ctrl))}))}function createSpring(key,observer){const spring=new SpringValue;return spring.key=key,observer&&addFluidObserver(spring,observer),spring}function prepareSprings(springs,props,create){props.keys&&react_spring_shared_esm_each(props.keys,(key=>{(springs[key]||(springs[key]=create(key)))._prepareNode(props)}))}function prepareKeys(ctrl,queue){react_spring_shared_esm_each(queue,(props=>{prepareSprings(ctrl.springs,props,(key=>createSpring(key,ctrl)))}))}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}const _excluded$6=["children"],SpringContext=_ref=>{let{children:children}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded$6);const inherited=(0,react.useContext)(ctx),pause=props.pause||!!inherited.pause,immediate=props.immediate||!!inherited.immediate;props=function useMemoOne(getResult,inputs){const[initial]=(0,react.useState)((()=>({inputs:inputs,result:getResult()}))),committed=(0,react.useRef)(),prevCache=committed.current;let cache=prevCache;cache?Boolean(inputs&&cache.inputs&&function areInputsEqual(next,prev){if(next.length!==prev.length)return!1;for(let i=0;i<next.length;i++)if(next[i]!==prev[i])return!1;return!0}(inputs,cache.inputs))||(cache={inputs:inputs,result:getResult()}):cache=initial;return(0,react.useEffect)((()=>{committed.current=cache,prevCache==initial&&(initial.inputs=initial.result=void 0)}),[cache]),cache.result}((()=>({pause:pause,immediate:immediate})),[pause,immediate]);const{Provider:Provider}=ctx;return react.createElement(Provider,{value:props},children)},ctx=function makeContext(target,init){return Object.assign(target,react.createContext(init)),target.Provider._context=target,target.Consumer._context=target,target}(SpringContext,{});SpringContext.Provider=ctx.Provider,SpringContext.Consumer=ctx.Consumer;const SpringRef=()=>{const current=[],SpringRef=function SpringRef(props){!function deprecateDirectCall(){warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`)}();const results=[];return react_spring_shared_esm_each(current,((ctrl,i)=>{if(react_spring_shared_esm_is.und(props))results.push(ctrl.start());else{const update=_getProps(props,ctrl,i);update&&results.push(ctrl.start(update))}})),results};SpringRef.current=current,SpringRef.add=function(ctrl){current.includes(ctrl)||current.push(ctrl)},SpringRef.delete=function(ctrl){const i=current.indexOf(ctrl);~i&&current.splice(i,1)},SpringRef.pause=function(){return react_spring_shared_esm_each(current,(ctrl=>ctrl.pause(...arguments))),this},SpringRef.resume=function(){return react_spring_shared_esm_each(current,(ctrl=>ctrl.resume(...arguments))),this},SpringRef.set=function(values){react_spring_shared_esm_each(current,(ctrl=>ctrl.set(values)))},SpringRef.start=function(props){const results=[];return react_spring_shared_esm_each(current,((ctrl,i)=>{if(react_spring_shared_esm_is.und(props))results.push(ctrl.start());else{const update=this._getProps(props,ctrl,i);update&&results.push(ctrl.start(update))}})),results},SpringRef.stop=function(){return react_spring_shared_esm_each(current,(ctrl=>ctrl.stop(...arguments))),this},SpringRef.update=function(props){return react_spring_shared_esm_each(current,((ctrl,i)=>ctrl.update(this._getProps(props,ctrl,i)))),this};const _getProps=function _getProps(arg,ctrl,index){return react_spring_shared_esm_is.fun(arg)?arg(index,ctrl):arg};return SpringRef._getProps=_getProps,SpringRef};function useSprings(length,props,deps){const propsFn=react_spring_shared_esm_is.fun(props)&&props;propsFn&&!deps&&(deps=[]);const ref=(0,react.useMemo)((()=>propsFn||3==arguments.length?SpringRef():void 0),[]),layoutId=(0,react.useRef)(0),forceUpdate=react_spring_shared_esm_useForceUpdate(),state=(0,react.useMemo)((()=>({ctrls:[],queue:[],flush(ctrl,updates){const springs=getSprings(ctrl,updates);return layoutId.current>0&&!state.queue.length&&!Object.keys(springs).some((key=>!ctrl.springs[key]))?flushUpdateQueue(ctrl,updates):new Promise((resolve=>{setSprings(ctrl,springs),state.queue.push((()=>{resolve(flushUpdateQueue(ctrl,updates))})),forceUpdate()}))}})),[]),ctrls=(0,react.useRef)([...state.ctrls]),updates=[],prevLength=react_spring_shared_esm_usePrev(length)||0;function declareUpdates(startIndex,endIndex){for(let i=startIndex;i<endIndex;i++){const ctrl=ctrls.current[i]||(ctrls.current[i]=new Controller(null,state.flush)),update=propsFn?propsFn(i,ctrl):props[i];update&&(updates[i]=declareUpdate(update))}}(0,react.useMemo)((()=>{react_spring_shared_esm_each(ctrls.current.slice(length,prevLength),(ctrl=>{detachRefs(ctrl,ref),ctrl.stop(!0)})),ctrls.current.length=length,declareUpdates(prevLength,length)}),[length]),(0,react.useMemo)((()=>{declareUpdates(0,Math.min(prevLength,length))}),deps);const springs=ctrls.current.map(((ctrl,i)=>getSprings(ctrl,updates[i]))),context=(0,react.useContext)(SpringContext),prevContext=react_spring_shared_esm_usePrev(context),hasContext=context!==prevContext&&hasProps(context);react_spring_shared_esm_useIsomorphicLayoutEffect((()=>{layoutId.current++,state.ctrls=ctrls.current;const{queue:queue}=state;queue.length&&(state.queue=[],react_spring_shared_esm_each(queue,(cb=>cb()))),react_spring_shared_esm_each(ctrls.current,((ctrl,i)=>{null==ref||ref.add(ctrl),hasContext&&ctrl.start({default:context});const update=updates[i];update&&(replaceRef(ctrl,update.ref),ctrl.ref?ctrl.queue.push(update):ctrl.start(update))}))})),react_spring_shared_esm_useOnce((()=>()=>{react_spring_shared_esm_each(state.ctrls,(ctrl=>ctrl.stop(!0)))}));const values=springs.map((x=>react_spring_core_esm_extends({},x)));return ref?[values,ref]:values}function useSpring(props,deps){const isFn=react_spring_shared_esm_is.fun(props),[[values],ref]=useSprings(1,isFn?props:[props],isFn?deps||[]:deps);return isFn||2==arguments.length?[values,ref]:values}let TransitionPhase;!function(TransitionPhase){TransitionPhase.MOUNT="mount",TransitionPhase.ENTER="enter",TransitionPhase.UPDATE="update",TransitionPhase.LEAVE="leave"}(TransitionPhase||(TransitionPhase={}));class Interpolation extends FrameValue{constructor(source,args){super(),this.key=void 0,this.idle=!0,this.calc=void 0,this._active=new Set,this.source=source,this.calc=createInterpolator(...args);const value=this._get(),nodeType=getAnimatedType(value);setAnimated(this,nodeType.create(value))}advance(_dt){const value=this._get();isEqual(value,this.get())||(getAnimated(this).setValue(value),this._onChange(value,this.idle)),!this.idle&&checkIdle(this._active)&&becomeIdle(this)}_get(){const inputs=react_spring_shared_esm_is.arr(this.source)?this.source.map(getFluidValue):react_spring_shared_esm_toArray(getFluidValue(this.source));return this.calc(...inputs)}_start(){this.idle&&!checkIdle(this._active)&&(this.idle=!1,react_spring_shared_esm_each(getPayload(this),(node=>{node.done=!1})),globals.skipAnimation?(react_spring_rafz_esm_raf.batchedUpdates((()=>this.advance())),becomeIdle(this)):frameLoop.start(this))}_attach(){let priority=1;react_spring_shared_esm_each(react_spring_shared_esm_toArray(this.source),(source=>{hasFluidValue(source)&&addFluidObserver(source,this),isFrameValue(source)&&(source.idle||this._active.add(source),priority=Math.max(priority,source.priority+1))})),this.priority=priority,this._start()}_detach(){react_spring_shared_esm_each(react_spring_shared_esm_toArray(this.source),(source=>{hasFluidValue(source)&&removeFluidObserver(source,this)})),this._active.clear(),becomeIdle(this)}eventObserved(event){"change"==event.type?event.idle?this.advance():(this._active.add(event.parent),this._start()):"idle"==event.type?this._active.delete(event.parent):"priority"==event.type&&(this.priority=react_spring_shared_esm_toArray(this.source).reduce(((highest,parent)=>Math.max(highest,(isFrameValue(parent)?parent.priority:0)+1)),0))}}function isIdle(source){return!1!==source.idle}function checkIdle(active){return!active.size||Array.from(active).every(isIdle)}function becomeIdle(self){self.idle||(self.idle=!0,react_spring_shared_esm_each(getPayload(self),(node=>{node.done=!0})),callFluidObservers(self,{type:"idle",parent:self}))}globals.assign({createStringInterpolator:createStringInterpolator,to:(source,args)=>new Interpolation(source,args)});frameLoop.advance;const primitives=["primitive"].concat(Object.keys(three_module).filter((key=>/^[A-Z]/.test(key))).map((key=>key[0].toLowerCase()+key.slice(1))));globals.assign({createStringInterpolator:createStringInterpolator,colors:{transparent:0,aliceblue:4042850303,antiquewhite:4209760255,aqua:16777215,aquamarine:2147472639,azure:4043309055,beige:4126530815,bisque:4293182719,black:255,blanchedalmond:4293643775,blue:65535,blueviolet:2318131967,brown:2771004159,burlywood:3736635391,burntsienna:3934150143,cadetblue:1604231423,chartreuse:2147418367,chocolate:3530104575,coral:4286533887,cornflowerblue:1687547391,cornsilk:4294499583,crimson:3692313855,cyan:16777215,darkblue:35839,darkcyan:9145343,darkgoldenrod:3095792639,darkgray:2846468607,darkgreen:6553855,darkgrey:2846468607,darkkhaki:3182914559,darkmagenta:2332068863,darkolivegreen:1433087999,darkorange:4287365375,darkorchid:2570243327,darkred:2332033279,darksalmon:3918953215,darkseagreen:2411499519,darkslateblue:1211993087,darkslategray:793726975,darkslategrey:793726975,darkturquoise:13554175,darkviolet:2483082239,deeppink:4279538687,deepskyblue:12582911,dimgray:1768516095,dimgrey:1768516095,dodgerblue:512819199,firebrick:2988581631,floralwhite:4294635775,forestgreen:579543807,fuchsia:4278255615,gainsboro:3705462015,ghostwhite:4177068031,gold:4292280575,goldenrod:3668254975,gray:2155905279,green:8388863,greenyellow:2919182335,grey:2155905279,honeydew:4043305215,hotpink:4285117695,indianred:3445382399,indigo:1258324735,ivory:4294963455,khaki:4041641215,lavender:3873897215,lavenderblush:4293981695,lawngreen:2096890111,lemonchiffon:4294626815,lightblue:2916673279,lightcoral:4034953471,lightcyan:3774873599,lightgoldenrodyellow:4210742015,lightgray:3553874943,lightgreen:2431553791,lightgrey:3553874943,lightpink:4290167295,lightsalmon:4288707327,lightseagreen:548580095,lightskyblue:2278488831,lightslategray:2005441023,lightslategrey:2005441023,lightsteelblue:2965692159,lightyellow:4294959359,lime:16711935,limegreen:852308735,linen:4210091775,magenta:4278255615,maroon:2147483903,mediumaquamarine:1724754687,mediumblue:52735,mediumorchid:3126187007,mediumpurple:2473647103,mediumseagreen:1018393087,mediumslateblue:2070474495,mediumspringgreen:16423679,mediumturquoise:1221709055,mediumvioletred:3340076543,midnightblue:421097727,mintcream:4127193855,mistyrose:4293190143,moccasin:4293178879,navajowhite:4292783615,navy:33023,oldlace:4260751103,olive:2155872511,olivedrab:1804477439,orange:4289003775,orangered:4282712319,orchid:3664828159,palegoldenrod:4008225535,palegreen:2566625535,paleturquoise:2951671551,palevioletred:3681588223,papayawhip:4293907967,peachpuff:4292524543,peru:3448061951,pink:4290825215,plum:3718307327,powderblue:2967529215,purple:2147516671,rebeccapurple:1714657791,red:4278190335,rosybrown:3163525119,royalblue:1097458175,saddlebrown:2336560127,salmon:4202722047,sandybrown:4104413439,seagreen:780883967,seashell:4294307583,sienna:2689740287,silver:3233857791,skyblue:2278484991,slateblue:1784335871,slategray:1887473919,slategrey:1887473919,snow:4294638335,springgreen:16744447,steelblue:1182971135,tan:3535047935,teal:8421631,thistle:3636451583,tomato:4284696575,turquoise:1088475391,violet:4001558271,wheat:4125012991,white:4294967295,whitesmoke:4126537215,yellow:4294902015,yellowgreen:2597139199},frameLoop:"demand"}),(0,index_673ef987_esm.n)((()=>{react_spring_rafz_esm_raf.advance()}));const host=((components,{applyAnimatedValues:_applyAnimatedValues=(()=>!1),createAnimatedStyle:_createAnimatedStyle=(style=>new AnimatedObject(style)),getComponentProps:_getComponentProps=(props=>props)}={})=>{const hostConfig={applyAnimatedValues:_applyAnimatedValues,createAnimatedStyle:_createAnimatedStyle,getComponentProps:_getComponentProps},animated=Component=>{const displayName=getDisplayName(Component)||"Anonymous";return(Component=react_spring_shared_esm_is.str(Component)?animated[Component]||(animated[Component]=withAnimated(Component,hostConfig)):Component[cacheKey]||(Component[cacheKey]=withAnimated(Component,hostConfig))).displayName=`Animated(${displayName})`,Component};return eachProp(components,((Component,key)=>{react_spring_shared_esm_is.arr(components)&&(key=getDisplayName(Component)),animated[key]=animated(Component)})),{animated:animated}})(primitives,{applyAnimatedValues:index_673ef987_esm.j}),animated=host.animated;const V={toVector(v,fallback){return void 0===v&&(v=fallback),Array.isArray(v)?v:[v,v]},add(v1,v2){return[v1[0]+v2[0],v1[1]+v2[1]]},sub(v1,v2){return[v1[0]-v2[0],v1[1]-v2[1]]},addTo(v1,v2){v1[0]+=v2[0],v1[1]+=v2[1]},subTo(v1,v2){v1[0]-=v2[0],v1[1]-=v2[1]}};function rubberband(distance,dimension,constant){return 0===dimension||Math.abs(dimension)===1/0?Math.pow(distance,5*constant):distance*dimension*constant/(dimension+constant*distance)}function rubberbandIfOutOfBounds(position,min,max,constant=.15){return 0===constant?function maths_0ab39ae9_esm_clamp(v,min,max){return Math.max(min,Math.min(v,max))}(position,min,max):position<min?-rubberband(min-position,max-min,constant)+min:position>max?+rubberband(position-max,max-min,constant)+max:position}function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}const EVENT_TYPE_MAP={pointer:{start:"down",change:"move",end:"up"},mouse:{start:"down",change:"move",end:"up"},touch:{start:"start",change:"move",end:"end"},gesture:{start:"start",change:"change",end:"end"}};function capitalize(string){return string?string[0].toUpperCase()+string.slice(1):""}const actionsWithoutCaptureSupported=["enter","leave"];function toHandlerProp(device,action="",capture=!1){const deviceProps=EVENT_TYPE_MAP[device],actionKey=deviceProps&&deviceProps[action]||action;return"on"+capitalize(device)+capitalize(actionKey)+(function hasCapture(capture=!1,actionKey){return capture&&!actionsWithoutCaptureSupported.includes(actionKey)}(capture,actionKey)?"Capture":"")}const pointerCaptureEvents=["gotpointercapture","lostpointercapture"];function parseProp(prop){let eventKey=prop.substring(2).toLowerCase();const passive=!!~eventKey.indexOf("passive");passive&&(eventKey=eventKey.replace("passive",""));const captureKey=pointerCaptureEvents.includes(eventKey)?"capturecapture":"capture",capture=!!~eventKey.indexOf(captureKey);return capture&&(eventKey=eventKey.replace("capture","")),{device:eventKey,capture:capture,passive:passive}}function isTouch(event){return"touches"in event}function getPointerType(event){return isTouch(event)?"touch":"pointerType"in event?event.pointerType:"mouse"}function getValueEvent(event){return isTouch(event)?function getTouchList(event){return"touchend"===event.type||"touchcancel"===event.type?event.changedTouches:event.targetTouches}(event)[0]:event}function distanceAngle(P1,P2){try{const dx=P2.clientX-P1.clientX,dy=P2.clientY-P1.clientY,cx=(P2.clientX+P1.clientX)/2,cy=(P2.clientY+P1.clientY)/2,distance=Math.hypot(dx,dy),angle=-180*Math.atan2(dx,dy)/Math.PI;return{angle:angle,distance:distance,origin:[cx,cy]}}catch(_unused){}return null}function touchIds(event){return function getCurrentTargetTouchList(event){return Array.from(event.touches).filter((e=>{var _event$currentTarget,_event$currentTarget$;return e.target===event.currentTarget||(null===(_event$currentTarget=event.currentTarget)||void 0===_event$currentTarget||null===(_event$currentTarget$=_event$currentTarget.contains)||void 0===_event$currentTarget$?void 0:_event$currentTarget$.call(_event$currentTarget,e.target))}))}(event).map((touch=>touch.identifier))}function touchDistanceAngle(event,ids){const[P1,P2]=Array.from(event.touches).filter((touch=>ids.includes(touch.identifier)));return distanceAngle(P1,P2)}function pointerId(event){const valueEvent=getValueEvent(event);return isTouch(event)?valueEvent.identifier:valueEvent.pointerId}function pointerValues(event){const valueEvent=getValueEvent(event);return[valueEvent.clientX,valueEvent.clientY]}function wheelValues(event){let{deltaX:deltaX,deltaY:deltaY,deltaMode:deltaMode}=event;return 1===deltaMode?(deltaX*=40,deltaY*=40):2===deltaMode&&(deltaX*=800,deltaY*=800),[deltaX,deltaY]}function actions_76b8683e_esm_call(v,...args){return"function"==typeof v?v(...args):v}function actions_76b8683e_esm_noop(){}function chain(...fns){return 0===fns.length?actions_76b8683e_esm_noop:1===fns.length?fns[0]:function(){let result;for(const fn of fns)result=fn.apply(this,arguments)||result;return result}}function assignDefault(value,fallback){return Object.assign({},fallback,value||{})}class Engine{constructor(ctrl,args,key){this.ctrl=ctrl,this.args=args,this.key=key,this.state||(this.state={},this.computeValues([0,0]),this.computeInitial(),this.init&&this.init(),this.reset())}get state(){return this.ctrl.state[this.key]}set state(state){this.ctrl.state[this.key]=state}get shared(){return this.ctrl.state.shared}get eventStore(){return this.ctrl.gestureEventStores[this.key]}get timeoutStore(){return this.ctrl.gestureTimeoutStores[this.key]}get config(){return this.ctrl.config[this.key]}get sharedConfig(){return this.ctrl.config.shared}get handler(){return this.ctrl.handlers[this.key]}reset(){const{state:state,shared:shared,ingKey:ingKey,args:args}=this;shared[ingKey]=state._active=state.active=state._blocked=state._force=!1,state._step=[!1,!1],state.intentional=!1,state._movement=[0,0],state._distance=[0,0],state._direction=[0,0],state._delta=[0,0],state._bounds=[[-1/0,1/0],[-1/0,1/0]],state.args=args,state.axis=void 0,state.memo=void 0,state.elapsedTime=state.timeDelta=0,state.direction=[0,0],state.distance=[0,0],state.overflow=[0,0],state._movementBound=[!1,!1],state.velocity=[0,0],state.movement=[0,0],state.delta=[0,0],state.timeStamp=0}start(event){const state=this.state,config=this.config;state._active||(this.reset(),this.computeInitial(),state._active=!0,state.target=event.target,state.currentTarget=event.currentTarget,state.lastOffset=config.from?actions_76b8683e_esm_call(config.from,state):state.offset,state.offset=state.lastOffset,state.startTime=state.timeStamp=event.timeStamp)}computeValues(values){const state=this.state;state._values=values,state.values=this.config.transform(values)}computeInitial(){const state=this.state;state._initial=state._values,state.initial=state.values}compute(event){const{state:state,config:config,shared:shared}=this;state.args=this.args;let dt=0;if(event&&(state.event=event,config.preventDefault&&event.cancelable&&state.event.preventDefault(),state.type=event.type,shared.touches=this.ctrl.pointerIds.size||this.ctrl.touchIds.size,shared.locked=!!document.pointerLockElement,Object.assign(shared,function getEventDetails(event){const payload={};if("buttons"in event&&(payload.buttons=event.buttons),"shiftKey"in event){const{shiftKey:shiftKey,altKey:altKey,metaKey:metaKey,ctrlKey:ctrlKey}=event;Object.assign(payload,{shiftKey:shiftKey,altKey:altKey,metaKey:metaKey,ctrlKey:ctrlKey})}return payload}(event)),shared.down=shared.pressed=shared.buttons%2==1||shared.touches>0,dt=event.timeStamp-state.timeStamp,state.timeStamp=event.timeStamp,state.elapsedTime=state.timeStamp-state.startTime),state._active){const _absoluteDelta=state._delta.map(Math.abs);V.addTo(state._distance,_absoluteDelta)}this.axisIntent&&this.axisIntent(event);const[_m0,_m1]=state._movement,[t0,t1]=config.threshold,{_step:_step,values:values}=state;if(config.hasCustomTransform?(!1===_step[0]&&(_step[0]=Math.abs(_m0)>=t0&&values[0]),!1===_step[1]&&(_step[1]=Math.abs(_m1)>=t1&&values[1])):(!1===_step[0]&&(_step[0]=Math.abs(_m0)>=t0&&Math.sign(_m0)*t0),!1===_step[1]&&(_step[1]=Math.abs(_m1)>=t1&&Math.sign(_m1)*t1)),state.intentional=!1!==_step[0]||!1!==_step[1],!state.intentional)return;const movement=[0,0];if(config.hasCustomTransform){const[v0,v1]=values;movement[0]=!1!==_step[0]?v0-_step[0]:0,movement[1]=!1!==_step[1]?v1-_step[1]:0}else movement[0]=!1!==_step[0]?_m0-_step[0]:0,movement[1]=!1!==_step[1]?_m1-_step[1]:0;this.restrictToAxis&&!state._blocked&&this.restrictToAxis(movement);const previousOffset=state.offset,gestureIsActive=state._active&&!state._blocked||state.active;gestureIsActive&&(state.first=state._active&&!state.active,state.last=!state._active&&state.active,state.active=shared[this.ingKey]=state._active,event&&(state.first&&("bounds"in config&&(state._bounds=actions_76b8683e_esm_call(config.bounds,state)),this.setup&&this.setup()),state.movement=movement,this.computeOffset()));const[ox,oy]=state.offset,[[x0,x1],[y0,y1]]=state._bounds;state.overflow=[ox<x0?-1:ox>x1?1:0,oy<y0?-1:oy>y1?1:0],state._movementBound[0]=!!state.overflow[0]&&(!1===state._movementBound[0]?state._movement[0]:state._movementBound[0]),state._movementBound[1]=!!state.overflow[1]&&(!1===state._movementBound[1]?state._movement[1]:state._movementBound[1]);const rubberband=state._active&&config.rubberband||[0,0];if(state.offset=function computeRubberband(bounds,[Vx,Vy],[Rx,Ry]){const[[X0,X1],[Y0,Y1]]=bounds;return[rubberbandIfOutOfBounds(Vx,X0,X1,Rx),rubberbandIfOutOfBounds(Vy,Y0,Y1,Ry)]}(state._bounds,state.offset,rubberband),state.delta=V.sub(state.offset,previousOffset),this.computeMovement(),gestureIsActive&&(!state.last||dt>32)){state.delta=V.sub(state.offset,previousOffset);const absoluteDelta=state.delta.map(Math.abs);V.addTo(state.distance,absoluteDelta),state.direction=state.delta.map(Math.sign),state._direction=state._delta.map(Math.sign),!state.first&&dt>0&&(state.velocity=[absoluteDelta[0]/dt,absoluteDelta[1]/dt],state.timeDelta=dt)}}emit(){const state=this.state,shared=this.shared,config=this.config;if(state._active||this.clean(),(state._blocked||!state.intentional)&&!state._force&&!config.triggerAllEvents)return;const memo=this.handler(_objectSpread2(_objectSpread2(_objectSpread2({},shared),state),{},{[this.aliasKey]:state.values}));void 0!==memo&&(state.memo=memo)}clean(){this.eventStore.clean(),this.timeoutStore.clean()}}class CoordinatesEngine extends Engine{constructor(...args){super(...args),_defineProperty(this,"aliasKey","xy")}reset(){super.reset(),this.state.axis=void 0}init(){this.state.offset=[0,0],this.state.lastOffset=[0,0]}computeOffset(){this.state.offset=V.add(this.state.lastOffset,this.state.movement)}computeMovement(){this.state.movement=V.sub(this.state.offset,this.state.lastOffset)}axisIntent(event){const state=this.state,config=this.config;if(!state.axis&&event){const threshold="object"==typeof config.axisThreshold?config.axisThreshold[getPointerType(event)]:config.axisThreshold;state.axis=function selectAxis([dx,dy],threshold){const absDx=Math.abs(dx),absDy=Math.abs(dy);return absDx>absDy&&absDx>threshold?"x":absDy>absDx&&absDy>threshold?"y":void 0}(state._movement,threshold)}state._blocked=(config.lockDirection||!!config.axis)&&!state.axis||!!config.axis&&config.axis!==state.axis}restrictToAxis(v){if(this.config.axis||this.config.lockDirection)switch(this.state.axis){case"x":v[1]=0;break;case"y":v[0]=0}}}const identity=v=>v,commonConfigResolver={enabled(value=!0){return value},eventOptions(value,_k,config){return _objectSpread2(_objectSpread2({},config.shared.eventOptions),value)},preventDefault(value=!1){return value},triggerAllEvents(value=!1){return value},rubberband(value=0){switch(value){case!0:return[.15,.15];case!1:return[0,0];default:return V.toVector(value)}},from(value){return"function"==typeof value?value:null!=value?V.toVector(value):void 0},transform(value,_k,config){const transform=value||config.shared.transform;return this.hasCustomTransform=!!transform,transform||identity},threshold(value){return V.toVector(value,0)}};const coordinatesConfigResolver=_objectSpread2(_objectSpread2({},commonConfigResolver),{},{axis(_v,_k,{axis:axis}){if(this.lockDirection="lock"===axis,!this.lockDirection)return axis},axisThreshold(value=0){return value},bounds(value={}){if("function"==typeof value)return state=>coordinatesConfigResolver.bounds(value(state));if("current"in value)return()=>value.current;if("function"==typeof HTMLElement&&value instanceof HTMLElement)return value;const{left:left=-1/0,right:right=1/0,top:top=-1/0,bottom:bottom=1/0}=value;return[[left,right],[top,bottom]]}}),KEYS_DELTA_MAP={ArrowRight:(displacement,factor=1)=>[displacement*factor,0],ArrowLeft:(displacement,factor=1)=>[-1*displacement*factor,0],ArrowUp:(displacement,factor=1)=>[0,-1*displacement*factor],ArrowDown:(displacement,factor=1)=>[0,displacement*factor]};const isBrowser="undefined"!=typeof window&&window.document&&window.document.createElement;function isTouchScreen(){return function supportsTouchEvents(){return isBrowser&&"ontouchstart"in window}()||isBrowser&&window.navigator.maxTouchPoints>1}const SUPPORT={isBrowser:isBrowser,gesture:function supportsGestureEvents(){try{return"constructor"in GestureEvent}catch(e){return!1}}(),touch:isTouchScreen(),touchscreen:isTouchScreen(),pointer:function supportsPointerEvents(){return isBrowser&&"onpointerdown"in window}(),pointerLock:function supportsPointerLock(){return isBrowser&&"exitPointerLock"in window.document}()},DEFAULT_DRAG_AXIS_THRESHOLD={mouse:0,touch:0,pen:8},dragConfigResolver=_objectSpread2(_objectSpread2({},coordinatesConfigResolver),{},{device(_v,_k,{pointer:{touch:touch=!1,lock:lock=!1,mouse:mouse=!1}={}}){return this.pointerLock=lock&&SUPPORT.pointerLock,SUPPORT.touch&&touch?"touch":this.pointerLock?"mouse":SUPPORT.pointer&&!mouse?"pointer":SUPPORT.touch?"touch":"mouse"},preventScrollAxis(value,_k,{preventScroll:preventScroll}){if(this.preventScrollDelay="number"==typeof preventScroll?preventScroll:preventScroll||void 0===preventScroll&&value?250:void 0,SUPPORT.touchscreen&&!1!==preventScroll)return value||(void 0!==preventScroll?"y":void 0)},pointerCapture(_v,_k,{pointer:{capture:capture=!0,buttons:buttons=1,keys:keys=!0}={}}){return this.pointerButtons=buttons,this.keys=keys,!this.pointerLock&&"pointer"===this.device&&capture},threshold(value,_k,{filterTaps:filterTaps=!1,tapsThreshold:tapsThreshold=3,axis:axis}){const threshold=V.toVector(value,filterTaps?tapsThreshold:axis?1:0);return this.filterTaps=filterTaps,this.tapsThreshold=tapsThreshold,threshold},swipe({velocity:velocity=.5,distance:distance=50,duration:duration=250}={}){return{velocity:this.transform(V.toVector(velocity)),distance:this.transform(V.toVector(distance)),duration:duration}},delay(value=0){switch(value){case!0:return 180;case!1:return 0;default:return value}},axisThreshold(value){return value?_objectSpread2(_objectSpread2({},DEFAULT_DRAG_AXIS_THRESHOLD),value):DEFAULT_DRAG_AXIS_THRESHOLD},keyboardDisplacement(value=10){return value}});function clampStateInternalMovementToBounds(state){const[ox,oy]=state.overflow,[dx,dy]=state._delta,[dirx,diry]=state._direction;(ox<0&&dx>0&&dirx<0||ox>0&&dx<0&&dirx>0)&&(state._movement[0]=state._movementBound[0]),(oy<0&&dy>0&&diry<0||oy>0&&dy<0&&diry>0)&&(state._movement[1]=state._movementBound[1])}const pinchConfigResolver=_objectSpread2(_objectSpread2({},commonConfigResolver),{},{device(_v,_k,{shared:shared,pointer:{touch:touch=!1}={}}){if(shared.target&&!SUPPORT.touch&&SUPPORT.gesture)return"gesture";if(SUPPORT.touch&&touch)return"touch";if(SUPPORT.touchscreen){if(SUPPORT.pointer)return"pointer";if(SUPPORT.touch)return"touch"}},bounds(_v,_k,{scaleBounds:scaleBounds={},angleBounds:angleBounds={}}){const _scaleBounds=state=>{const D=assignDefault(actions_76b8683e_esm_call(scaleBounds,state),{min:-1/0,max:1/0});return[D.min,D.max]},_angleBounds=state=>{const A=assignDefault(actions_76b8683e_esm_call(angleBounds,state),{min:-1/0,max:1/0});return[A.min,A.max]};return"function"!=typeof scaleBounds&&"function"!=typeof angleBounds?[_scaleBounds(),_angleBounds()]:state=>[_scaleBounds(state),_angleBounds(state)]},threshold(value,_k,config){this.lockDirection="lock"===config.axis;return V.toVector(value,this.lockDirection?[.1,3]:0)},modifierKey(value){return void 0===value?"ctrlKey":value},pinchOnWheel(value=!0){return value}});const moveConfigResolver=_objectSpread2(_objectSpread2({},coordinatesConfigResolver),{},{mouseOnly:(value=!0)=>value});const scrollConfigResolver=coordinatesConfigResolver;const wheelConfigResolver=coordinatesConfigResolver;const hoverConfigResolver=_objectSpread2(_objectSpread2({},coordinatesConfigResolver),{},{mouseOnly:(value=!0)=>value}),EngineMap=new Map,ConfigResolverMap=new Map;function actions_76b8683e_esm_registerAction(action){EngineMap.set(action.key,action.engine),ConfigResolverMap.set(action.key,action.resolver)}const actions_76b8683e_esm_dragAction={key:"drag",engine:class DragEngine extends CoordinatesEngine{constructor(...args){super(...args),_defineProperty(this,"ingKey","dragging")}reset(){super.reset();const state=this.state;state._pointerId=void 0,state._pointerActive=!1,state._keyboardActive=!1,state._preventScroll=!1,state._delayed=!1,state.swipe=[0,0],state.tap=!1,state.canceled=!1,state.cancel=this.cancel.bind(this)}setup(){const state=this.state;if(state._bounds instanceof HTMLElement){const boundRect=state._bounds.getBoundingClientRect(),targetRect=state.currentTarget.getBoundingClientRect(),_bounds={left:boundRect.left-targetRect.left+state.offset[0],right:boundRect.right-targetRect.right+state.offset[0],top:boundRect.top-targetRect.top+state.offset[1],bottom:boundRect.bottom-targetRect.bottom+state.offset[1]};state._bounds=coordinatesConfigResolver.bounds(_bounds)}}cancel(){const state=this.state;state.canceled||(state.canceled=!0,state._active=!1,setTimeout((()=>{this.compute(),this.emit()}),0))}setActive(){this.state._active=this.state._pointerActive||this.state._keyboardActive}clean(){this.pointerClean(),this.state._pointerActive=!1,this.state._keyboardActive=!1,super.clean()}pointerDown(event){const config=this.config,state=this.state;if(null!=event.buttons&&(Array.isArray(config.pointerButtons)?!config.pointerButtons.includes(event.buttons):-1!==config.pointerButtons&&config.pointerButtons!==event.buttons))return;const ctrlIds=this.ctrl.setEventIds(event);config.pointerCapture&&event.target.setPointerCapture(event.pointerId),ctrlIds&&ctrlIds.size>1&&state._pointerActive||(this.start(event),this.setupPointer(event),state._pointerId=pointerId(event),state._pointerActive=!0,this.computeValues(pointerValues(event)),this.computeInitial(),config.preventScrollAxis&&"mouse"!==getPointerType(event)?(state._active=!1,this.setupScrollPrevention(event)):config.delay>0?(this.setupDelayTrigger(event),config.triggerAllEvents&&(this.compute(event),this.emit())):this.startPointerDrag(event))}startPointerDrag(event){const state=this.state;state._active=!0,state._preventScroll=!0,state._delayed=!1,this.compute(event),this.emit()}pointerMove(event){const state=this.state,config=this.config;if(!state._pointerActive)return;const id=pointerId(event);if(void 0!==state._pointerId&&id!==state._pointerId)return;const _values=pointerValues(event);return document.pointerLockElement===event.target?state._delta=[event.movementX,event.movementY]:(state._delta=V.sub(_values,state._values),this.computeValues(_values)),V.addTo(state._movement,state._delta),this.compute(event),state._delayed&&state.intentional?(this.timeoutStore.remove("dragDelay"),state.active=!1,void this.startPointerDrag(event)):config.preventScrollAxis&&!state._preventScroll?state.axis?state.axis===config.preventScrollAxis||"xy"===config.preventScrollAxis?(state._active=!1,void this.clean()):(this.timeoutStore.remove("startPointerDrag"),void this.startPointerDrag(event)):void 0:void this.emit()}pointerUp(event){this.ctrl.setEventIds(event);try{this.config.pointerCapture&&event.target.hasPointerCapture(event.pointerId)&&event.target.releasePointerCapture(event.pointerId)}catch(_unused){0}const state=this.state,config=this.config;if(!state._active||!state._pointerActive)return;const id=pointerId(event);if(void 0!==state._pointerId&&id!==state._pointerId)return;this.state._pointerActive=!1,this.setActive(),this.compute(event);const[dx,dy]=state._distance;if(state.tap=dx<=config.tapsThreshold&&dy<=config.tapsThreshold,state.tap&&config.filterTaps)state._force=!0;else{const[_dx,_dy]=state._delta,[_mx,_my]=state._movement,[svx,svy]=config.swipe.velocity,[sx,sy]=config.swipe.distance,sdt=config.swipe.duration;if(state.elapsedTime<sdt){const _vx=Math.abs(_dx/state.timeDelta),_vy=Math.abs(_dy/state.timeDelta);_vx>svx&&Math.abs(_mx)>sx&&(state.swipe[0]=Math.sign(_dx)),_vy>svy&&Math.abs(_my)>sy&&(state.swipe[1]=Math.sign(_dy))}}this.emit()}pointerClick(event){!this.state.tap&&event.detail>0&&(event.preventDefault(),event.stopPropagation())}setupPointer(event){const config=this.config,device=config.device;config.pointerLock&&event.currentTarget.requestPointerLock(),config.pointerCapture||(this.eventStore.add(this.sharedConfig.window,device,"change",this.pointerMove.bind(this)),this.eventStore.add(this.sharedConfig.window,device,"end",this.pointerUp.bind(this)),this.eventStore.add(this.sharedConfig.window,device,"cancel",this.pointerUp.bind(this)))}pointerClean(){this.config.pointerLock&&document.pointerLockElement===this.state.currentTarget&&document.exitPointerLock()}preventScroll(event){this.state._preventScroll&&event.cancelable&&event.preventDefault()}setupScrollPrevention(event){this.state._preventScroll=!1,function persistEvent(event){"persist"in event&&"function"==typeof event.persist&&event.persist()}(event);const remove=this.eventStore.add(this.sharedConfig.window,"touch","change",this.preventScroll.bind(this),{passive:!1});this.eventStore.add(this.sharedConfig.window,"touch","end",remove),this.eventStore.add(this.sharedConfig.window,"touch","cancel",remove),this.timeoutStore.add("startPointerDrag",this.startPointerDrag.bind(this),this.config.preventScrollDelay,event)}setupDelayTrigger(event){this.state._delayed=!0,this.timeoutStore.add("dragDelay",(()=>{this.state._step=[0,0],this.startPointerDrag(event)}),this.config.delay)}keyDown(event){const deltaFn=KEYS_DELTA_MAP[event.key];if(deltaFn){const state=this.state,factor=event.shiftKey?10:event.altKey?.1:1;this.start(event),state._delta=deltaFn(this.config.keyboardDisplacement,factor),state._keyboardActive=!0,V.addTo(state._movement,state._delta),this.compute(event),this.emit()}}keyUp(event){event.key in KEYS_DELTA_MAP&&(this.state._keyboardActive=!1,this.setActive(),this.compute(event),this.emit())}bind(bindFunction){const device=this.config.device;bindFunction(device,"start",this.pointerDown.bind(this)),this.config.pointerCapture&&(bindFunction(device,"change",this.pointerMove.bind(this)),bindFunction(device,"end",this.pointerUp.bind(this)),bindFunction(device,"cancel",this.pointerUp.bind(this)),bindFunction("lostPointerCapture","",this.pointerUp.bind(this))),this.config.keys&&(bindFunction("key","down",this.keyDown.bind(this)),bindFunction("key","up",this.keyUp.bind(this))),this.config.filterTaps&&bindFunction("click","",this.pointerClick.bind(this),{capture:!0,passive:!1})}},resolver:dragConfigResolver},actions_76b8683e_esm_hoverAction={key:"hover",engine:class HoverEngine extends CoordinatesEngine{constructor(...args){super(...args),_defineProperty(this,"ingKey","hovering")}enter(event){this.config.mouseOnly&&"mouse"!==event.pointerType||(this.start(event),this.computeValues(pointerValues(event)),this.compute(event),this.emit())}leave(event){if(this.config.mouseOnly&&"mouse"!==event.pointerType)return;const state=this.state;if(!state._active)return;state._active=!1;const values=pointerValues(event);state._movement=state._delta=V.sub(values,state._values),this.computeValues(values),this.compute(event),state.delta=state.movement,this.emit()}bind(bindFunction){bindFunction("pointer","enter",this.enter.bind(this)),bindFunction("pointer","leave",this.leave.bind(this))}},resolver:hoverConfigResolver},actions_76b8683e_esm_moveAction={key:"move",engine:class MoveEngine extends CoordinatesEngine{constructor(...args){super(...args),_defineProperty(this,"ingKey","moving")}move(event){this.config.mouseOnly&&"mouse"!==event.pointerType||(this.state._active?this.moveChange(event):this.moveStart(event),this.timeoutStore.add("moveEnd",this.moveEnd.bind(this)))}moveStart(event){this.start(event),this.computeValues(pointerValues(event)),this.compute(event),this.computeInitial(),this.emit()}moveChange(event){if(!this.state._active)return;const values=pointerValues(event),state=this.state;state._delta=V.sub(values,state._values),V.addTo(state._movement,state._delta),this.computeValues(values),this.compute(event),this.emit()}moveEnd(event){this.state._active&&(this.state._active=!1,this.compute(event),this.emit())}bind(bindFunction){bindFunction("pointer","change",this.move.bind(this)),bindFunction("pointer","leave",this.moveEnd.bind(this))}},resolver:moveConfigResolver},actions_76b8683e_esm_pinchAction={key:"pinch",engine:class PinchEngine extends Engine{constructor(...args){super(...args),_defineProperty(this,"ingKey","pinching"),_defineProperty(this,"aliasKey","da")}init(){this.state.offset=[1,0],this.state.lastOffset=[1,0],this.state._pointerEvents=new Map}reset(){super.reset();const state=this.state;state._touchIds=[],state.canceled=!1,state.cancel=this.cancel.bind(this),state.turns=0}computeOffset(){const{type:type,movement:movement,lastOffset:lastOffset}=this.state;this.state.offset="wheel"===type?V.add(movement,lastOffset):[(1+movement[0])*lastOffset[0],movement[1]+lastOffset[1]]}computeMovement(){const{offset:offset,lastOffset:lastOffset}=this.state;this.state.movement=[offset[0]/lastOffset[0],offset[1]-lastOffset[1]]}axisIntent(){const state=this.state,[_m0,_m1]=state._movement;if(!state.axis){const axisMovementDifference=30*Math.abs(_m0)-Math.abs(_m1);axisMovementDifference<0?state.axis="angle":axisMovementDifference>0&&(state.axis="scale")}}restrictToAxis(v){this.config.lockDirection&&("scale"===this.state.axis?v[1]=0:"angle"===this.state.axis&&(v[0]=0))}cancel(){const state=this.state;state.canceled||setTimeout((()=>{state.canceled=!0,state._active=!1,this.compute(),this.emit()}),0)}touchStart(event){this.ctrl.setEventIds(event);const state=this.state,ctrlTouchIds=this.ctrl.touchIds;if(state._active&&state._touchIds.every((id=>ctrlTouchIds.has(id))))return;if(ctrlTouchIds.size<2)return;this.start(event),state._touchIds=Array.from(ctrlTouchIds).slice(0,2);const payload=touchDistanceAngle(event,state._touchIds);payload&&this.pinchStart(event,payload)}pointerStart(event){if(null!=event.buttons&&event.buttons%2!=1)return;this.ctrl.setEventIds(event),event.target.setPointerCapture(event.pointerId);const state=this.state,_pointerEvents=state._pointerEvents,ctrlPointerIds=this.ctrl.pointerIds;if(state._active&&Array.from(_pointerEvents.keys()).every((id=>ctrlPointerIds.has(id))))return;if(_pointerEvents.size<2&&_pointerEvents.set(event.pointerId,event),state._pointerEvents.size<2)return;this.start(event);const payload=distanceAngle(...Array.from(_pointerEvents.values()));payload&&this.pinchStart(event,payload)}pinchStart(event,payload){this.state.origin=payload.origin,this.computeValues([payload.distance,payload.angle]),this.computeInitial(),this.compute(event),this.emit()}touchMove(event){if(!this.state._active)return;const payload=touchDistanceAngle(event,this.state._touchIds);payload&&this.pinchMove(event,payload)}pointerMove(event){const _pointerEvents=this.state._pointerEvents;if(_pointerEvents.has(event.pointerId)&&_pointerEvents.set(event.pointerId,event),!this.state._active)return;const payload=distanceAngle(...Array.from(_pointerEvents.values()));payload&&this.pinchMove(event,payload)}pinchMove(event,payload){const state=this.state,prev_a=state._values[1],delta_a=payload.angle-prev_a;let delta_turns=0;Math.abs(delta_a)>270&&(delta_turns+=Math.sign(delta_a)),this.computeValues([payload.distance,payload.angle-360*delta_turns]),state.origin=payload.origin,state.turns=delta_turns,state._movement=[state._values[0]/state._initial[0]-1,state._values[1]-state._initial[1]],this.compute(event),this.emit()}touchEnd(event){this.ctrl.setEventIds(event),this.state._active&&this.state._touchIds.some((id=>!this.ctrl.touchIds.has(id)))&&(this.state._active=!1,this.compute(event),this.emit())}pointerEnd(event){const state=this.state;this.ctrl.setEventIds(event);try{event.target.releasePointerCapture(event.pointerId)}catch(_unused){}state._pointerEvents.has(event.pointerId)&&state._pointerEvents.delete(event.pointerId),state._active&&state._pointerEvents.size<2&&(state._active=!1,this.compute(event),this.emit())}gestureStart(event){event.cancelable&&event.preventDefault();const state=this.state;state._active||(this.start(event),this.computeValues([event.scale,event.rotation]),state.origin=[event.clientX,event.clientY],this.compute(event),this.emit())}gestureMove(event){if(event.cancelable&&event.preventDefault(),!this.state._active)return;const state=this.state;this.computeValues([event.scale,event.rotation]),state.origin=[event.clientX,event.clientY];const _previousMovement=state._movement;state._movement=[event.scale-1,event.rotation],state._delta=V.sub(state._movement,_previousMovement),this.compute(event),this.emit()}gestureEnd(event){this.state._active&&(this.state._active=!1,this.compute(event),this.emit())}wheel(event){const modifierKey=this.config.modifierKey;modifierKey&&!event[modifierKey]||(this.state._active?this.wheelChange(event):this.wheelStart(event),this.timeoutStore.add("wheelEnd",this.wheelEnd.bind(this)))}wheelStart(event){this.start(event),this.wheelChange(event)}wheelChange(event){"uv"in event||event.cancelable&&event.preventDefault();const state=this.state;state._delta=[-wheelValues(event)[1]/100*state.offset[0],0],V.addTo(state._movement,state._delta),clampStateInternalMovementToBounds(state),this.state.origin=[event.clientX,event.clientY],this.compute(event),this.emit()}wheelEnd(){this.state._active&&(this.state._active=!1,this.compute(),this.emit())}bind(bindFunction){const device=this.config.device;device&&(bindFunction(device,"start",this[device+"Start"].bind(this)),bindFunction(device,"change",this[device+"Move"].bind(this)),bindFunction(device,"end",this[device+"End"].bind(this)),bindFunction(device,"cancel",this[device+"End"].bind(this)),bindFunction("lostPointerCapture","",this[device+"End"].bind(this))),this.config.pinchOnWheel&&bindFunction("wheel","",this.wheel.bind(this),{passive:!1})}},resolver:pinchConfigResolver},actions_76b8683e_esm_scrollAction={key:"scroll",engine:class ScrollEngine extends CoordinatesEngine{constructor(...args){super(...args),_defineProperty(this,"ingKey","scrolling")}scroll(event){this.state._active||this.start(event),this.scrollChange(event),this.timeoutStore.add("scrollEnd",this.scrollEnd.bind(this))}scrollChange(event){event.cancelable&&event.preventDefault();const state=this.state,values=function scrollValues(event){var _ref,_ref2;const{scrollX:scrollX,scrollY:scrollY,scrollLeft:scrollLeft,scrollTop:scrollTop}=event.currentTarget;return[null!==(_ref=null!=scrollX?scrollX:scrollLeft)&&void 0!==_ref?_ref:0,null!==(_ref2=null!=scrollY?scrollY:scrollTop)&&void 0!==_ref2?_ref2:0]}(event);state._delta=V.sub(values,state._values),V.addTo(state._movement,state._delta),this.computeValues(values),this.compute(event),this.emit()}scrollEnd(){this.state._active&&(this.state._active=!1,this.compute(),this.emit())}bind(bindFunction){bindFunction("scroll","",this.scroll.bind(this))}},resolver:scrollConfigResolver},actions_76b8683e_esm_wheelAction={key:"wheel",engine:class WheelEngine extends CoordinatesEngine{constructor(...args){super(...args),_defineProperty(this,"ingKey","wheeling")}wheel(event){this.state._active||this.start(event),this.wheelChange(event),this.timeoutStore.add("wheelEnd",this.wheelEnd.bind(this))}wheelChange(event){const state=this.state;state._delta=wheelValues(event),V.addTo(state._movement,state._delta),clampStateInternalMovementToBounds(state),this.compute(event),this.emit()}wheelEnd(){this.state._active&&(this.state._active=!1,this.compute(),this.emit())}bind(bindFunction){bindFunction("wheel","",this.wheel.bind(this))}},resolver:wheelConfigResolver};function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function use_gesture_core_esm_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}const sharedConfigResolver={target(value){if(value)return()=>"current"in value?value.current:value},enabled(value=!0){return value},window(value=(SUPPORT.isBrowser?window:void 0)){return value},eventOptions({passive:passive=!0,capture:capture=!1}={}){return{passive:passive,capture:capture}},transform(value){return value}},use_gesture_core_esm_excluded=["target","eventOptions","window","enabled","transform"];function resolveWith(config={},resolvers){const result={};for(const[key,resolver]of Object.entries(resolvers))switch(typeof resolver){case"function":result[key]=resolver.call(result,config[key],key,config);break;case"object":result[key]=resolveWith(config[key],resolver);break;case"boolean":resolver&&(result[key]=config[key])}return result}class EventStore{constructor(ctrl,gestureKey){_defineProperty(this,"_listeners",new Set),this._ctrl=ctrl,this._gestureKey=gestureKey}add(element,device,action,handler,options){const listeners=this._listeners,type=function toDomEventType(device,action=""){const deviceProps=EVENT_TYPE_MAP[device];return device+(deviceProps&&deviceProps[action]||action)}(device,action),eventOptions=_objectSpread2(_objectSpread2({},this._gestureKey?this._ctrl.config[this._gestureKey].eventOptions:{}),options);element.addEventListener(type,handler,eventOptions);const remove=()=>{element.removeEventListener(type,handler,eventOptions),listeners.delete(remove)};return listeners.add(remove),remove}clean(){this._listeners.forEach((remove=>remove())),this._listeners.clear()}}class TimeoutStore{constructor(){_defineProperty(this,"_timeouts",new Map)}add(key,callback,ms=140,...args){this.remove(key),this._timeouts.set(key,window.setTimeout(callback,ms,...args))}remove(key){const timeout=this._timeouts.get(key);timeout&&window.clearTimeout(timeout)}clean(){this._timeouts.forEach((timeout=>{window.clearTimeout(timeout)})),this._timeouts.clear()}}class use_gesture_core_esm_Controller{constructor(handlers){_defineProperty(this,"gestures",new Set),_defineProperty(this,"_targetEventStore",new EventStore(this)),_defineProperty(this,"gestureEventStores",{}),_defineProperty(this,"gestureTimeoutStores",{}),_defineProperty(this,"handlers",{}),_defineProperty(this,"config",{}),_defineProperty(this,"pointerIds",new Set),_defineProperty(this,"touchIds",new Set),_defineProperty(this,"state",{shared:{shiftKey:!1,metaKey:!1,ctrlKey:!1,altKey:!1}}),function resolveGestures(ctrl,internalHandlers){internalHandlers.drag&&setupGesture(ctrl,"drag");internalHandlers.wheel&&setupGesture(ctrl,"wheel");internalHandlers.scroll&&setupGesture(ctrl,"scroll");internalHandlers.move&&setupGesture(ctrl,"move");internalHandlers.pinch&&setupGesture(ctrl,"pinch");internalHandlers.hover&&setupGesture(ctrl,"hover")}(this,handlers)}setEventIds(event){return isTouch(event)?(this.touchIds=new Set(touchIds(event)),this.touchIds):"pointerId"in event?("pointerup"===event.type||"pointercancel"===event.type?this.pointerIds.delete(event.pointerId):"pointerdown"===event.type&&this.pointerIds.add(event.pointerId),this.pointerIds):void 0}applyHandlers(handlers,nativeHandlers){this.handlers=handlers,this.nativeHandlers=nativeHandlers}applyConfig(config,gestureKey){this.config=function parse(newConfig,gestureKey,_config={}){const _ref=newConfig,{target:target,eventOptions:eventOptions,window:window,enabled:enabled,transform:transform}=_ref,rest=_objectWithoutProperties(_ref,use_gesture_core_esm_excluded);if(_config.shared=resolveWith({target:target,eventOptions:eventOptions,window:window,enabled:enabled,transform:transform},sharedConfigResolver),gestureKey){const resolver=ConfigResolverMap.get(gestureKey);_config[gestureKey]=resolveWith(_objectSpread2({shared:_config.shared},rest),resolver)}else for(const key in rest){const resolver=ConfigResolverMap.get(key);resolver&&(_config[key]=resolveWith(_objectSpread2({shared:_config.shared},rest[key]),resolver))}return _config}(config,gestureKey,this.config)}clean(){this._targetEventStore.clean();for(const key of this.gestures)this.gestureEventStores[key].clean(),this.gestureTimeoutStores[key].clean()}effect(){return this.config.shared.target&&this.bind(),()=>this._targetEventStore.clean()}bind(...args){const sharedConfig=this.config.shared,props={};let target;if(!sharedConfig.target||(target=sharedConfig.target(),target)){if(sharedConfig.enabled){for(const gestureKey of this.gestures){const gestureConfig=this.config[gestureKey],bindFunction=bindToProps(props,gestureConfig.eventOptions,!!target);if(gestureConfig.enabled){new(EngineMap.get(gestureKey))(this,args,gestureKey).bind(bindFunction)}}const nativeBindFunction=bindToProps(props,sharedConfig.eventOptions,!!target);for(const eventKey in this.nativeHandlers)nativeBindFunction(eventKey,"",(event=>this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({},this.state.shared),{},{event:event,args:args}))),void 0,!0)}for(const handlerProp in props)props[handlerProp]=chain(...props[handlerProp]);if(!target)return props;for(const handlerProp in props){const{device:device,capture:capture,passive:passive}=parseProp(handlerProp);this._targetEventStore.add(target,device,"",props[handlerProp],{capture:capture,passive:passive})}}}}function setupGesture(ctrl,gestureKey){ctrl.gestures.add(gestureKey),ctrl.gestureEventStores[gestureKey]=new EventStore(ctrl,gestureKey),ctrl.gestureTimeoutStores[gestureKey]=new TimeoutStore}const bindToProps=(props,eventOptions,withPassiveOption)=>(device,action,handler,options={},isNative=!1)=>{var _options$capture,_options$passive;const capture=null!==(_options$capture=options.capture)&&void 0!==_options$capture?_options$capture:eventOptions.capture,passive=null!==(_options$passive=options.passive)&&void 0!==_options$passive?_options$passive:eventOptions.passive;let handlerProp=isNative?device:toHandlerProp(device,action,capture);withPassiveOption&&passive&&(handlerProp+="Passive"),props[handlerProp]=props[handlerProp]||[],props[handlerProp].push(handler)},RE_NOT_NATIVE=/^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;function registerGesture(actions,handlers,handlerKey,key,internalHandlers,config){if(!actions.has(handlerKey))return;if(!EngineMap.has(key))return void 0;const startKey=handlerKey+"Start",endKey=handlerKey+"End";internalHandlers[key]=state=>{let memo;return state.first&&startKey in handlers&&handlers[startKey](state),handlerKey in handlers&&(memo=handlers[handlerKey](state)),state.last&&endKey in handlers&&handlers[endKey](state),memo},config[key]=config[key]||{}}function parseMergedHandlers(mergedHandlers,mergedConfig){const[handlers,nativeHandlers,actions]=function sortHandlers(_handlers){const native={},handlers={},actions=new Set;for(let key in _handlers)RE_NOT_NATIVE.test(key)?(actions.add(RegExp.lastMatch),handlers[key]=_handlers[key]):native[key]=_handlers[key];return[handlers,native,actions]}(mergedHandlers),internalHandlers={};return registerGesture(actions,handlers,"onDrag","drag",internalHandlers,mergedConfig),registerGesture(actions,handlers,"onWheel","wheel",internalHandlers,mergedConfig),registerGesture(actions,handlers,"onScroll","scroll",internalHandlers,mergedConfig),registerGesture(actions,handlers,"onPinch","pinch",internalHandlers,mergedConfig),registerGesture(actions,handlers,"onMove","move",internalHandlers,mergedConfig),registerGesture(actions,handlers,"onHover","hover",internalHandlers,mergedConfig),{handlers:internalHandlers,config:mergedConfig,nativeHandlers:nativeHandlers}}function useRecognizers(handlers,config={},gestureKey,nativeHandlers){const ctrl=react.useMemo((()=>new use_gesture_core_esm_Controller(handlers)),[]);if(ctrl.applyHandlers(handlers,nativeHandlers),ctrl.applyConfig(config,gestureKey),react.useEffect(ctrl.effect.bind(ctrl)),react.useEffect((()=>ctrl.clean.bind(ctrl)),[]),void 0===config.target)return ctrl.bind.bind(ctrl)}function useGesture(handlers,config){const hook=function createUseGesture(actions){return actions.forEach(actions_76b8683e_esm_registerAction),function useGesture(_handlers,_config){const{handlers:handlers,nativeHandlers:nativeHandlers,config:config}=parseMergedHandlers(_handlers,_config||{});return useRecognizers(handlers,config,void 0,nativeHandlers)}}([actions_76b8683e_esm_dragAction,actions_76b8683e_esm_pinchAction,actions_76b8683e_esm_scrollAction,actions_76b8683e_esm_wheelAction,actions_76b8683e_esm_moveAction,actions_76b8683e_esm_hoverAction]);return hook(handlers,config||{})}function PresentationControls({enabled:enabled=!0,snap:snap,global:global,domElement:domElement,cursor:cursor=!0,children:children,speed:speed=1,rotation:rotation=[0,0,0],zoom:zoom=1,polar:polar=[0,Math.PI/2],azimuth:azimuth=[-1/0,1/0],config:config={mass:1,tension:170,friction:26}}){const events=(0,index_673ef987_esm.z)((state=>state.events)),gl=(0,index_673ef987_esm.z)((state=>state.gl)),explDomElement=domElement||events.connected||gl.domElement,{size:size}=(0,index_673ef987_esm.z)(),rPolar=react.useMemo((()=>[rotation[0]+polar[0],rotation[0]+polar[1]]),[rotation[0],polar[0],polar[1]]),rAzimuth=react.useMemo((()=>[rotation[1]+azimuth[0],rotation[1]+azimuth[1]]),[rotation[1],azimuth[0],azimuth[1]]),rInitial=react.useMemo((()=>[three_module.MathUtils.clamp(rotation[0],...rPolar),three_module.MathUtils.clamp(rotation[1],...rAzimuth),rotation[2]]),[rotation[0],rotation[1],rotation[2],rPolar,rAzimuth]),[spring,api]=useSpring((()=>({scale:1,rotation:rInitial,config:config})));react.useEffect((()=>{api.start({scale:1,rotation:rInitial,config:config})}),[rInitial]),react.useEffect((()=>{if(global&&cursor&&enabled)return explDomElement.style.cursor="grab",gl.domElement.style.cursor="",()=>{explDomElement.style.cursor="default",gl.domElement.style.cursor="default"}}),[global,cursor,explDomElement,enabled]);const bind=useGesture({onHover:({last:last})=>{cursor&&!global&&enabled&&(explDomElement.style.cursor=last?"auto":"grab")},onDrag:({down:down,delta:[x,y],memo:[oldY,oldX]=spring.rotation.animation.to||rInitial})=>{if(!enabled)return[y,x];cursor&&(explDomElement.style.cursor=down?"grabbing":"grab"),x=three_module.MathUtils.clamp(oldX+x/size.width*Math.PI*speed,...rAzimuth),y=three_module.MathUtils.clamp(oldY+y/size.height*Math.PI*speed,...rPolar);const sConfig=snap&&!down&&"boolean"!=typeof snap?snap:config;return api.start({scale:down&&y>rPolar[1]/2?zoom:1,rotation:snap&&!down?rInitial:[y,x,0],config:n=>"scale"===n?{...sConfig,friction:3*sConfig.friction}:sConfig}),[y,x]}},{target:global?explDomElement:void 0});return react.createElement(animated.group,(0,esm_extends.Z)({},null==bind?void 0:bind(),spring),children)}}}]);